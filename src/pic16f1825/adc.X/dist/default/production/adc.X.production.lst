

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Jan 08 17:29:03 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 1.42
    38                           ; Generated 13/04/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F1825 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000E                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  008C                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  010C                     	;# 
   116  010E                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011D                     	;# 
   129  011E                     	;# 
   130  018C                     	;# 
   131  018E                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  020E                     	;# 
   151  0211                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0216                     	;# 
   163  0216                     	;# 
   164  0217                     	;# 
   165  0217                     	;# 
   166  0291                     	;# 
   167  0291                     	;# 
   168  0292                     	;# 
   169  0293                     	;# 
   170  0294                     	;# 
   171  0295                     	;# 
   172  0295                     	;# 
   173  0296                     	;# 
   174  0298                     	;# 
   175  0298                     	;# 
   176  0299                     	;# 
   177  029A                     	;# 
   178  029B                     	;# 
   179  029C                     	;# 
   180  029D                     	;# 
   181  029E                     	;# 
   182  0311                     	;# 
   183  0311                     	;# 
   184  0312                     	;# 
   185  0313                     	;# 
   186  0318                     	;# 
   187  0318                     	;# 
   188  0319                     	;# 
   189  031A                     	;# 
   190  038C                     	;# 
   191  038E                     	;# 
   192  0391                     	;# 
   193  0392                     	;# 
   194  0393                     	;# 
   195  039A                     	;# 
   196  039C                     	;# 
   197  039D                     	;# 
   198  039E                     	;# 
   199  039F                     	;# 
   200  0415                     	;# 
   201  0416                     	;# 
   202  0417                     	;# 
   203  041C                     	;# 
   204  041D                     	;# 
   205  041E                     	;# 
   206  0FE4                     	;# 
   207  0FE5                     	;# 
   208  0FE6                     	;# 
   209  0FE7                     	;# 
   210  0FE8                     	;# 
   211  0FE9                     	;# 
   212  0FEA                     	;# 
   213  0FEB                     	;# 
   214  0FED                     	;# 
   215  0FEE                     	;# 
   216  0FEF                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000E                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  008C                     	;# 
   246  008E                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  010C                     	;# 
   262  010E                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0113                     	;# 
   266  0114                     	;# 
   267  0115                     	;# 
   268  0116                     	;# 
   269  0117                     	;# 
   270  0118                     	;# 
   271  0119                     	;# 
   272  011A                     	;# 
   273  011B                     	;# 
   274  011D                     	;# 
   275  011E                     	;# 
   276  018C                     	;# 
   277  018E                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020C                     	;# 
   296  020E                     	;# 
   297  0211                     	;# 
   298  0211                     	;# 
   299  0212                     	;# 
   300  0212                     	;# 
   301  0213                     	;# 
   302  0213                     	;# 
   303  0214                     	;# 
   304  0214                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0216                     	;# 
   309  0216                     	;# 
   310  0217                     	;# 
   311  0217                     	;# 
   312  0291                     	;# 
   313  0291                     	;# 
   314  0292                     	;# 
   315  0293                     	;# 
   316  0294                     	;# 
   317  0295                     	;# 
   318  0295                     	;# 
   319  0296                     	;# 
   320  0298                     	;# 
   321  0298                     	;# 
   322  0299                     	;# 
   323  029A                     	;# 
   324  029B                     	;# 
   325  029C                     	;# 
   326  029D                     	;# 
   327  029E                     	;# 
   328  0311                     	;# 
   329  0311                     	;# 
   330  0312                     	;# 
   331  0313                     	;# 
   332  0318                     	;# 
   333  0318                     	;# 
   334  0319                     	;# 
   335  031A                     	;# 
   336  038C                     	;# 
   337  038E                     	;# 
   338  0391                     	;# 
   339  0392                     	;# 
   340  0393                     	;# 
   341  039A                     	;# 
   342  039C                     	;# 
   343  039D                     	;# 
   344  039E                     	;# 
   345  039F                     	;# 
   346  0415                     	;# 
   347  0416                     	;# 
   348  0417                     	;# 
   349  041C                     	;# 
   350  041D                     	;# 
   351  041E                     	;# 
   352  0FE4                     	;# 
   353  0FE5                     	;# 
   354  0FE6                     	;# 
   355  0FE7                     	;# 
   356  0FE8                     	;# 
   357  0FE9                     	;# 
   358  0FEA                     	;# 
   359  0FEB                     	;# 
   360  0FED                     	;# 
   361  0FEE                     	;# 
   362  0FEF                     	;# 
   363  0000                     	;# 
   364  0001                     	;# 
   365  0002                     	;# 
   366  0003                     	;# 
   367  0004                     	;# 
   368  0005                     	;# 
   369  0006                     	;# 
   370  0007                     	;# 
   371  0008                     	;# 
   372  0009                     	;# 
   373  000A                     	;# 
   374  000B                     	;# 
   375  000C                     	;# 
   376  000E                     	;# 
   377  0011                     	;# 
   378  0012                     	;# 
   379  0013                     	;# 
   380  0015                     	;# 
   381  0016                     	;# 
   382  0016                     	;# 
   383  0017                     	;# 
   384  0018                     	;# 
   385  0019                     	;# 
   386  001A                     	;# 
   387  001B                     	;# 
   388  001C                     	;# 
   389  001E                     	;# 
   390  001F                     	;# 
   391  008C                     	;# 
   392  008E                     	;# 
   393  0091                     	;# 
   394  0092                     	;# 
   395  0093                     	;# 
   396  0095                     	;# 
   397  0096                     	;# 
   398  0097                     	;# 
   399  0098                     	;# 
   400  0099                     	;# 
   401  009A                     	;# 
   402  009B                     	;# 
   403  009B                     	;# 
   404  009C                     	;# 
   405  009D                     	;# 
   406  009E                     	;# 
   407  010C                     	;# 
   408  010E                     	;# 
   409  0111                     	;# 
   410  0112                     	;# 
   411  0113                     	;# 
   412  0114                     	;# 
   413  0115                     	;# 
   414  0116                     	;# 
   415  0117                     	;# 
   416  0118                     	;# 
   417  0119                     	;# 
   418  011A                     	;# 
   419  011B                     	;# 
   420  011D                     	;# 
   421  011E                     	;# 
   422  018C                     	;# 
   423  018E                     	;# 
   424  0191                     	;# 
   425  0191                     	;# 
   426  0192                     	;# 
   427  0193                     	;# 
   428  0193                     	;# 
   429  0193                     	;# 
   430  0194                     	;# 
   431  0195                     	;# 
   432  0196                     	;# 
   433  0199                     	;# 
   434  019A                     	;# 
   435  019B                     	;# 
   436  019B                     	;# 
   437  019C                     	;# 
   438  019D                     	;# 
   439  019E                     	;# 
   440  019F                     	;# 
   441  020C                     	;# 
   442  020E                     	;# 
   443  0211                     	;# 
   444  0211                     	;# 
   445  0212                     	;# 
   446  0212                     	;# 
   447  0213                     	;# 
   448  0213                     	;# 
   449  0214                     	;# 
   450  0214                     	;# 
   451  0215                     	;# 
   452  0215                     	;# 
   453  0215                     	;# 
   454  0216                     	;# 
   455  0216                     	;# 
   456  0217                     	;# 
   457  0217                     	;# 
   458  0291                     	;# 
   459  0291                     	;# 
   460  0292                     	;# 
   461  0293                     	;# 
   462  0294                     	;# 
   463  0295                     	;# 
   464  0295                     	;# 
   465  0296                     	;# 
   466  0298                     	;# 
   467  0298                     	;# 
   468  0299                     	;# 
   469  029A                     	;# 
   470  029B                     	;# 
   471  029C                     	;# 
   472  029D                     	;# 
   473  029E                     	;# 
   474  0311                     	;# 
   475  0311                     	;# 
   476  0312                     	;# 
   477  0313                     	;# 
   478  0318                     	;# 
   479  0318                     	;# 
   480  0319                     	;# 
   481  031A                     	;# 
   482  038C                     	;# 
   483  038E                     	;# 
   484  0391                     	;# 
   485  0392                     	;# 
   486  0393                     	;# 
   487  039A                     	;# 
   488  039C                     	;# 
   489  039D                     	;# 
   490  039E                     	;# 
   491  039F                     	;# 
   492  0415                     	;# 
   493  0416                     	;# 
   494  0417                     	;# 
   495  041C                     	;# 
   496  041D                     	;# 
   497  041E                     	;# 
   498  0FE4                     	;# 
   499  0FE5                     	;# 
   500  0FE6                     	;# 
   501  0FE7                     	;# 
   502  0FE8                     	;# 
   503  0FE9                     	;# 
   504  0FEA                     	;# 
   505  0FEB                     	;# 
   506  0FED                     	;# 
   507  0FEE                     	;# 
   508  0FEF                     	;# 
   509  0000                     	;# 
   510  0001                     	;# 
   511  0002                     	;# 
   512  0003                     	;# 
   513  0004                     	;# 
   514  0005                     	;# 
   515  0006                     	;# 
   516  0007                     	;# 
   517  0008                     	;# 
   518  0009                     	;# 
   519  000A                     	;# 
   520  000B                     	;# 
   521  000C                     	;# 
   522  000E                     	;# 
   523  0011                     	;# 
   524  0012                     	;# 
   525  0013                     	;# 
   526  0015                     	;# 
   527  0016                     	;# 
   528  0016                     	;# 
   529  0017                     	;# 
   530  0018                     	;# 
   531  0019                     	;# 
   532  001A                     	;# 
   533  001B                     	;# 
   534  001C                     	;# 
   535  001E                     	;# 
   536  001F                     	;# 
   537  008C                     	;# 
   538  008E                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0095                     	;# 
   543  0096                     	;# 
   544  0097                     	;# 
   545  0098                     	;# 
   546  0099                     	;# 
   547  009A                     	;# 
   548  009B                     	;# 
   549  009B                     	;# 
   550  009C                     	;# 
   551  009D                     	;# 
   552  009E                     	;# 
   553  010C                     	;# 
   554  010E                     	;# 
   555  0111                     	;# 
   556  0112                     	;# 
   557  0113                     	;# 
   558  0114                     	;# 
   559  0115                     	;# 
   560  0116                     	;# 
   561  0117                     	;# 
   562  0118                     	;# 
   563  0119                     	;# 
   564  011A                     	;# 
   565  011B                     	;# 
   566  011D                     	;# 
   567  011E                     	;# 
   568  018C                     	;# 
   569  018E                     	;# 
   570  0191                     	;# 
   571  0191                     	;# 
   572  0192                     	;# 
   573  0193                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0194                     	;# 
   577  0195                     	;# 
   578  0196                     	;# 
   579  0199                     	;# 
   580  019A                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019C                     	;# 
   584  019D                     	;# 
   585  019E                     	;# 
   586  019F                     	;# 
   587  020C                     	;# 
   588  020E                     	;# 
   589  0211                     	;# 
   590  0211                     	;# 
   591  0212                     	;# 
   592  0212                     	;# 
   593  0213                     	;# 
   594  0213                     	;# 
   595  0214                     	;# 
   596  0214                     	;# 
   597  0215                     	;# 
   598  0215                     	;# 
   599  0215                     	;# 
   600  0216                     	;# 
   601  0216                     	;# 
   602  0217                     	;# 
   603  0217                     	;# 
   604  0291                     	;# 
   605  0291                     	;# 
   606  0292                     	;# 
   607  0293                     	;# 
   608  0294                     	;# 
   609  0295                     	;# 
   610  0295                     	;# 
   611  0296                     	;# 
   612  0298                     	;# 
   613  0298                     	;# 
   614  0299                     	;# 
   615  029A                     	;# 
   616  029B                     	;# 
   617  029C                     	;# 
   618  029D                     	;# 
   619  029E                     	;# 
   620  0311                     	;# 
   621  0311                     	;# 
   622  0312                     	;# 
   623  0313                     	;# 
   624  0318                     	;# 
   625  0318                     	;# 
   626  0319                     	;# 
   627  031A                     	;# 
   628  038C                     	;# 
   629  038E                     	;# 
   630  0391                     	;# 
   631  0392                     	;# 
   632  0393                     	;# 
   633  039A                     	;# 
   634  039C                     	;# 
   635  039D                     	;# 
   636  039E                     	;# 
   637  039F                     	;# 
   638  0415                     	;# 
   639  0416                     	;# 
   640  0417                     	;# 
   641  041C                     	;# 
   642  041D                     	;# 
   643  041E                     	;# 
   644  0FE4                     	;# 
   645  0FE5                     	;# 
   646  0FE6                     	;# 
   647  0FE7                     	;# 
   648  0FE8                     	;# 
   649  0FE9                     	;# 
   650  0FEA                     	;# 
   651  0FEB                     	;# 
   652  0FED                     	;# 
   653  0FEE                     	;# 
   654  0FEF                     	;# 
   655  0000                     	;# 
   656  0001                     	;# 
   657  0002                     	;# 
   658  0003                     	;# 
   659  0004                     	;# 
   660  0005                     	;# 
   661  0006                     	;# 
   662  0007                     	;# 
   663  0008                     	;# 
   664  0009                     	;# 
   665  000A                     	;# 
   666  000B                     	;# 
   667  000C                     	;# 
   668  000E                     	;# 
   669  0011                     	;# 
   670  0012                     	;# 
   671  0013                     	;# 
   672  0015                     	;# 
   673  0016                     	;# 
   674  0016                     	;# 
   675  0017                     	;# 
   676  0018                     	;# 
   677  0019                     	;# 
   678  001A                     	;# 
   679  001B                     	;# 
   680  001C                     	;# 
   681  001E                     	;# 
   682  001F                     	;# 
   683  008C                     	;# 
   684  008E                     	;# 
   685  0091                     	;# 
   686  0092                     	;# 
   687  0093                     	;# 
   688  0095                     	;# 
   689  0096                     	;# 
   690  0097                     	;# 
   691  0098                     	;# 
   692  0099                     	;# 
   693  009A                     	;# 
   694  009B                     	;# 
   695  009B                     	;# 
   696  009C                     	;# 
   697  009D                     	;# 
   698  009E                     	;# 
   699  010C                     	;# 
   700  010E                     	;# 
   701  0111                     	;# 
   702  0112                     	;# 
   703  0113                     	;# 
   704  0114                     	;# 
   705  0115                     	;# 
   706  0116                     	;# 
   707  0117                     	;# 
   708  0118                     	;# 
   709  0119                     	;# 
   710  011A                     	;# 
   711  011B                     	;# 
   712  011D                     	;# 
   713  011E                     	;# 
   714  018C                     	;# 
   715  018E                     	;# 
   716  0191                     	;# 
   717  0191                     	;# 
   718  0192                     	;# 
   719  0193                     	;# 
   720  0193                     	;# 
   721  0193                     	;# 
   722  0194                     	;# 
   723  0195                     	;# 
   724  0196                     	;# 
   725  0199                     	;# 
   726  019A                     	;# 
   727  019B                     	;# 
   728  019B                     	;# 
   729  019C                     	;# 
   730  019D                     	;# 
   731  019E                     	;# 
   732  019F                     	;# 
   733  020C                     	;# 
   734  020E                     	;# 
   735  0211                     	;# 
   736  0211                     	;# 
   737  0212                     	;# 
   738  0212                     	;# 
   739  0213                     	;# 
   740  0213                     	;# 
   741  0214                     	;# 
   742  0214                     	;# 
   743  0215                     	;# 
   744  0215                     	;# 
   745  0215                     	;# 
   746  0216                     	;# 
   747  0216                     	;# 
   748  0217                     	;# 
   749  0217                     	;# 
   750  0291                     	;# 
   751  0291                     	;# 
   752  0292                     	;# 
   753  0293                     	;# 
   754  0294                     	;# 
   755  0295                     	;# 
   756  0295                     	;# 
   757  0296                     	;# 
   758  0298                     	;# 
   759  0298                     	;# 
   760  0299                     	;# 
   761  029A                     	;# 
   762  029B                     	;# 
   763  029C                     	;# 
   764  029D                     	;# 
   765  029E                     	;# 
   766  0311                     	;# 
   767  0311                     	;# 
   768  0312                     	;# 
   769  0313                     	;# 
   770  0318                     	;# 
   771  0318                     	;# 
   772  0319                     	;# 
   773  031A                     	;# 
   774  038C                     	;# 
   775  038E                     	;# 
   776  0391                     	;# 
   777  0392                     	;# 
   778  0393                     	;# 
   779  039A                     	;# 
   780  039C                     	;# 
   781  039D                     	;# 
   782  039E                     	;# 
   783  039F                     	;# 
   784  0415                     	;# 
   785  0416                     	;# 
   786  0417                     	;# 
   787  041C                     	;# 
   788  041D                     	;# 
   789  041E                     	;# 
   790  0FE4                     	;# 
   791  0FE5                     	;# 
   792  0FE6                     	;# 
   793  0FE7                     	;# 
   794  0FE8                     	;# 
   795  0FE9                     	;# 
   796  0FEA                     	;# 
   797  0FEB                     	;# 
   798  0FED                     	;# 
   799  0FEE                     	;# 
   800  0FEF                     	;# 
   801  0000                     	;# 
   802  0001                     	;# 
   803  0002                     	;# 
   804  0003                     	;# 
   805  0004                     	;# 
   806  0005                     	;# 
   807  0006                     	;# 
   808  0007                     	;# 
   809  0008                     	;# 
   810  0009                     	;# 
   811  000A                     	;# 
   812  000B                     	;# 
   813  000C                     	;# 
   814  000E                     	;# 
   815  0011                     	;# 
   816  0012                     	;# 
   817  0013                     	;# 
   818  0015                     	;# 
   819  0016                     	;# 
   820  0016                     	;# 
   821  0017                     	;# 
   822  0018                     	;# 
   823  0019                     	;# 
   824  001A                     	;# 
   825  001B                     	;# 
   826  001C                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  008C                     	;# 
   830  008E                     	;# 
   831  0091                     	;# 
   832  0092                     	;# 
   833  0093                     	;# 
   834  0095                     	;# 
   835  0096                     	;# 
   836  0097                     	;# 
   837  0098                     	;# 
   838  0099                     	;# 
   839  009A                     	;# 
   840  009B                     	;# 
   841  009B                     	;# 
   842  009C                     	;# 
   843  009D                     	;# 
   844  009E                     	;# 
   845  010C                     	;# 
   846  010E                     	;# 
   847  0111                     	;# 
   848  0112                     	;# 
   849  0113                     	;# 
   850  0114                     	;# 
   851  0115                     	;# 
   852  0116                     	;# 
   853  0117                     	;# 
   854  0118                     	;# 
   855  0119                     	;# 
   856  011A                     	;# 
   857  011B                     	;# 
   858  011D                     	;# 
   859  011E                     	;# 
   860  018C                     	;# 
   861  018E                     	;# 
   862  0191                     	;# 
   863  0191                     	;# 
   864  0192                     	;# 
   865  0193                     	;# 
   866  0193                     	;# 
   867  0193                     	;# 
   868  0194                     	;# 
   869  0195                     	;# 
   870  0196                     	;# 
   871  0199                     	;# 
   872  019A                     	;# 
   873  019B                     	;# 
   874  019B                     	;# 
   875  019C                     	;# 
   876  019D                     	;# 
   877  019E                     	;# 
   878  019F                     	;# 
   879  020C                     	;# 
   880  020E                     	;# 
   881  0211                     	;# 
   882  0211                     	;# 
   883  0212                     	;# 
   884  0212                     	;# 
   885  0213                     	;# 
   886  0213                     	;# 
   887  0214                     	;# 
   888  0214                     	;# 
   889  0215                     	;# 
   890  0215                     	;# 
   891  0215                     	;# 
   892  0216                     	;# 
   893  0216                     	;# 
   894  0217                     	;# 
   895  0217                     	;# 
   896  0291                     	;# 
   897  0291                     	;# 
   898  0292                     	;# 
   899  0293                     	;# 
   900  0294                     	;# 
   901  0295                     	;# 
   902  0295                     	;# 
   903  0296                     	;# 
   904  0298                     	;# 
   905  0298                     	;# 
   906  0299                     	;# 
   907  029A                     	;# 
   908  029B                     	;# 
   909  029C                     	;# 
   910  029D                     	;# 
   911  029E                     	;# 
   912  0311                     	;# 
   913  0311                     	;# 
   914  0312                     	;# 
   915  0313                     	;# 
   916  0318                     	;# 
   917  0318                     	;# 
   918  0319                     	;# 
   919  031A                     	;# 
   920  038C                     	;# 
   921  038E                     	;# 
   922  0391                     	;# 
   923  0392                     	;# 
   924  0393                     	;# 
   925  039A                     	;# 
   926  039C                     	;# 
   927  039D                     	;# 
   928  039E                     	;# 
   929  039F                     	;# 
   930  0415                     	;# 
   931  0416                     	;# 
   932  0417                     	;# 
   933  041C                     	;# 
   934  041D                     	;# 
   935  041E                     	;# 
   936  0FE4                     	;# 
   937  0FE5                     	;# 
   938  0FE6                     	;# 
   939  0FE7                     	;# 
   940  0FE8                     	;# 
   941  0FE9                     	;# 
   942  0FEA                     	;# 
   943  0FEB                     	;# 
   944  0FED                     	;# 
   945  0FEE                     	;# 
   946  0FEF                     	;# 
   947  0000                     	;# 
   948  0001                     	;# 
   949  0002                     	;# 
   950  0003                     	;# 
   951  0004                     	;# 
   952  0005                     	;# 
   953  0006                     	;# 
   954  0007                     	;# 
   955  0008                     	;# 
   956  0009                     	;# 
   957  000A                     	;# 
   958  000B                     	;# 
   959  000C                     	;# 
   960  000E                     	;# 
   961  0011                     	;# 
   962  0012                     	;# 
   963  0013                     	;# 
   964  0015                     	;# 
   965  0016                     	;# 
   966  0016                     	;# 
   967  0017                     	;# 
   968  0018                     	;# 
   969  0019                     	;# 
   970  001A                     	;# 
   971  001B                     	;# 
   972  001C                     	;# 
   973  001E                     	;# 
   974  001F                     	;# 
   975  008C                     	;# 
   976  008E                     	;# 
   977  0091                     	;# 
   978  0092                     	;# 
   979  0093                     	;# 
   980  0095                     	;# 
   981  0096                     	;# 
   982  0097                     	;# 
   983  0098                     	;# 
   984  0099                     	;# 
   985  009A                     	;# 
   986  009B                     	;# 
   987  009B                     	;# 
   988  009C                     	;# 
   989  009D                     	;# 
   990  009E                     	;# 
   991  010C                     	;# 
   992  010E                     	;# 
   993  0111                     	;# 
   994  0112                     	;# 
   995  0113                     	;# 
   996  0114                     	;# 
   997  0115                     	;# 
   998  0116                     	;# 
   999  0117                     	;# 
  1000  0118                     	;# 
  1001  0119                     	;# 
  1002  011A                     	;# 
  1003  011B                     	;# 
  1004  011D                     	;# 
  1005  011E                     	;# 
  1006  018C                     	;# 
  1007  018E                     	;# 
  1008  0191                     	;# 
  1009  0191                     	;# 
  1010  0192                     	;# 
  1011  0193                     	;# 
  1012  0193                     	;# 
  1013  0193                     	;# 
  1014  0194                     	;# 
  1015  0195                     	;# 
  1016  0196                     	;# 
  1017  0199                     	;# 
  1018  019A                     	;# 
  1019  019B                     	;# 
  1020  019B                     	;# 
  1021  019C                     	;# 
  1022  019D                     	;# 
  1023  019E                     	;# 
  1024  019F                     	;# 
  1025  020C                     	;# 
  1026  020E                     	;# 
  1027  0211                     	;# 
  1028  0211                     	;# 
  1029  0212                     	;# 
  1030  0212                     	;# 
  1031  0213                     	;# 
  1032  0213                     	;# 
  1033  0214                     	;# 
  1034  0214                     	;# 
  1035  0215                     	;# 
  1036  0215                     	;# 
  1037  0215                     	;# 
  1038  0216                     	;# 
  1039  0216                     	;# 
  1040  0217                     	;# 
  1041  0217                     	;# 
  1042  0291                     	;# 
  1043  0291                     	;# 
  1044  0292                     	;# 
  1045  0293                     	;# 
  1046  0294                     	;# 
  1047  0295                     	;# 
  1048  0295                     	;# 
  1049  0296                     	;# 
  1050  0298                     	;# 
  1051  0298                     	;# 
  1052  0299                     	;# 
  1053  029A                     	;# 
  1054  029B                     	;# 
  1055  029C                     	;# 
  1056  029D                     	;# 
  1057  029E                     	;# 
  1058  0311                     	;# 
  1059  0311                     	;# 
  1060  0312                     	;# 
  1061  0313                     	;# 
  1062  0318                     	;# 
  1063  0318                     	;# 
  1064  0319                     	;# 
  1065  031A                     	;# 
  1066  038C                     	;# 
  1067  038E                     	;# 
  1068  0391                     	;# 
  1069  0392                     	;# 
  1070  0393                     	;# 
  1071  039A                     	;# 
  1072  039C                     	;# 
  1073  039D                     	;# 
  1074  039E                     	;# 
  1075  039F                     	;# 
  1076  0415                     	;# 
  1077  0416                     	;# 
  1078  0417                     	;# 
  1079  041C                     	;# 
  1080  041D                     	;# 
  1081  041E                     	;# 
  1082  0FE4                     	;# 
  1083  0FE5                     	;# 
  1084  0FE6                     	;# 
  1085  0FE7                     	;# 
  1086  0FE8                     	;# 
  1087  0FE9                     	;# 
  1088  0FEA                     	;# 
  1089  0FEB                     	;# 
  1090  0FED                     	;# 
  1091  0FEE                     	;# 
  1092  0FEF                     	;# 
  1093                           
  1094                           	psect	stringtext1
  1095  023D                     __pstringtext1:	
  1096  023D                     _dpowers:	
  1097  023D  3401               	retlw	1
  1098  023E  3400               	retlw	0
  1099  023F  340A               	retlw	10
  1100  0240  3400               	retlw	0
  1101  0241  3464               	retlw	100
  1102  0242  3400               	retlw	0
  1103  0243  34E8               	retlw	232
  1104  0244  3403               	retlw	3
  1105  0245  3410               	retlw	16
  1106  0246  3427               	retlw	39
  1107  0247                     __end_of_dpowers:	
  1108                           
  1109                           	psect	nvBANK0
  1110  004B                     __pnvBANK0:	
  1111  004B                     _timer0ReloadVal:	
  1112  004B                     	ds	1
  1113  004C                     _eusartTxBufferRemaining:	
  1114  004C                     	ds	1
  1115  0015                     _TMR0	set	21
  1116  0011                     _PIR1bits	set	17
  1117  000B                     _INTCONbits	set	11
  1118  005A                     _TMR0IF	set	90
  1119  0095                     _OPTION_REG	set	149
  1120  009D                     _ADCON0bits	set	157
  1121  009C                     _ADRESH	set	156
  1122  009B                     _ADRESL	set	155
  1123  009E                     _ADCON1	set	158
  1124  009D                     _ADCON0	set	157
  1125  0097                     _WDTCON	set	151
  1126  0098                     _OSCTUNE	set	152
  1127  0099                     _OSCCON	set	153
  1128  0091                     _PIE1bits	set	145
  1129  0095                     _OPTION_REGbits	set	149
  1130  008E                     _TRISC	set	142
  1131  008C                     _TRISA	set	140
  1132  011D                     _APFCON0	set	285
  1133  011E                     _APFCON1	set	286
  1134  010E                     _LATC	set	270
  1135  010C                     _LATA	set	268
  1136  0199                     _RCREG	set	409
  1137  019A                     _TXREG	set	410
  1138  019D                     _RCSTAbits	set	413
  1139  019C                     _SPBRGH	set	412
  1140  019B                     _SPBRGL	set	411
  1141  019E                     _TXSTA	set	414
  1142  019D                     _RCSTA	set	413
  1143  019F                     _BAUDCON	set	415
  1144  018C                     _ANSELA	set	396
  1145  018E                     _ANSELC	set	398
  1146  020E                     _WPUC	set	526
  1147  020C                     _WPUA	set	524
  1148                           
  1149                           	psect	stringtext2
  1150  026C                     __pstringtext2:	
  1151  026C                     STR_1:	
  1152  026C  3425               	retlw	37	;'%'
  1153  026D  3464               	retlw	100	;'d'
  1154  026E  340A               	retlw	10
  1155  026F  3400               	retlw	0
  1156                           
  1157                           	psect	stringtext3
  1158  0000                     __pstringtext3:	
  1159                           
  1160                           ; #config settings
  1161  0000                     
  1162                           	psect	cinit
  1163  0026                     start_initialization:	
  1164  0026                     __initialization:	
  1165                           
  1166                           ; Clear objects allocated to COMMON
  1167  0026  01FA               	clrf	__pbssCOMMON& (0+127)
  1168  0027  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1169                           
  1170                           ; Clear objects allocated to BANK0
  1171  0028  3037               	movlw	low __pbssBANK0
  1172  0029  0084               	movwf	4
  1173  002A  3000               	movlw	high __pbssBANK0
  1174  002B  0085               	movwf	5
  1175  002C  3014               	movlw	20
  1176  002D  3182  2256         	fcall	clear_ram0
  1177  002F                     end_of_initialization:	
  1178                           ;End of C runtime variable initialization code
  1179                           
  1180  002F                     __end_of__initialization:	
  1181  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1182  0030  0020               	movlb	0
  1183  0031  3180  28EB         	ljmp	_main	;jump to C main() function
  1184                           
  1185                           	psect	bssCOMMON
  1186  007A                     __pbssCOMMON:	
  1187  007A                     _eusartTxTail:	
  1188  007A                     	ds	1
  1189  007B                     _eusartTxHead:	
  1190  007B                     	ds	1
  1191                           
  1192                           	psect	bssBANK0
  1193  0037                     __pbssBANK0:	
  1194  0037                     _eusartRxBuffer:	
  1195  0037                     	ds	8
  1196  003F                     _eusartTxBuffer:	
  1197  003F                     	ds	8
  1198  0047                     _eusartRxCount:	
  1199  0047                     	ds	1
  1200  0048                     _eusartRxTail:	
  1201  0048                     	ds	1
  1202  0049                     _eusartRxHead:	
  1203  0049                     	ds	1
  1204  004A                     _tmr:	
  1205  004A                     	ds	1
  1206                           
  1207                           	psect	clrtext
  1208  0256                     clear_ram0:	
  1209                           ;	Called with FSR0 containing the base address, and
  1210                           ;	WREG with the size to clear
  1211                           
  1212  0256  0064               	clrwdt	;clear the watchdog before getting into this loop
  1213  0257                     clrloop0:	
  1214  0257  0180               	clrf	0	;clear RAM location pointed to by FSR
  1215  0258  3101               	addfsr 0,1
  1216  0259  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1217  025A  2A57               	goto	clrloop0	;have we reached the end yet?
  1218  025B  3400               	retlw	0	;all done for this memory range, return
  1219                           
  1220                           	psect	cstackCOMMON
  1221  0070                     __pcstackCOMMON:	
  1222  0070                     ?_EUSART_Transmit_ISR:	
  1223  0070                     ??_EUSART_Transmit_ISR:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  0070                     ?_EUSART_Receive_ISR:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     ??_EUSART_Receive_ISR:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0070                     ?_OSCILLATOR_Initialize:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  0070                     ?_WDT_Initialize:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238  0070                     ?_ADC_Initialize:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  0070                     ?_TMR0_Initialize:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244  0070                     ?_EUSART_Initialize:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  0070                     ?_TMR0_HasOverflowOccured:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250  0070                     ?_ADC_SelectChannel:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253  0070                     ?_ADC_StartConversion:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256  0070                     ?_ADC_IsConversionDone:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259  0070                     ?_PIN_MANAGER_Initialize:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262  0070                     ?_INTERRUPT_InterruptManager:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265  0070                     ?_SYSTEM_Initialize:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268  0070                     ?_main:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271  0070                     ?_EUSART_Write:	
  1272                           ; 1 bytes @ 0x0
  1273                           
  1274  0070                     ?_putch:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277                           
  1278                           ; 1 bytes @ 0x0
  1279  0070                     	ds	1
  1280  0071                     ??_INTERRUPT_InterruptManager:	
  1281                           
  1282                           ; 1 bytes @ 0x1
  1283  0071                     	ds	1
  1284  0072                     ??_OSCILLATOR_Initialize:	
  1285  0072                     ??_WDT_Initialize:	
  1286                           ; 1 bytes @ 0x2
  1287                           
  1288  0072                     ??_ADC_Initialize:	
  1289                           ; 1 bytes @ 0x2
  1290                           
  1291  0072                     ??_TMR0_Initialize:	
  1292                           ; 1 bytes @ 0x2
  1293                           
  1294  0072                     ??_EUSART_Initialize:	
  1295                           ; 1 bytes @ 0x2
  1296                           
  1297  0072                     ??_TMR0_HasOverflowOccured:	
  1298                           ; 1 bytes @ 0x2
  1299                           
  1300  0072                     ??_ADC_SelectChannel:	
  1301                           ; 1 bytes @ 0x2
  1302                           
  1303  0072                     ??_ADC_StartConversion:	
  1304                           ; 1 bytes @ 0x2
  1305                           
  1306  0072                     ??_ADC_IsConversionDone:	
  1307                           ; 1 bytes @ 0x2
  1308                           
  1309  0072                     ??_PIN_MANAGER_Initialize:	
  1310                           ; 1 bytes @ 0x2
  1311                           
  1312  0072                     ??_EUSART_Write:	
  1313                           ; 1 bytes @ 0x2
  1314                           
  1315  0072                     ?_ADC_GetConversionResult:	
  1316                           ; 1 bytes @ 0x2
  1317                           
  1318  0072                     ?___lwdiv:	
  1319                           ; 2 bytes @ 0x2
  1320                           
  1321  0072                     ___lwdiv@divisor:	
  1322                           ; 2 bytes @ 0x2
  1323                           
  1324                           
  1325                           ; 2 bytes @ 0x2
  1326  0072                     	ds	1
  1327  0073                     ??_SYSTEM_Initialize:	
  1328  0073                     EUSART_Write@txData:	
  1329                           ; 1 bytes @ 0x3
  1330                           
  1331  0073                     ADC_SelectChannel@channel:	
  1332                           ; 1 bytes @ 0x3
  1333                           
  1334                           
  1335                           ; 1 bytes @ 0x3
  1336  0073                     	ds	1
  1337  0074                     ??_ADC_GetConversionResult:	
  1338  0074                     ??_putch:	
  1339                           ; 1 bytes @ 0x4
  1340                           
  1341  0074                     putch@txData:	
  1342                           ; 1 bytes @ 0x4
  1343                           
  1344  0074                     ___lwdiv@dividend:	
  1345                           ; 1 bytes @ 0x4
  1346                           
  1347                           
  1348                           ; 2 bytes @ 0x4
  1349  0074                     	ds	2
  1350  0076                     ??___lwdiv:	
  1351                           
  1352                           ; 1 bytes @ 0x6
  1353  0076                     	ds	1
  1354  0077                     ___lwdiv@quotient:	
  1355                           
  1356                           ; 2 bytes @ 0x7
  1357  0077                     	ds	2
  1358  0079                     ___lwdiv@counter:	
  1359                           
  1360                           ; 1 bytes @ 0x9
  1361  0079                     	ds	1
  1362                           
  1363                           	psect	cstackBANK0
  1364  0020                     __pcstackBANK0:	
  1365  0020                     ?___lwmod:	
  1366  0020                     ___lwmod@divisor:	
  1367                           ; 2 bytes @ 0x0
  1368                           
  1369                           
  1370                           ; 2 bytes @ 0x0
  1371  0020                     	ds	2
  1372  0022                     ___lwmod@dividend:	
  1373                           
  1374                           ; 2 bytes @ 0x2
  1375  0022                     	ds	2
  1376  0024                     ??___lwmod:	
  1377                           
  1378                           ; 1 bytes @ 0x4
  1379  0024                     	ds	1
  1380  0025                     ___lwmod@counter:	
  1381                           
  1382                           ; 1 bytes @ 0x5
  1383  0025                     	ds	1
  1384  0026                     ?_printf:	
  1385  0026                     printf@f:	
  1386                           ; 2 bytes @ 0x6
  1387                           
  1388                           
  1389                           ; 2 bytes @ 0x6
  1390  0026                     	ds	4
  1391  002A                     ??_printf:	
  1392                           
  1393                           ; 1 bytes @ 0xA
  1394  002A                     	ds	4
  1395  002E                     printf@ap:	
  1396                           
  1397                           ; 1 bytes @ 0xE
  1398  002E                     	ds	1
  1399  002F                     printf@flag:	
  1400                           
  1401                           ; 1 bytes @ 0xF
  1402  002F                     	ds	1
  1403  0030                     printf@prec:	
  1404                           
  1405                           ; 1 bytes @ 0x10
  1406  0030                     	ds	1
  1407  0031                     printf@val:	
  1408                           
  1409                           ; 2 bytes @ 0x11
  1410  0031                     	ds	2
  1411  0033                     printf@c:	
  1412                           
  1413                           ; 1 bytes @ 0x13
  1414  0033                     	ds	1
  1415  0034                     ??_main:	
  1416                           
  1417                           ; 1 bytes @ 0x14
  1418  0034                     	ds	1
  1419  0035                     main@out:	
  1420                           
  1421                           ; 2 bytes @ 0x15
  1422  0035                     	ds	2
  1423                           
  1424                           	psect	maintext
  1425  00EB                     __pmaintext:	
  1426 ;;
  1427 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1428 ;;
  1429 ;; *************** function _main *****************
  1430 ;; Defined at:
  1431 ;;		line 6 in file "main.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  out             2   21[BANK0 ] unsigned int 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : B1F/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1446 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1448 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1449 ;;Total ram usage:        3 bytes
  1450 ;; Hardware stack levels required when called:    5
  1451 ;; This function calls:
  1452 ;;		_ADC_GetConversionResult
  1453 ;;		_ADC_IsConversionDone
  1454 ;;		_ADC_SelectChannel
  1455 ;;		_ADC_StartConversion
  1456 ;;		_SYSTEM_Initialize
  1457 ;;		_TMR0_HasOverflowOccured
  1458 ;;		_printf
  1459 ;; This function is called by:
  1460 ;;		Startup code after reset
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _main
  1466  00EB                     _main:	
  1467                           
  1468                           ;main.c: 9: SYSTEM_Initialize();
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1472  00EB  3182  2210  3180   	fcall	_SYSTEM_Initialize
  1473                           
  1474                           ;main.c: 10: (INTCONbits.GIE = 1);
  1475  00EE  178B               	bsf	11,7	;volatile
  1476                           
  1477                           ;main.c: 11: (INTCONbits.PEIE = 1);
  1478  00EF  170B               	bsf	11,6	;volatile
  1479  00F0                     l99:	
  1480                           ;main.c: 13: while (1)
  1481                           
  1482                           
  1483                           ;main.c: 14: {
  1484                           ;main.c: 15: if (TMR0_HasOverflowOccured()) {
  1485  00F0  3182  2270  3180   	fcall	_TMR0_HasOverflowOccured
  1486  00F3  3A00               	xorlw	0
  1487  00F4  1903               	skipnz
  1488  00F5  28F0               	goto	l99
  1489                           
  1490                           ;main.c: 16: TMR0IF = 0;
  1491  00F6  110B               	bcf	11,2	;volatile
  1492                           
  1493                           ;main.c: 17: if (++tmr >= 4) {
  1494  00F7  3001               	movlw	1
  1495  00F8  0020               	movlb	0	; select bank0
  1496  00F9  00B4               	movwf	??_main
  1497  00FA  0834               	movf	??_main,w
  1498  00FB  07CA               	addwf	_tmr,f
  1499  00FC  3004               	movlw	4
  1500  00FD  024A               	subwf	_tmr,w
  1501  00FE  1C03               	skipc
  1502  00FF  28F0               	goto	l99
  1503                           
  1504                           ;main.c: 18: tmr = 0;
  1505  0100  01CA               	clrf	_tmr
  1506                           
  1507                           ;main.c: 19: ADC_SelectChannel(channel_AN3);
  1508  0101  3003               	movlw	3
  1509  0102  3182  2230  3180   	fcall	_ADC_SelectChannel
  1510                           
  1511                           ;main.c: 20: ADC_StartConversion();
  1512  0105  3182  2278  3180   	fcall	_ADC_StartConversion
  1513  0108                     l1387:	
  1514                           ;main.c: 21: while(!ADC_IsConversionDone());
  1515                           
  1516  0108  3182  224F  3180   	fcall	_ADC_IsConversionDone
  1517  010B  3A00               	xorlw	0
  1518  010C  1903               	skipnz
  1519  010D  2908               	goto	l1387
  1520                           
  1521                           ;main.c: 22: adc_result_t out = ADC_GetConversionResult();
  1522  010E  3182  225C  3180   	fcall	_ADC_GetConversionResult
  1523  0111  0873               	movf	?_ADC_GetConversionResult+1,w
  1524  0112  0020               	movlb	0	; select bank0
  1525  0113  00B6               	movwf	main@out+1
  1526  0114  0872               	movf	?_ADC_GetConversionResult,w
  1527  0115  00B5               	movwf	main@out
  1528                           
  1529                           ;main.c: 23: printf("%d\n", out);
  1530  0116  306C               	movlw	low (STR_1| (0+32768))
  1531  0117  00A6               	movwf	printf@f
  1532  0118  3082               	movlw	high (STR_1| (0+32768))
  1533  0119  00A7               	movwf	printf@f+1
  1534  011A  0836               	movf	main@out+1,w
  1535  011B  00A9               	movwf	?_printf+3
  1536  011C  0835               	movf	main@out,w
  1537  011D  00A8               	movwf	?_printf+2
  1538  011E  3180  2033  3180   	fcall	_printf
  1539  0121  28F0               	goto	l99
  1540  0122                     __end_of_main:	
  1541                           
  1542                           	psect	text1
  1543  0033                     __ptext1:	
  1544 ;; *************** function _printf *****************
  1545 ;; Defined at:
  1546 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  f               2    6[BANK0 ] PTR const unsigned char 
  1549 ;;		 -> STR_1(4), 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  tmpval          4    0        struct .
  1552 ;;  val             2   17[BANK0 ] unsigned int 
  1553 ;;  cp              2    0        PTR const unsigned char 
  1554 ;;  len             2    0        unsigned int 
  1555 ;;  c               1   19[BANK0 ] char 
  1556 ;;  prec            1   16[BANK0 ] char 
  1557 ;;  flag            1   15[BANK0 ] unsigned char 
  1558 ;;  ap              1   14[BANK0 ] PTR void [1]
  1559 ;;		 -> ?_printf(2), 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  2    6[BANK0 ] int 
  1562 ;; Registers used:
  1563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1569 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1570 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1571 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1572 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1573 ;;Total ram usage:       14 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:    4
  1576 ;; This function calls:
  1577 ;;		___lwdiv
  1578 ;;		___lwmod
  1579 ;;		_putch
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           
  1586                           ;psect for function _printf
  1587  0033                     _printf:	
  1588                           
  1589                           ;doprnt.c: 466: va_list ap;
  1590                           ;doprnt.c: 499: signed char c;
  1591                           ;doprnt.c: 506: signed char prec;
  1592                           ;doprnt.c: 508: unsigned char flag;
  1593                           ;doprnt.c: 523: union {
  1594                           ;doprnt.c: 524: unsigned long vd;
  1595                           ;doprnt.c: 525: double integ;
  1596                           ;doprnt.c: 526: } tmpval;
  1597                           ;doprnt.c: 528: unsigned int val;
  1598                           ;doprnt.c: 529: unsigned len;
  1599                           ;doprnt.c: 530: const char * cp;
  1600                           ;doprnt.c: 533: *ap = __va_start();
  1601                           
  1602                           ;incstack = 0
  1603                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1604  0033  3028               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1605  0034  0020               	movlb	0	; select bank0
  1606  0035  00AA               	movwf	??_printf
  1607  0036  082A               	movf	??_printf,w
  1608  0037  00AE               	movwf	printf@ap
  1609  0038                     l1369:	
  1610                           ;doprnt.c: 536: while(c = *f++) {
  1611                           
  1612  0038  0020               	movlb	0	; select bank0
  1613  0039  0827               	movf	printf@f+1,w
  1614  003A  00AB               	movwf	??_printf+1
  1615  003B  0826               	movf	printf@f,w
  1616  003C  00AA               	movwf	??_printf
  1617  003D  0AA6               	incf	printf@f,f
  1618  003E  1903               	skipnz
  1619  003F  0AA7               	incf	printf@f+1,f
  1620  0040  082A               	movf	??_printf,w
  1621  0041  0084               	movwf	4
  1622  0042  082B               	movf	??_printf+1,w
  1623  0043  0085               	movwf	5
  1624  0044  0800               	movf	0,w	;code access
  1625  0045  00AC               	movwf	??_printf+2
  1626  0046  082C               	movf	??_printf+2,w
  1627  0047  00B3               	movwf	printf@c
  1628  0048  0833               	movf	printf@c,w
  1629  0049  1903               	btfsc	3,2
  1630  004A  0008               	return
  1631                           
  1632                           ;doprnt.c: 538: if(c != '%')
  1633  004B  3025               	movlw	37
  1634  004C  0633               	xorwf	printf@c,w
  1635  004D  1903               	btfsc	3,2
  1636  004E  2854               	goto	l1329
  1637                           
  1638                           ;doprnt.c: 540: {
  1639                           ;doprnt.c: 541: (putch(c) );
  1640  004F  0833               	movf	printf@c,w
  1641  0050  3182  2262  3180   	fcall	_putch
  1642                           
  1643                           ;doprnt.c: 542: continue;
  1644  0053  2838               	goto	l1369
  1645  0054                     l1329:	
  1646                           
  1647                           ;doprnt.c: 543: }
  1648                           ;doprnt.c: 548: flag = 0;
  1649  0054  0020               	movlb	0	; select bank0
  1650  0055  01AF               	clrf	printf@flag
  1651                           
  1652                           ;doprnt.c: 822: }
  1653                           
  1654                           ;doprnt.c: 813: continue;
  1655                           
  1656                           ;doprnt.c: 802: default:
  1657                           
  1658                           ;doprnt.c: 698: case 'i':
  1659                           ;doprnt.c: 699: break;
  1660                           
  1661                           ;doprnt.c: 697: case 'd':
  1662                           
  1663                           ;doprnt.c: 638: goto alldone;
  1664                           
  1665                           ;doprnt.c: 637: case 0:
  1666                           
  1667                           ;doprnt.c: 635: switch(c = *f++) {
  1668  0056  0827               	movf	printf@f+1,w
  1669  0057  00AB               	movwf	??_printf+1
  1670  0058  0826               	movf	printf@f,w
  1671  0059  00AA               	movwf	??_printf
  1672  005A  0AA6               	incf	printf@f,f
  1673  005B  1903               	skipnz
  1674  005C  0AA7               	incf	printf@f+1,f
  1675  005D  082A               	movf	??_printf,w
  1676  005E  0084               	movwf	4
  1677  005F  082B               	movf	??_printf+1,w
  1678  0060  0085               	movwf	5
  1679  0061  0800               	movf	0,w	;code access
  1680  0062  00B3               	movwf	printf@c
  1681                           
  1682                           ; Switch size 1, requested type "space"
  1683                           ; Number of cases is 3, Range of values is 0 to 105
  1684                           ; switch strategies available:
  1685                           ; Name         Instructions Cycles
  1686                           ; simple_byte           10     6 (average)
  1687                           ; direct_byte          218     6 (fixed)
  1688                           ; jumptable            260     6 (fixed)
  1689                           ;	Chosen strategy is simple_byte
  1690  0063  3A00               	xorlw	0	; case 0
  1691  0064  1903               	skipnz
  1692  0065  28EA               	goto	l263
  1693  0066  3A64               	xorlw	100	; case 100
  1694  0067  1903               	skipnz
  1695  0068  286D               	goto	l1335
  1696  0069  3A0D               	xorlw	13	; case 105
  1697  006A  1903               	skipnz
  1698  006B  286D               	goto	l1335
  1699  006C  2838               	goto	l1369
  1700  006D                     l1335:	
  1701                           
  1702                           ;doprnt.c: 1253: {
  1703                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1704  006D  082E               	movf	printf@ap,w
  1705  006E  0086               	movwf	6
  1706  006F  0187               	clrf	7
  1707  0070  3F40               	moviw [0]fsr1
  1708  0071  00B1               	movwf	printf@val
  1709  0072  3F41               	moviw [1]fsr1
  1710  0073  00B2               	movwf	printf@val+1
  1711  0074  3002               	movlw	2
  1712  0075  00AA               	movwf	??_printf
  1713  0076  082A               	movf	??_printf,w
  1714  0077  07AE               	addwf	printf@ap,f
  1715                           
  1716                           ;doprnt.c: 1261: if((int)val < 0) {
  1717  0078  1FB2               	btfss	printf@val+1,7
  1718  0079  2883               	goto	l1345
  1719                           
  1720                           ;doprnt.c: 1262: flag |= 0x03;
  1721  007A  3003               	movlw	3
  1722  007B  00AA               	movwf	??_printf
  1723  007C  082A               	movf	??_printf,w
  1724  007D  04AF               	iorwf	printf@flag,f
  1725                           
  1726                           ;doprnt.c: 1263: val = -val;
  1727  007E  09B1               	comf	printf@val,f
  1728  007F  09B2               	comf	printf@val+1,f
  1729  0080  0AB1               	incf	printf@val,f
  1730  0081  1903               	skipnz
  1731  0082  0AB2               	incf	printf@val+1,f
  1732  0083                     l1345:	
  1733                           
  1734                           ;doprnt.c: 1264: }
  1735                           ;doprnt.c: 1266: }
  1736                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1737  0083  01B3               	clrf	printf@c
  1738  0084  0AB3               	incf	printf@c,f
  1739  0085  3005               	movlw	5
  1740  0086  0633               	xorwf	printf@c,w
  1741  0087  1903               	btfsc	3,2
  1742  0088  28A8               	goto	l1357
  1743  0089                     l1351:	
  1744                           
  1745                           ;doprnt.c: 1306: if(val < dpowers[c])
  1746  0089  0833               	movf	printf@c,w
  1747  008A  00AA               	movwf	??_printf
  1748  008B  01AB               	clrf	??_printf+1
  1749  008C  35AA               	lslf	??_printf,f
  1750  008D  0DAB               	rlf	??_printf+1,f
  1751  008E  303D               	movlw	low (_dpowers| (0+32768))
  1752  008F  072A               	addwf	??_printf,w
  1753  0090  0084               	movwf	4
  1754  0091  3082               	movlw	high (_dpowers| (0+32768))
  1755  0092  3D2B               	addwfc	??_printf+1,w
  1756  0093  0085               	movwf	5
  1757  0094  3F00               	moviw [0]fsr0
  1758  0095  00AC               	movwf	??_printf+2
  1759  0096  3F01               	moviw [1]fsr0
  1760  0097  00AD               	movwf	??_printf+3
  1761  0098  082D               	movf	??_printf+3,w
  1762  0099  0232               	subwf	printf@val+1,w
  1763  009A  1D03               	skipz
  1764  009B  289E               	goto	u895
  1765  009C  082C               	movf	??_printf+2,w
  1766  009D  0231               	subwf	printf@val,w
  1767  009E                     u895:	
  1768  009E  1C03               	btfss	3,0
  1769  009F  28A8               	goto	l1357
  1770                           
  1771                           ;doprnt.c: 1307: break;
  1772  00A0  3001               	movlw	1
  1773  00A1  00AA               	movwf	??_printf
  1774  00A2  082A               	movf	??_printf,w
  1775  00A3  07B3               	addwf	printf@c,f
  1776  00A4  3005               	movlw	5
  1777  00A5  0633               	xorwf	printf@c,w
  1778  00A6  1D03               	btfss	3,2
  1779  00A7  2889               	goto	l1351
  1780  00A8                     l1357:	
  1781                           
  1782                           ;doprnt.c: 1422: {
  1783                           ;doprnt.c: 1438: if(flag & 0x03)
  1784  00A8  082F               	movf	printf@flag,w
  1785  00A9  3903               	andlw	3
  1786  00AA  1903               	btfsc	3,2
  1787  00AB  28B0               	goto	l1361
  1788                           
  1789                           ;doprnt.c: 1439: (putch('-') );
  1790  00AC  302D               	movlw	45
  1791  00AD  3182  2262  3180   	fcall	_putch
  1792  00B0                     l1361:	
  1793                           
  1794                           ;doprnt.c: 1469: }
  1795                           ;doprnt.c: 1472: prec = c;
  1796  00B0  0020               	movlb	0	; select bank0
  1797  00B1  0833               	movf	printf@c,w
  1798  00B2  00AA               	movwf	??_printf
  1799  00B3  082A               	movf	??_printf,w
  1800  00B4  00B0               	movwf	printf@prec
  1801  00B5                     l1367:	
  1802                           ;doprnt.c: 1474: while(prec--) {
  1803                           
  1804  00B5  30FF               	movlw	255
  1805  00B6  0020               	movlb	0	; select bank0
  1806  00B7  00AA               	movwf	??_printf
  1807  00B8  082A               	movf	??_printf,w
  1808  00B9  07B0               	addwf	printf@prec,f
  1809  00BA  0A30               	incf	printf@prec,w
  1810  00BB  1903               	btfsc	3,2
  1811  00BC  2838               	goto	l1369
  1812                           
  1813                           ;doprnt.c: 1478: {
  1814                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1815  00BD  300A               	movlw	10
  1816  00BE  00A0               	movwf	___lwmod@divisor
  1817  00BF  3000               	movlw	0
  1818  00C0  00A1               	movwf	___lwmod@divisor+1
  1819  00C1  0830               	movf	printf@prec,w
  1820  00C2  00AA               	movwf	??_printf
  1821  00C3  01AB               	clrf	??_printf+1
  1822  00C4  35AA               	lslf	??_printf,f
  1823  00C5  0DAB               	rlf	??_printf+1,f
  1824  00C6  303D               	movlw	low (_dpowers| (0+32768))
  1825  00C7  072A               	addwf	??_printf,w
  1826  00C8  0084               	movwf	4
  1827  00C9  3082               	movlw	high (_dpowers| (0+32768))
  1828  00CA  3D2B               	addwfc	??_printf+1,w
  1829  00CB  0085               	movwf	5
  1830  00CC  3F00               	moviw [0]fsr0
  1831  00CD  00F2               	movwf	___lwdiv@divisor
  1832  00CE  3F01               	moviw [1]fsr0
  1833  00CF  00F3               	movwf	___lwdiv@divisor+1
  1834  00D0  0832               	movf	printf@val+1,w
  1835  00D1  00F5               	movwf	___lwdiv@dividend+1
  1836  00D2  0831               	movf	printf@val,w
  1837  00D3  00F4               	movwf	___lwdiv@dividend
  1838  00D4  3181  2122  3180   	fcall	___lwdiv
  1839  00D7  0873               	movf	?___lwdiv+1,w
  1840  00D8  0020               	movlb	0	; select bank0
  1841  00D9  00A3               	movwf	___lwmod@dividend+1
  1842  00DA  0872               	movf	?___lwdiv,w
  1843  00DB  00A2               	movwf	___lwmod@dividend
  1844  00DC  3181  2156  3180   	fcall	___lwmod
  1845  00DF  0020               	movlb	0	; select bank0
  1846  00E0  0820               	movf	?___lwmod,w
  1847  00E1  3E30               	addlw	48
  1848  00E2  00AC               	movwf	??_printf+2
  1849  00E3  082C               	movf	??_printf+2,w
  1850  00E4  00B3               	movwf	printf@c
  1851                           
  1852                           ;doprnt.c: 1523: }
  1853                           ;doprnt.c: 1524: (putch(c) );
  1854  00E5  0833               	movf	printf@c,w
  1855  00E6  3182  2262  3180   	fcall	_putch
  1856  00E9  28B5               	goto	l1367
  1857  00EA                     l263:	
  1858                           ;doprnt.c: 1540: return 0;
  1859                           ;	Return value of _printf is never used
  1860                           
  1861                           ;doprnt.c: 1525: }
  1862                           ;doprnt.c: 1533: }
  1863                           ;doprnt.c: 1535: alldone:
  1864                           
  1865  00EA  0008               	return
  1866  00EB                     __end_of_printf:	
  1867                           
  1868                           	psect	text2
  1869  0262                     __ptext2:	
  1870 ;; *************** function _putch *****************
  1871 ;; Defined at:
  1872 ;;		line 161 in file "mcc_generated_files/eusart.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  txData          1    wreg     unsigned char 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  txData          1    4[COMMON] unsigned char 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1890 ;;Total ram usage:        1 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    3
  1893 ;; This function calls:
  1894 ;;		_EUSART_Write
  1895 ;; This function is called by:
  1896 ;;		_printf
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _putch
  1902  0262                     _putch:	
  1903                           
  1904                           ;incstack = 0
  1905                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1906                           ;putch@txData stored from wreg
  1907  0262  00F4               	movwf	putch@txData
  1908                           
  1909                           ;eusart.c: 163: EUSART_Write(txData);
  1910  0263  0874               	movf	putch@txData,w
  1911  0264  3181  2183         	fcall	_EUSART_Write
  1912  0266  0008               	return
  1913  0267                     __end_of_putch:	
  1914                           
  1915                           	psect	text3
  1916  0183                     __ptext3:	
  1917 ;; *************** function _EUSART_Write *****************
  1918 ;; Defined at:
  1919 ;;		line 133 in file "mcc_generated_files/eusart.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  txData          1    wreg     unsigned char 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  txData          1    3[COMMON] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1937 ;;Total ram usage:        2 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    2
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		_putch
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           
  1948                           ;psect for function _EUSART_Write
  1949  0183                     _EUSART_Write:	
  1950                           
  1951                           ;incstack = 0
  1952                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  1953                           ;EUSART_Write@txData stored from wreg
  1954  0183  00F3               	movwf	EUSART_Write@txData
  1955  0184                     l1025:	
  1956                           ;eusart.c: 136: {
  1957                           
  1958                           ;eusart.c: 135: while(0 == eusartTxBufferRemaining)
  1959                           
  1960  0184  0020               	movlb	0	; select bank0
  1961  0185  084C               	movf	_eusartTxBufferRemaining,w	;volatile
  1962  0186  1903               	btfsc	3,2
  1963  0187  2984               	goto	l1025
  1964                           
  1965                           ;eusart.c: 137: }
  1966                           ;eusart.c: 139: if(0 == PIE1bits.TXIE)
  1967  0188  0021               	movlb	1	; select bank1
  1968  0189  1A11               	btfsc	17,4	;volatile
  1969  018A  298F               	goto	l157
  1970                           
  1971                           ;eusart.c: 140: {
  1972                           ;eusart.c: 141: TXREG = txData;
  1973  018B  0873               	movf	EUSART_Write@txData,w
  1974  018C  0023               	movlb	3	; select bank3
  1975  018D  009A               	movwf	26	;volatile
  1976                           
  1977                           ;eusart.c: 142: }
  1978  018E  29A3               	goto	l1039
  1979  018F                     l157:	
  1980                           
  1981                           ;eusart.c: 143: else
  1982                           ;eusart.c: 144: {
  1983                           ;eusart.c: 145: PIE1bits.TXIE = 0;
  1984  018F  1211               	bcf	17,4	;volatile
  1985                           
  1986                           ;eusart.c: 146: eusartTxBuffer[eusartTxHead++] = txData;
  1987  0190  0873               	movf	EUSART_Write@txData,w
  1988  0191  00F2               	movwf	??_EUSART_Write
  1989  0192  087B               	movf	_eusartTxHead,w
  1990  0193  3E3F               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  1991  0194  0086               	movwf	6
  1992  0195  0187               	clrf	7
  1993  0196  0872               	movf	??_EUSART_Write,w
  1994  0197  0081               	movwf	1
  1995  0198  3001               	movlw	1
  1996  0199  00F2               	movwf	??_EUSART_Write
  1997  019A  0872               	movf	??_EUSART_Write,w
  1998  019B  07FB               	addwf	_eusartTxHead,f	;volatile
  1999                           
  2000                           ;eusart.c: 147: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2001  019C  3008               	movlw	8
  2002  019D  027B               	subwf	_eusartTxHead,w	;volatile
  2003  019E  1803               	btfsc	3,0
  2004                           
  2005                           ;eusart.c: 148: {
  2006                           ;eusart.c: 149: eusartTxHead = 0;
  2007  019F  01FB               	clrf	_eusartTxHead	;volatile
  2008                           
  2009                           ;eusart.c: 150: }
  2010                           ;eusart.c: 151: eusartTxBufferRemaining--;
  2011  01A0  3001               	movlw	1
  2012  01A1  0020               	movlb	0	; select bank0
  2013  01A2  02CC               	subwf	_eusartTxBufferRemaining,f	;volatile
  2014  01A3                     l1039:	
  2015                           
  2016                           ;eusart.c: 152: }
  2017                           ;eusart.c: 153: PIE1bits.TXIE = 1;
  2018  01A3  0021               	movlb	1	; select bank1
  2019  01A4  1611               	bsf	17,4	;volatile
  2020  01A5  0008               	return
  2021  01A6                     __end_of_EUSART_Write:	
  2022                           
  2023                           	psect	text4
  2024  0156                     __ptext4:	
  2025 ;; *************** function ___lwmod *****************
  2026 ;; Defined at:
  2027 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwmod.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  divisor         2    0[BANK0 ] unsigned int 
  2030 ;;  dividend        2    2[BANK0 ] unsigned int 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  counter         1    5[BANK0 ] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  2    0[BANK0 ] unsigned int 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2042 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2043 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2044 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2045 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2046 ;;Total ram usage:        6 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    2
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_printf
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function ___lwmod
  2058  0156                     ___lwmod:	
  2059                           
  2060                           ;incstack = 0
  2061                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2062  0156  0020               	movlb	0	; select bank0
  2063  0157  0820               	movf	___lwmod@divisor,w
  2064  0158  0421               	iorwf	___lwmod@divisor+1,w
  2065  0159  1903               	btfsc	3,2
  2066  015A  297E               	goto	l1319
  2067  015B  01A5               	clrf	___lwmod@counter
  2068  015C  0AA5               	incf	___lwmod@counter,f
  2069  015D                     l1309:	
  2070  015D  1BA1               	btfsc	___lwmod@divisor+1,7
  2071  015E  2969               	goto	l1311
  2072  015F  3001               	movlw	1
  2073  0160                     u815:	
  2074  0160  35A0               	lslf	___lwmod@divisor,f
  2075  0161  0DA1               	rlf	___lwmod@divisor+1,f
  2076  0162  0B89               	decfsz	9,f
  2077  0163  2960               	goto	u815
  2078  0164  3001               	movlw	1
  2079  0165  00A4               	movwf	??___lwmod
  2080  0166  0824               	movf	??___lwmod,w
  2081  0167  07A5               	addwf	___lwmod@counter,f
  2082  0168  295D               	goto	l1309
  2083  0169                     l1311:	
  2084  0169  0821               	movf	___lwmod@divisor+1,w
  2085  016A  0223               	subwf	___lwmod@dividend+1,w
  2086  016B  1D03               	skipz
  2087  016C  296F               	goto	u835
  2088  016D  0820               	movf	___lwmod@divisor,w
  2089  016E  0222               	subwf	___lwmod@dividend,w
  2090  016F                     u835:	
  2091  016F  1C03               	skipc
  2092  0170  2975               	goto	l1315
  2093  0171  0820               	movf	___lwmod@divisor,w
  2094  0172  02A2               	subwf	___lwmod@dividend,f
  2095  0173  0821               	movf	___lwmod@divisor+1,w
  2096  0174  3BA3               	subwfb	___lwmod@dividend+1,f
  2097  0175                     l1315:	
  2098  0175  3001               	movlw	1
  2099  0176                     u845:	
  2100  0176  36A1               	lsrf	___lwmod@divisor+1,f
  2101  0177  0CA0               	rrf	___lwmod@divisor,f
  2102  0178  0B89               	decfsz	9,f
  2103  0179  2976               	goto	u845
  2104  017A  3001               	movlw	1
  2105  017B  02A5               	subwf	___lwmod@counter,f
  2106  017C  1D03               	btfss	3,2
  2107  017D  2969               	goto	l1311
  2108  017E                     l1319:	
  2109  017E  0823               	movf	___lwmod@dividend+1,w
  2110  017F  00A1               	movwf	?___lwmod+1
  2111  0180  0822               	movf	___lwmod@dividend,w
  2112  0181  00A0               	movwf	?___lwmod
  2113  0182  0008               	return
  2114  0183                     __end_of___lwmod:	
  2115                           
  2116                           	psect	text5
  2117  0122                     __ptext5:	
  2118 ;; *************** function ___lwdiv *****************
  2119 ;; Defined at:
  2120 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  divisor         2    2[COMMON] unsigned int 
  2123 ;;  dividend        2    4[COMMON] unsigned int 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  quotient        2    7[COMMON] unsigned int 
  2126 ;;  counter         1    9[COMMON] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  2    2[COMMON] unsigned int 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2136 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2139 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;Total ram usage:        8 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    2
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_printf
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           
  2151                           ;psect for function ___lwdiv
  2152  0122                     ___lwdiv:	
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2156  0122  01F7               	clrf	___lwdiv@quotient
  2157  0123  01F8               	clrf	___lwdiv@quotient+1
  2158  0124  0872               	movf	___lwdiv@divisor,w
  2159  0125  0473               	iorwf	___lwdiv@divisor+1,w
  2160  0126  1903               	btfsc	3,2
  2161  0127  2951               	goto	l1115
  2162  0128  01F9               	clrf	___lwdiv@counter
  2163  0129  0AF9               	incf	___lwdiv@counter,f
  2164  012A                     l1103:	
  2165  012A  1BF3               	btfsc	___lwdiv@divisor+1,7
  2166  012B  2936               	goto	l1105
  2167  012C  3001               	movlw	1
  2168  012D                     u455:	
  2169  012D  35F2               	lslf	___lwdiv@divisor,f
  2170  012E  0DF3               	rlf	___lwdiv@divisor+1,f
  2171  012F  0B89               	decfsz	9,f
  2172  0130  292D               	goto	u455
  2173  0131  3001               	movlw	1
  2174  0132  00F6               	movwf	??___lwdiv
  2175  0133  0876               	movf	??___lwdiv,w
  2176  0134  07F9               	addwf	___lwdiv@counter,f
  2177  0135  292A               	goto	l1103
  2178  0136                     l1105:	
  2179  0136  3001               	movlw	1
  2180  0137                     u475:	
  2181  0137  35F7               	lslf	___lwdiv@quotient,f
  2182  0138  0DF8               	rlf	___lwdiv@quotient+1,f
  2183  0139  0B89               	decfsz	9,f
  2184  013A  2937               	goto	u475
  2185  013B  0873               	movf	___lwdiv@divisor+1,w
  2186  013C  0275               	subwf	___lwdiv@dividend+1,w
  2187  013D  1D03               	skipz
  2188  013E  2941               	goto	u485
  2189  013F  0872               	movf	___lwdiv@divisor,w
  2190  0140  0274               	subwf	___lwdiv@dividend,w
  2191  0141                     u485:	
  2192  0141  1C03               	skipc
  2193  0142  2948               	goto	l1111
  2194  0143  0872               	movf	___lwdiv@divisor,w
  2195  0144  02F4               	subwf	___lwdiv@dividend,f
  2196  0145  0873               	movf	___lwdiv@divisor+1,w
  2197  0146  3BF5               	subwfb	___lwdiv@dividend+1,f
  2198  0147  1477               	bsf	___lwdiv@quotient,0
  2199  0148                     l1111:	
  2200  0148  3001               	movlw	1
  2201  0149                     u495:	
  2202  0149  36F3               	lsrf	___lwdiv@divisor+1,f
  2203  014A  0CF2               	rrf	___lwdiv@divisor,f
  2204  014B  0B89               	decfsz	9,f
  2205  014C  2949               	goto	u495
  2206  014D  3001               	movlw	1
  2207  014E  02F9               	subwf	___lwdiv@counter,f
  2208  014F  1D03               	btfss	3,2
  2209  0150  2936               	goto	l1105
  2210  0151                     l1115:	
  2211  0151  0878               	movf	___lwdiv@quotient+1,w
  2212  0152  00F3               	movwf	?___lwdiv+1
  2213  0153  0877               	movf	___lwdiv@quotient,w
  2214  0154  00F2               	movwf	?___lwdiv
  2215  0155  0008               	return
  2216  0156                     __end_of___lwdiv:	
  2217                           
  2218                           	psect	text6
  2219  0270                     __ptext6:	
  2220 ;; *************** function _TMR0_HasOverflowOccured *****************
  2221 ;; Defined at:
  2222 ;;		line 101 in file "mcc_generated_files/tmr0.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      unsigned char 
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, status,0
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2240 ;;Total ram usage:        0 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    2
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_main
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _TMR0_HasOverflowOccured
  2252  0270                     _TMR0_HasOverflowOccured:	
  2253                           
  2254                           ;tmr0.c: 104: return(INTCONbits.TMR0IF);
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
  2258  0270  0C0B               	rrf	11,w	;volatile
  2259  0271  0C89               	rrf	9,f
  2260  0272  3901               	andlw	1
  2261  0273  0008               	return
  2262  0274                     __end_of_TMR0_HasOverflowOccured:	
  2263                           
  2264                           	psect	text7
  2265  0210                     __ptext7:	
  2266 ;; *************** function _SYSTEM_Initialize *****************
  2267 ;; Defined at:
  2268 ;;		line 69 in file "mcc_generated_files/mcc.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2, status,0, pclath, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    3
  2289 ;; This function calls:
  2290 ;;		_ADC_Initialize
  2291 ;;		_EUSART_Initialize
  2292 ;;		_OSCILLATOR_Initialize
  2293 ;;		_PIN_MANAGER_Initialize
  2294 ;;		_TMR0_Initialize
  2295 ;;		_WDT_Initialize
  2296 ;; This function is called by:
  2297 ;;		_main
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           
  2302                           ;psect for function _SYSTEM_Initialize
  2303  0210                     _SYSTEM_Initialize:	
  2304                           
  2305                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2309  0210  3181  21F8  3182   	fcall	_PIN_MANAGER_Initialize
  2310                           
  2311                           ;mcc.c: 73: OSCILLATOR_Initialize();
  2312  0213  3182  2267  3182   	fcall	_OSCILLATOR_Initialize
  2313                           
  2314                           ;mcc.c: 74: WDT_Initialize();
  2315  0216  3182  2274  3182   	fcall	_WDT_Initialize
  2316                           
  2317                           ;mcc.c: 75: ADC_Initialize();
  2318  0219  3182  2247  3182   	fcall	_ADC_Initialize
  2319                           
  2320                           ;mcc.c: 76: TMR0_Initialize();
  2321  021C  3182  2222  3182   	fcall	_TMR0_Initialize
  2322                           
  2323                           ;mcc.c: 77: EUSART_Initialize();
  2324  021F  3181  21DE         	fcall	_EUSART_Initialize
  2325  0221  0008               	return
  2326  0222                     __end_of_SYSTEM_Initialize:	
  2327                           
  2328                           	psect	text8
  2329  0274                     __ptext8:	
  2330 ;; *************** function _WDT_Initialize *****************
  2331 ;; Defined at:
  2332 ;;		line 88 in file "mcc_generated_files/mcc.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2350 ;;Total ram usage:        0 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    2
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_SYSTEM_Initialize
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           
  2361                           ;psect for function _WDT_Initialize
  2362  0274                     _WDT_Initialize:	
  2363                           
  2364                           ;mcc.c: 91: WDTCON = 0x16;
  2365                           
  2366                           ;incstack = 0
  2367                           ; Regs used in _WDT_Initialize: [wreg]
  2368  0274  3016               	movlw	22
  2369  0275  0021               	movlb	1	; select bank1
  2370  0276  0097               	movwf	23	;volatile
  2371  0277  0008               	return
  2372  0278                     __end_of_WDT_Initialize:	
  2373                           
  2374                           	psect	text9
  2375  0222                     __ptext9:	
  2376 ;; *************** function _TMR0_Initialize *****************
  2377 ;; Defined at:
  2378 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2396 ;;Total ram usage:        1 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    2
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_SYSTEM_Initialize
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _TMR0_Initialize
  2408  0222                     _TMR0_Initialize:	
  2409                           
  2410                           ;tmr0.c: 67: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD7 & 0x3F);
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  2414  0222  0021               	movlb	1	; select bank1
  2415  0223  0815               	movf	21,w	;volatile
  2416  0224  39C0               	andlw	192
  2417  0225  3817               	iorlw	23
  2418  0226  0095               	movwf	21	;volatile
  2419                           
  2420                           ;tmr0.c: 70: TMR0 = 0x0C;
  2421  0227  300C               	movlw	12
  2422  0228  0020               	movlb	0	; select bank0
  2423  0229  0095               	movwf	21	;volatile
  2424                           
  2425                           ;tmr0.c: 73: timer0ReloadVal= 12;
  2426  022A  300C               	movlw	12
  2427  022B  00F2               	movwf	??_TMR0_Initialize
  2428  022C  0872               	movf	??_TMR0_Initialize,w
  2429  022D  00CB               	movwf	_timer0ReloadVal	;volatile
  2430                           
  2431                           ;tmr0.c: 76: INTCONbits.TMR0IF = 0;
  2432  022E  110B               	bcf	11,2	;volatile
  2433  022F  0008               	return
  2434  0230                     __end_of_TMR0_Initialize:	
  2435                           
  2436                           	psect	text10
  2437  01F8                     __ptext10:	
  2438 ;; *************** function _PIN_MANAGER_Initialize *****************
  2439 ;; Defined at:
  2440 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2458 ;;Total ram usage:        0 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    2
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_SYSTEM_Initialize
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           
  2469                           ;psect for function _PIN_MANAGER_Initialize
  2470  01F8                     _PIN_MANAGER_Initialize:	
  2471                           
  2472                           ;pin_manager.c: 57: LATA = 0x00;
  2473                           
  2474                           ;incstack = 0
  2475                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2476  01F8  0022               	movlb	2	; select bank2
  2477  01F9  018C               	clrf	12	;volatile
  2478                           
  2479                           ;pin_manager.c: 58: LATC = 0x00;
  2480  01FA  018E               	clrf	14	;volatile
  2481                           
  2482                           ;pin_manager.c: 63: TRISA = 0x3F;
  2483  01FB  303F               	movlw	63
  2484  01FC  0021               	movlb	1	; select bank1
  2485  01FD  008C               	movwf	12	;volatile
  2486                           
  2487                           ;pin_manager.c: 64: TRISC = 0x3F;
  2488  01FE  303F               	movlw	63
  2489  01FF  008E               	movwf	14	;volatile
  2490                           
  2491                           ;pin_manager.c: 69: ANSELC = 0x0F;
  2492  0200  300F               	movlw	15
  2493  0201  0023               	movlb	3	; select bank3
  2494  0202  008E               	movwf	14	;volatile
  2495                           
  2496                           ;pin_manager.c: 70: ANSELA = 0x17;
  2497  0203  3017               	movlw	23
  2498  0204  008C               	movwf	12	;volatile
  2499                           
  2500                           ;pin_manager.c: 75: WPUA = 0x3F;
  2501  0205  303F               	movlw	63
  2502  0206  0024               	movlb	4	; select bank4
  2503  0207  008C               	movwf	12	;volatile
  2504                           
  2505                           ;pin_manager.c: 76: WPUC = 0x3F;
  2506  0208  303F               	movlw	63
  2507  0209  008E               	movwf	14	;volatile
  2508                           
  2509                           ;pin_manager.c: 77: OPTION_REGbits.nWPUEN = 0;
  2510  020A  0021               	movlb	1	; select bank1
  2511  020B  1395               	bcf	21,7	;volatile
  2512                           
  2513                           ;pin_manager.c: 83: APFCON1 = 0x00;
  2514  020C  0022               	movlb	2	; select bank2
  2515  020D  019E               	clrf	30	;volatile
  2516                           
  2517                           ;pin_manager.c: 84: APFCON0 = 0x00;
  2518  020E  019D               	clrf	29	;volatile
  2519  020F  0008               	return
  2520  0210                     __end_of_PIN_MANAGER_Initialize:	
  2521                           
  2522                           	psect	text11
  2523  0267                     __ptext11:	
  2524 ;; *************** function _OSCILLATOR_Initialize *****************
  2525 ;; Defined at:
  2526 ;;		line 80 in file "mcc_generated_files/mcc.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    2
  2547 ;; This function calls:
  2548 ;;		Nothing
  2549 ;; This function is called by:
  2550 ;;		_SYSTEM_Initialize
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _OSCILLATOR_Initialize
  2556  0267                     _OSCILLATOR_Initialize:	
  2557                           
  2558                           ;mcc.c: 83: OSCCON = 0x5A;
  2559                           
  2560                           ;incstack = 0
  2561                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2562  0267  305A               	movlw	90
  2563  0268  0021               	movlb	1	; select bank1
  2564  0269  0099               	movwf	25	;volatile
  2565                           
  2566                           ;mcc.c: 85: OSCTUNE = 0x00;
  2567  026A  0198               	clrf	24	;volatile
  2568  026B  0008               	return
  2569  026C                     __end_of_OSCILLATOR_Initialize:	
  2570                           
  2571                           	psect	text12
  2572  01DE                     __ptext12:	
  2573 ;; *************** function _EUSART_Initialize *****************
  2574 ;; Defined at:
  2575 ;;		line 75 in file "mcc_generated_files/eusart.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2593 ;;Total ram usage:        1 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    2
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_SYSTEM_Initialize
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           
  2604                           ;psect for function _EUSART_Initialize
  2605  01DE                     _EUSART_Initialize:	
  2606                           
  2607                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  2608                           
  2609                           ;incstack = 0
  2610                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  2611  01DE  0021               	movlb	1	; select bank1
  2612  01DF  1291               	bcf	17,5	;volatile
  2613                           
  2614                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  2615  01E0  1211               	bcf	17,4	;volatile
  2616                           
  2617                           ;eusart.c: 84: BAUDCON = 0x08;
  2618  01E1  3008               	movlw	8
  2619  01E2  0023               	movlb	3	; select bank3
  2620  01E3  009F               	movwf	31	;volatile
  2621                           
  2622                           ;eusart.c: 87: RCSTA = 0x80;
  2623  01E4  3080               	movlw	128
  2624  01E5  009D               	movwf	29	;volatile
  2625                           
  2626                           ;eusart.c: 90: TXSTA = 0x04;
  2627  01E6  3004               	movlw	4
  2628  01E7  009E               	movwf	30	;volatile
  2629                           
  2630                           ;eusart.c: 93: SPBRGL = 0x19;
  2631  01E8  3019               	movlw	25
  2632  01E9  009B               	movwf	27	;volatile
  2633                           
  2634                           ;eusart.c: 96: SPBRGH = 0x00;
  2635  01EA  019C               	clrf	28	;volatile
  2636                           
  2637                           ;eusart.c: 100: eusartTxHead = 0;
  2638  01EB  01FB               	clrf	_eusartTxHead	;volatile
  2639                           
  2640                           ;eusart.c: 101: eusartTxTail = 0;
  2641  01EC  01FA               	clrf	_eusartTxTail	;volatile
  2642                           
  2643                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  2644  01ED  3008               	movlw	8
  2645  01EE  00F2               	movwf	??_EUSART_Initialize
  2646  01EF  0872               	movf	??_EUSART_Initialize,w
  2647  01F0  0020               	movlb	0	; select bank0
  2648  01F1  00CC               	movwf	_eusartTxBufferRemaining	;volatile
  2649                           
  2650                           ;eusart.c: 104: eusartRxHead = 0;
  2651  01F2  01C9               	clrf	_eusartRxHead	;volatile
  2652                           
  2653                           ;eusart.c: 105: eusartRxTail = 0;
  2654  01F3  01C8               	clrf	_eusartRxTail	;volatile
  2655                           
  2656                           ;eusart.c: 106: eusartRxCount = 0;
  2657  01F4  01C7               	clrf	_eusartRxCount	;volatile
  2658                           
  2659                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  2660  01F5  0021               	movlb	1	; select bank1
  2661  01F6  1691               	bsf	17,5	;volatile
  2662  01F7  0008               	return
  2663  01F8                     __end_of_EUSART_Initialize:	
  2664                           
  2665                           	psect	text13
  2666  0247                     __ptext13:	
  2667 ;; *************** function _ADC_Initialize *****************
  2668 ;; Defined at:
  2669 ;;		line 64 in file "mcc_generated_files/adc.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2687 ;;Total ram usage:        0 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    2
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_SYSTEM_Initialize
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           
  2698                           ;psect for function _ADC_Initialize
  2699  0247                     _ADC_Initialize:	
  2700                           
  2701                           ;adc.c: 69: ADCON0 = 0x01;
  2702                           
  2703                           ;incstack = 0
  2704                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2705  0247  3001               	movlw	1
  2706  0248  0021               	movlb	1	; select bank1
  2707  0249  009D               	movwf	29	;volatile
  2708                           
  2709                           ;adc.c: 72: ADCON1 = 0xC0;
  2710  024A  30C0               	movlw	192
  2711  024B  009E               	movwf	30	;volatile
  2712                           
  2713                           ;adc.c: 75: ADRESL = 0x00;
  2714  024C  019B               	clrf	27	;volatile
  2715                           
  2716                           ;adc.c: 78: ADRESH = 0x00;
  2717  024D  019C               	clrf	28	;volatile
  2718  024E  0008               	return
  2719  024F                     __end_of_ADC_Initialize:	
  2720                           
  2721                           	psect	text14
  2722  0278                     __ptext14:	
  2723 ;; *************** function _ADC_StartConversion *****************
  2724 ;; Defined at:
  2725 ;;		line 90 in file "mcc_generated_files/adc.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		None
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2743 ;;Total ram usage:        0 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    2
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_main
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           
  2754                           ;psect for function _ADC_StartConversion
  2755  0278                     _ADC_StartConversion:	
  2756                           
  2757                           ;adc.c: 93: ADCON0bits.GO_nDONE = 1;
  2758                           
  2759                           ;incstack = 0
  2760                           ; Regs used in _ADC_StartConversion: []
  2761  0278  0021               	movlb	1	; select bank1
  2762  0279  149D               	bsf	29,1	;volatile
  2763  027A  0008               	return
  2764  027B                     __end_of_ADC_StartConversion:	
  2765                           
  2766                           	psect	text15
  2767  0230                     __ptext15:	
  2768 ;; *************** function _ADC_SelectChannel *****************
  2769 ;; Defined at:
  2770 ;;		line 82 in file "mcc_generated_files/adc.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  channel         1    wreg     enum E2692
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  channel         1    3[COMMON] enum E2692
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2788 ;;Total ram usage:        2 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    2
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_main
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function _ADC_SelectChannel
  2800  0230                     _ADC_SelectChannel:	
  2801                           
  2802                           ;incstack = 0
  2803                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  2804                           ;ADC_SelectChannel@channel stored from wreg
  2805  0230  00F3               	movwf	ADC_SelectChannel@channel
  2806                           
  2807                           ;adc.c: 85: ADCON0bits.CHS = channel;
  2808  0231  0873               	movf	ADC_SelectChannel@channel,w
  2809  0232  00F2               	movwf	??_ADC_SelectChannel
  2810  0233  0DF2               	rlf	??_ADC_SelectChannel,f
  2811  0234  0DF2               	rlf	??_ADC_SelectChannel,f
  2812  0235  0021               	movlb	1	; select bank1
  2813  0236  081D               	movf	29,w	;volatile
  2814  0237  0672               	xorwf	??_ADC_SelectChannel,w
  2815  0238  3983               	andlw	-125
  2816  0239  0672               	xorwf	??_ADC_SelectChannel,w
  2817  023A  009D               	movwf	29	;volatile
  2818                           
  2819                           ;adc.c: 87: ADCON0bits.ADON = 1;
  2820  023B  141D               	bsf	29,0	;volatile
  2821  023C  0008               	return
  2822  023D                     __end_of_ADC_SelectChannel:	
  2823                           
  2824                           	psect	text16
  2825  024F                     __ptext16:	
  2826 ;; *************** function _ADC_IsConversionDone *****************
  2827 ;; Defined at:
  2828 ;;		line 97 in file "mcc_generated_files/adc.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;		None
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      unsigned char 
  2835 ;; Registers used:
  2836 ;;		wreg, status,0
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;Total ram usage:        0 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    2
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_main
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           
  2857                           ;psect for function _ADC_IsConversionDone
  2858  024F                     _ADC_IsConversionDone:	
  2859                           
  2860                           ;adc.c: 100: return ((bool)(!ADCON0bits.GO_nDONE));
  2861                           
  2862                           ;incstack = 0
  2863                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  2864  024F  1003               	clrc
  2865  0250  0021               	movlb	1	; select bank1
  2866  0251  1C9D               	btfss	29,1	;volatile
  2867  0252  1403               	setc
  2868  0253  3000               	movlw	0
  2869  0254  3D09               	addwfc	9,w
  2870  0255  0008               	return
  2871  0256                     __end_of_ADC_IsConversionDone:	
  2872                           
  2873                           	psect	text17
  2874  025C                     __ptext17:	
  2875 ;; *************** function _ADC_GetConversionResult *****************
  2876 ;; Defined at:
  2877 ;;		line 103 in file "mcc_generated_files/adc.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  2    2[COMMON] unsigned int 
  2884 ;; Registers used:
  2885 ;;		wreg
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2895 ;;Total ram usage:        2 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    2
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           
  2906                           ;psect for function _ADC_GetConversionResult
  2907  025C                     _ADC_GetConversionResult:	
  2908                           
  2909                           ;adc.c: 106: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2910                           
  2911                           ;incstack = 0
  2912                           ; Regs used in _ADC_GetConversionResult: [wreg]
  2913  025C  0021               	movlb	1	; select bank1
  2914  025D  081C               	movf	28,w	;volatile
  2915  025E  00F3               	movwf	?_ADC_GetConversionResult+1
  2916  025F  081B               	movf	27,w	;volatile
  2917  0260  00F2               	movwf	?_ADC_GetConversionResult
  2918  0261  0008               	return
  2919  0262                     __end_of_ADC_GetConversionResult:	
  2920                           
  2921                           	psect	intentry
  2922  0004                     __pintentry:	
  2923 ;; *************** function _INTERRUPT_InterruptManager *****************
  2924 ;; Defined at:
  2925 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2942 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2943 ;;Total ram usage:        1 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    1
  2946 ;; This function calls:
  2947 ;;		_EUSART_Receive_ISR
  2948 ;;		_EUSART_Transmit_ISR
  2949 ;; This function is called by:
  2950 ;;		Interrupt level 1
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954  0004                     _INTERRUPT_InterruptManager:	
  2955                           
  2956                           ;incstack = 0
  2957  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2958                           
  2959                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2960  0005  3180               	pagesel	$
  2961  0006  0020               	movlb	0	; select bank0
  2962  0007  087F               	movf	127,w
  2963  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  2964                           
  2965                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
  2966  0009  1F0B               	btfss	11,6	;volatile
  2967  000A  2815               	goto	i1l43
  2968  000B  0021               	movlb	1	; select bank1
  2969  000C  1E11               	btfss	17,4	;volatile
  2970  000D  2815               	goto	i1l43
  2971  000E  0020               	movlb	0	; select bank0
  2972  000F  1E11               	btfss	17,4	;volatile
  2973  0010  2815               	goto	i1l43
  2974                           
  2975                           ;interrupt_manager.c: 55: {
  2976                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
  2977  0011  3181  21A6  3180   	fcall	_EUSART_Transmit_ISR
  2978                           
  2979                           ;interrupt_manager.c: 57: }
  2980  0014  281F               	goto	i1l47
  2981  0015                     i1l43:	
  2982                           
  2983                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits
      +                          .RCIF == 1)
  2984  0015  1F0B               	btfss	11,6	;volatile
  2985  0016  281F               	goto	i1l47
  2986  0017  0021               	movlb	1	; select bank1
  2987  0018  1E91               	btfss	17,5	;volatile
  2988  0019  281F               	goto	i1l47
  2989  001A  0020               	movlb	0	; select bank0
  2990  001B  1E91               	btfss	17,5	;volatile
  2991  001C  281F               	goto	i1l47
  2992                           
  2993                           ;interrupt_manager.c: 59: {
  2994                           ;interrupt_manager.c: 60: EUSART_Receive_ISR();
  2995  001D  3181  21C3         	fcall	_EUSART_Receive_ISR
  2996  001F                     i1l47:	
  2997                           ;interrupt_manager.c: 62: else
  2998                           ;interrupt_manager.c: 63: {
  2999                           
  3000                           ;interrupt_manager.c: 61: }
  3001                           
  3002  001F  0871               	movf	??_INTERRUPT_InterruptManager,w
  3003  0020  0020               	movlb	0	; select bank0
  3004  0021  00FF               	movwf	127
  3005  0022  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3006  0023  0009               	retfie
  3007  0024                     __end_of_INTERRUPT_InterruptManager:	
  3008                           
  3009                           	psect	text19
  3010  01A6                     __ptext19:	
  3011 ;; *************** function _EUSART_Transmit_ISR *****************
  3012 ;; Defined at:
  3013 ;;		line 166 in file "mcc_generated_files/eusart.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;Total ram usage:        1 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_INTERRUPT_InterruptManager
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           
  3041                           ;psect for function _EUSART_Transmit_ISR
  3042  01A6                     _EUSART_Transmit_ISR:	
  3043                           
  3044                           ;eusart.c: 170: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  3045                           
  3046                           ;incstack = 0
  3047                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3048  01A6  3008               	movlw	8
  3049  01A7  0020               	movlb	0	; select bank0
  3050  01A8  024C               	subwf	_eusartTxBufferRemaining,w	;volatile
  3051  01A9  1803               	skipnc
  3052  01AA  29C0               	goto	i1l169
  3053                           
  3054                           ;eusart.c: 171: {
  3055                           ;eusart.c: 172: TXREG = eusartTxBuffer[eusartTxTail++];
  3056  01AB  087A               	movf	_eusartTxTail,w
  3057  01AC  3E3F               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3058  01AD  0086               	movwf	6
  3059  01AE  0187               	clrf	7
  3060  01AF  0801               	movf	1,w
  3061  01B0  0023               	movlb	3	; select bank3
  3062  01B1  009A               	movwf	26	;volatile
  3063  01B2  3001               	movlw	1
  3064  01B3  00F0               	movwf	??_EUSART_Transmit_ISR
  3065  01B4  0870               	movf	??_EUSART_Transmit_ISR,w
  3066  01B5  07FA               	addwf	_eusartTxTail,f	;volatile
  3067                           
  3068                           ;eusart.c: 173: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  3069  01B6  3008               	movlw	8
  3070  01B7  027A               	subwf	_eusartTxTail,w	;volatile
  3071  01B8  1803               	btfsc	3,0
  3072                           
  3073                           ;eusart.c: 174: {
  3074                           ;eusart.c: 175: eusartTxTail = 0;
  3075  01B9  01FA               	clrf	_eusartTxTail	;volatile
  3076                           
  3077                           ;eusart.c: 176: }
  3078                           ;eusart.c: 177: eusartTxBufferRemaining++;
  3079  01BA  3001               	movlw	1
  3080  01BB  00F0               	movwf	??_EUSART_Transmit_ISR
  3081  01BC  0870               	movf	??_EUSART_Transmit_ISR,w
  3082  01BD  0020               	movlb	0	; select bank0
  3083  01BE  07CC               	addwf	_eusartTxBufferRemaining,f	;volatile
  3084                           
  3085                           ;eusart.c: 178: }
  3086  01BF  0008               	return
  3087  01C0                     i1l169:	
  3088                           
  3089                           ;eusart.c: 179: else
  3090                           ;eusart.c: 180: {
  3091                           ;eusart.c: 181: PIE1bits.TXIE = 0;
  3092  01C0  0021               	movlb	1	; select bank1
  3093  01C1  1211               	bcf	17,4	;volatile
  3094  01C2  0008               	return
  3095  01C3                     __end_of_EUSART_Transmit_ISR:	
  3096                           
  3097                           	psect	text20
  3098  01C3                     __ptext20:	
  3099 ;; *************** function _EUSART_Receive_ISR *****************
  3100 ;; Defined at:
  3101 ;;		line 185 in file "mcc_generated_files/eusart.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3119 ;;Total ram usage:        1 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_INTERRUPT_InterruptManager
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           
  3129                           ;psect for function _EUSART_Receive_ISR
  3130  01C3                     _EUSART_Receive_ISR:	
  3131                           
  3132                           ;eusart.c: 188: if(1 == RCSTAbits.OERR)
  3133                           
  3134                           ;incstack = 0
  3135                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3136  01C3  0023               	movlb	3	; select bank3
  3137  01C4  1C9D               	btfss	29,1	;volatile
  3138  01C5  29C8               	goto	i1l1157
  3139                           
  3140                           ;eusart.c: 189: {
  3141                           ;eusart.c: 192: RCSTAbits.CREN = 0;
  3142  01C6  121D               	bcf	29,4	;volatile
  3143                           
  3144                           ;eusart.c: 193: RCSTAbits.CREN = 1;
  3145  01C7  161D               	bsf	29,4	;volatile
  3146  01C8                     i1l1157:	
  3147                           
  3148                           ;eusart.c: 194: }
  3149                           ;eusart.c: 197: eusartRxBuffer[eusartRxHead++] = RCREG;
  3150  01C8  0819               	movf	25,w	;volatile
  3151  01C9  00F0               	movwf	??_EUSART_Receive_ISR
  3152  01CA  0020               	movlb	0	; select bank0
  3153  01CB  0849               	movf	_eusartRxHead,w
  3154  01CC  3E37               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  3155  01CD  0086               	movwf	6
  3156  01CE  0187               	clrf	7
  3157  01CF  0870               	movf	??_EUSART_Receive_ISR,w
  3158  01D0  0081               	movwf	1
  3159  01D1  3001               	movlw	1
  3160  01D2  00F0               	movwf	??_EUSART_Receive_ISR
  3161  01D3  0870               	movf	??_EUSART_Receive_ISR,w
  3162  01D4  07C9               	addwf	_eusartRxHead,f	;volatile
  3163                           
  3164                           ;eusart.c: 198: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  3165  01D5  3008               	movlw	8
  3166  01D6  0249               	subwf	_eusartRxHead,w	;volatile
  3167  01D7  1803               	btfsc	3,0
  3168                           
  3169                           ;eusart.c: 199: {
  3170                           ;eusart.c: 200: eusartRxHead = 0;
  3171  01D8  01C9               	clrf	_eusartRxHead	;volatile
  3172                           
  3173                           ;eusart.c: 201: }
  3174                           ;eusart.c: 202: eusartRxCount++;
  3175  01D9  3001               	movlw	1
  3176  01DA  00F0               	movwf	??_EUSART_Receive_ISR
  3177  01DB  0870               	movf	??_EUSART_Receive_ISR,w
  3178  01DC  07C7               	addwf	_eusartRxCount,f	;volatile
  3179  01DD  0008               	return
  3180  01DE                     __end_of_EUSART_Receive_ISR:	
  3181  007E                     btemp	set	126	;btemp
  3182  007E                     int$flags	set	126
  3183  007E                     wtemp0	set	126


Data Sizes:
    Strings     4
    Constant    10
    Data        0
    BSS         22
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     23      45
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _printf->___lwdiv
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _SYSTEM_Initialize->_EUSART_Initialize
    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1438
                                             20 BANK0      3     3      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    1382
                                              6 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      66
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      44
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _WDT_Initialize
   _TMR0_HasOverflowOccured
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      2D       5       56.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      39      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      39      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Jan 08 17:29:03 2018

    __end_of_TMR0_HasOverflowOccured 0274                          __CFG_CP$OFF 0000  
                                 l99 00F0                      _timer0ReloadVal 004B  
                        __CFG_LVP$ON 0000                                  l157 018F  
                                l263 00EA                         __CFG_CPD$OFF 0000  
                                u455 012D                                  u475 0137  
                                u485 0141                                  u495 0149  
                                u815 0160                                  u835 016F  
                                u845 0176                                  u895 009E  
                                _tmr 004A                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                               l1111 0148                                 l1103 012A  
                               l1105 0136                                 l1025 0184  
                               l1115 0151                                 l1311 0169  
                               l1039 01A3                                 l1315 0175  
                               l1309 015D                                 l1319 017E  
                               l1351 0089                                 l1335 006D  
                               l1361 00B0                                 l1345 0083  
                               l1329 0054                                 l1357 00A8  
                               l1367 00B5                                 l1369 0038  
                               l1387 0108                                 STR_1 026C  
                               _LATA 010C                                 _LATC 010E  
                               i1l43 0015                                 i1l47 001F  
                               _TMR0 0015                                 _WPUA 020C  
                               _WPUC 020E                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 00EB  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0024                        __CFG_MCLRE$ON 0000  
            __end_of_TMR0_Initialize 0230                        __CFG_PLLEN$ON 0000  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0005  
      __end_of_OSCILLATOR_Initialize 026C                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                      __end_of___lwdiv 0156  
                              i1l169 01C0                      __end_of___lwmod 0183  
                              _RCREG 0199                                _RCSTA 019D  
                              _TRISA 008C                                _TRISC 008E  
                              _TXREG 019A                                _TXSTA 019E  
   __size_of_ADC_GetConversionResult 0006                      __end_of_dpowers 0247  
                     _WDT_Initialize 0274                                _putch 0262  
                              status 0003                                wtemp0 007E  
                    __initialization 0026                         __end_of_main 0122  
                     ??_EUSART_Write 0072          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 0034               __end_of_WDT_Initialize 0278  
      __size_of_ADC_IsConversionDone 0007                               _ADCON0 009D  
                             _ADCON1 009E                               _ADRESH 009C  
                             _ADRESL 009B                               _ANSELA 018C  
                             ?_putch 0070                               _ANSELC 018E  
                             i1l1157 01C8                               _OSCCON 0099  
   __size_of_TMR0_HasOverflowOccured 0004                               _TMR0IF 005A  
                             _SPBRGH 019C                               _SPBRGL 019B  
                             _WDTCON 0097                       __CFG_PWRTE$OFF 0000  
                     __CFG_STVREN$ON 0000                            ??___lwdiv 0076  
                          ??___lwmod 0024                  _EUSART_Transmit_ISR 01A6  
                   ?_TMR0_Initialize 0070                               _printf 0033  
                    ?_WDT_Initialize 0070                 ?_EUSART_Transmit_ISR 0070  
                  _SYSTEM_Initialize 0210              __end_of__initialization 002F  
                 ?_SYSTEM_Initialize 0070         __size_of_ADC_StartConversion 0003  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0073  
                      __end_of_putch 0267              _ADC_GetConversionResult 025C  
                     _OPTION_REGbits 0095            __end_of_SYSTEM_Initialize 0222  
              ??_EUSART_Transmit_ISR 0070                              ??_putch 0074  
                         __pbssBANK0 0037                 __end_of_EUSART_Write 01A6  
        __size_of_EUSART_Receive_ISR 001B                           __pmaintext 00EB  
                         __pintentry 0004                              _BAUDCON 019F  
                            _APFCON0 011D                              _APFCON1 011E  
                            ?_printf 0026              __size_of_ADC_Initialize 0008  
                      _eusartRxCount 0047                              _OSCTUNE 0098  
            _TMR0_HasOverflowOccured 0270                              ___lwdiv 0122  
                            ___lwmod 0156            ??_ADC_GetConversionResult 0074  
                            __ptext1 0033                              __ptext2 0262  
                            __ptext3 0183                              __ptext4 0156  
                            __ptext5 0122                              __ptext6 0270  
                            __ptext7 0210                              __ptext8 0274  
                            __ptext9 0222                      __size_of_printf 00B8  
                            _dpowers 023D                _OSCILLATOR_Initialize 0267  
           ??_PIN_MANAGER_Initialize 0072           __size_of_SYSTEM_Initialize 0012  
                            clrloop0 0257                              main@out 0035  
               end_of_initialization 002F                    _EUSART_Initialize 01DE  
       __end_of_ADC_IsConversionDone 0256                   ?_EUSART_Initialize 0070  
                          _RCSTAbits 019D                              printf@c 0033  
                            printf@f 0026                  ??_EUSART_Initialize 0072  
                   ??_WDT_Initialize 0072                     __CFG_FOSC$INTOSC 0000  
              __size_of_EUSART_Write 0023                  _ADC_StartConversion 0278  
          ??_TMR0_HasOverflowOccured 0072            __end_of_EUSART_Initialize 01F8  
               ?_ADC_StartConversion 0070                         _EUSART_Write 0183  
                     _ADC_Initialize 0247               ?_OSCILLATOR_Initialize 0070  
                     __end_of_printf 00EB                  start_initialization 0026  
           __size_of_TMR0_Initialize 000E      __size_of_PIN_MANAGER_Initialize 0018  
                        putch@txData 0074                ??_ADC_StartConversion 0072  
             __end_of_ADC_Initialize 024F                             ??_printf 002A  
        __end_of_EUSART_Transmit_ISR 01C3                          __pbssCOMMON 007A  
                          ___latbits 0002                        __pcstackBANK0 0020  
               _ADC_IsConversionDone 024F           __end_of_EUSART_Receive_ISR 01DE  
         __size_of_EUSART_Initialize 001A                            __pnvBANK0 004B  
                   ___lwdiv@dividend 0074               _PIN_MANAGER_Initialize 01F8  
                  _ADC_SelectChannel 0230                             ?___lwdiv 0072  
                           ?___lwmod 0020                      ?_ADC_Initialize 0070  
                       _eusartRxHead 0049                   ?_ADC_SelectChannel 0070  
                       _eusartTxHead 007B                         _eusartRxTail 0048  
                       _eusartTxTail 007A         ??_INTERRUPT_InterruptManager 0071  
            _eusartTxBufferRemaining 004C                  ??_ADC_SelectChannel 0072  
              ?_ADC_IsConversionDone 0070                     ___lwdiv@quotient 0077  
                     __size_of_putch 0005                       _eusartRxBuffer 0037  
                  ??_TMR0_Initialize 0072                       _eusartTxBuffer 003F  
                          clear_ram0 0256                             _PIE1bits 0091  
          __end_of_ADC_SelectChannel 023D  __size_of_INTERRUPT_InterruptManager 0020  
                           _PIR1bits 0011                           _ADCON0bits 009D  
           ADC_SelectChannel@channel 0073                           printf@flag 002F  
                         printf@prec 0030             ?_ADC_GetConversionResult 0072  
            ??_OSCILLATOR_Initialize 0072                     __size_of___lwdiv 0034  
                   __size_of___lwmod 002D               ??_ADC_IsConversionDone 0072  
                    ___lwdiv@divisor 0072                      ___lwdiv@counter 0079  
                           __ptext10 01F8                             __ptext11 0267  
                           __ptext20 01C3                             __ptext12 01DE  
                           __ptext13 0247                             __ptext14 0278  
                           __ptext15 0230                             __ptext16 024F  
                           __ptext17 025C                             __ptext19 01A6  
                      __size_of_main 0037           __size_of_ADC_SelectChannel 000D  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 0024  
         _INTERRUPT_InterruptManager 0004                            printf@val 0031  
           ?_TMR0_HasOverflowOccured 0070                           _INTCONbits 000B  
            __size_of_WDT_Initialize 0004                             intlevel1 0000  
        __end_of_ADC_StartConversion 027B                     ___lwmod@dividend 0022  
            ?_PIN_MANAGER_Initialize 0070      __end_of_ADC_GetConversionResult 0262  
                  __CFG_CLKOUTEN$OFF 0000                     ??_ADC_Initialize 0072  
                           printf@ap 002E                   _EUSART_Receive_ISR 01C3  
                      __pstringtext1 023D                        __pstringtext2 026C  
                      __pstringtext3 0000                           _OPTION_REG 0095  
                ?_EUSART_Receive_ISR 0070                      ___lwmod@divisor 0020  
                    _TMR0_Initialize 0222                      ___lwmod@counter 0025  
                 EUSART_Write@txData 0073         __size_of_EUSART_Transmit_ISR 001D  
     __end_of_PIN_MANAGER_Initialize 0210                 ??_EUSART_Receive_ISR 0070  
