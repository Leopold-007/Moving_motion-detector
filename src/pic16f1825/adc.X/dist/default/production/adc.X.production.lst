

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Feb 25 06:51:17 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 1.42
    47                           ; Generated 13/04/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1825 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000E                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008E                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  010C                     	;# 
   125  010E                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0113                     	;# 
   129  0114                     	;# 
   130  0115                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  0118                     	;# 
   134  0119                     	;# 
   135  011A                     	;# 
   136  011B                     	;# 
   137  011D                     	;# 
   138  011E                     	;# 
   139  018C                     	;# 
   140  018E                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019F                     	;# 
   158  020C                     	;# 
   159  020E                     	;# 
   160  0211                     	;# 
   161  0211                     	;# 
   162  0212                     	;# 
   163  0212                     	;# 
   164  0213                     	;# 
   165  0213                     	;# 
   166  0214                     	;# 
   167  0214                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0216                     	;# 
   172  0216                     	;# 
   173  0217                     	;# 
   174  0217                     	;# 
   175  0291                     	;# 
   176  0291                     	;# 
   177  0292                     	;# 
   178  0293                     	;# 
   179  0294                     	;# 
   180  0295                     	;# 
   181  0295                     	;# 
   182  0296                     	;# 
   183  0298                     	;# 
   184  0298                     	;# 
   185  0299                     	;# 
   186  029A                     	;# 
   187  029B                     	;# 
   188  029C                     	;# 
   189  029D                     	;# 
   190  029E                     	;# 
   191  0311                     	;# 
   192  0311                     	;# 
   193  0312                     	;# 
   194  0313                     	;# 
   195  0318                     	;# 
   196  0318                     	;# 
   197  0319                     	;# 
   198  031A                     	;# 
   199  038C                     	;# 
   200  038E                     	;# 
   201  0391                     	;# 
   202  0392                     	;# 
   203  0393                     	;# 
   204  039A                     	;# 
   205  039C                     	;# 
   206  039D                     	;# 
   207  039E                     	;# 
   208  039F                     	;# 
   209  0415                     	;# 
   210  0416                     	;# 
   211  0417                     	;# 
   212  041C                     	;# 
   213  041D                     	;# 
   214  041E                     	;# 
   215  0FE4                     	;# 
   216  0FE5                     	;# 
   217  0FE6                     	;# 
   218  0FE7                     	;# 
   219  0FE8                     	;# 
   220  0FE9                     	;# 
   221  0FEA                     	;# 
   222  0FEB                     	;# 
   223  0FED                     	;# 
   224  0FEE                     	;# 
   225  0FEF                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000E                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  008C                     	;# 
   255  008E                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  010C                     	;# 
   271  010E                     	;# 
   272  0111                     	;# 
   273  0112                     	;# 
   274  0113                     	;# 
   275  0114                     	;# 
   276  0115                     	;# 
   277  0116                     	;# 
   278  0117                     	;# 
   279  0118                     	;# 
   280  0119                     	;# 
   281  011A                     	;# 
   282  011B                     	;# 
   283  011D                     	;# 
   284  011E                     	;# 
   285  018C                     	;# 
   286  018E                     	;# 
   287  0191                     	;# 
   288  0191                     	;# 
   289  0192                     	;# 
   290  0193                     	;# 
   291  0193                     	;# 
   292  0193                     	;# 
   293  0194                     	;# 
   294  0195                     	;# 
   295  0196                     	;# 
   296  0199                     	;# 
   297  019A                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019C                     	;# 
   301  019D                     	;# 
   302  019E                     	;# 
   303  019F                     	;# 
   304  020C                     	;# 
   305  020E                     	;# 
   306  0211                     	;# 
   307  0211                     	;# 
   308  0212                     	;# 
   309  0212                     	;# 
   310  0213                     	;# 
   311  0213                     	;# 
   312  0214                     	;# 
   313  0214                     	;# 
   314  0215                     	;# 
   315  0215                     	;# 
   316  0215                     	;# 
   317  0216                     	;# 
   318  0216                     	;# 
   319  0217                     	;# 
   320  0217                     	;# 
   321  0291                     	;# 
   322  0291                     	;# 
   323  0292                     	;# 
   324  0293                     	;# 
   325  0294                     	;# 
   326  0295                     	;# 
   327  0295                     	;# 
   328  0296                     	;# 
   329  0298                     	;# 
   330  0298                     	;# 
   331  0299                     	;# 
   332  029A                     	;# 
   333  029B                     	;# 
   334  029C                     	;# 
   335  029D                     	;# 
   336  029E                     	;# 
   337  0311                     	;# 
   338  0311                     	;# 
   339  0312                     	;# 
   340  0313                     	;# 
   341  0318                     	;# 
   342  0318                     	;# 
   343  0319                     	;# 
   344  031A                     	;# 
   345  038C                     	;# 
   346  038E                     	;# 
   347  0391                     	;# 
   348  0392                     	;# 
   349  0393                     	;# 
   350  039A                     	;# 
   351  039C                     	;# 
   352  039D                     	;# 
   353  039E                     	;# 
   354  039F                     	;# 
   355  0415                     	;# 
   356  0416                     	;# 
   357  0417                     	;# 
   358  041C                     	;# 
   359  041D                     	;# 
   360  041E                     	;# 
   361  0FE4                     	;# 
   362  0FE5                     	;# 
   363  0FE6                     	;# 
   364  0FE7                     	;# 
   365  0FE8                     	;# 
   366  0FE9                     	;# 
   367  0FEA                     	;# 
   368  0FEB                     	;# 
   369  0FED                     	;# 
   370  0FEE                     	;# 
   371  0FEF                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000E                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0015                     	;# 
   390  0016                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001C                     	;# 
   398  001E                     	;# 
   399  001F                     	;# 
   400  008C                     	;# 
   401  008E                     	;# 
   402  0091                     	;# 
   403  0092                     	;# 
   404  0093                     	;# 
   405  0095                     	;# 
   406  0096                     	;# 
   407  0097                     	;# 
   408  0098                     	;# 
   409  0099                     	;# 
   410  009A                     	;# 
   411  009B                     	;# 
   412  009B                     	;# 
   413  009C                     	;# 
   414  009D                     	;# 
   415  009E                     	;# 
   416  010C                     	;# 
   417  010E                     	;# 
   418  0111                     	;# 
   419  0112                     	;# 
   420  0113                     	;# 
   421  0114                     	;# 
   422  0115                     	;# 
   423  0116                     	;# 
   424  0117                     	;# 
   425  0118                     	;# 
   426  0119                     	;# 
   427  011A                     	;# 
   428  011B                     	;# 
   429  011D                     	;# 
   430  011E                     	;# 
   431  018C                     	;# 
   432  018E                     	;# 
   433  0191                     	;# 
   434  0191                     	;# 
   435  0192                     	;# 
   436  0193                     	;# 
   437  0193                     	;# 
   438  0193                     	;# 
   439  0194                     	;# 
   440  0195                     	;# 
   441  0196                     	;# 
   442  0199                     	;# 
   443  019A                     	;# 
   444  019B                     	;# 
   445  019B                     	;# 
   446  019C                     	;# 
   447  019D                     	;# 
   448  019E                     	;# 
   449  019F                     	;# 
   450  020C                     	;# 
   451  020E                     	;# 
   452  0211                     	;# 
   453  0211                     	;# 
   454  0212                     	;# 
   455  0212                     	;# 
   456  0213                     	;# 
   457  0213                     	;# 
   458  0214                     	;# 
   459  0214                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0215                     	;# 
   463  0216                     	;# 
   464  0216                     	;# 
   465  0217                     	;# 
   466  0217                     	;# 
   467  0291                     	;# 
   468  0291                     	;# 
   469  0292                     	;# 
   470  0293                     	;# 
   471  0294                     	;# 
   472  0295                     	;# 
   473  0295                     	;# 
   474  0296                     	;# 
   475  0298                     	;# 
   476  0298                     	;# 
   477  0299                     	;# 
   478  029A                     	;# 
   479  029B                     	;# 
   480  029C                     	;# 
   481  029D                     	;# 
   482  029E                     	;# 
   483  0311                     	;# 
   484  0311                     	;# 
   485  0312                     	;# 
   486  0313                     	;# 
   487  0318                     	;# 
   488  0318                     	;# 
   489  0319                     	;# 
   490  031A                     	;# 
   491  038C                     	;# 
   492  038E                     	;# 
   493  0391                     	;# 
   494  0392                     	;# 
   495  0393                     	;# 
   496  039A                     	;# 
   497  039C                     	;# 
   498  039D                     	;# 
   499  039E                     	;# 
   500  039F                     	;# 
   501  0415                     	;# 
   502  0416                     	;# 
   503  0417                     	;# 
   504  041C                     	;# 
   505  041D                     	;# 
   506  041E                     	;# 
   507  0FE4                     	;# 
   508  0FE5                     	;# 
   509  0FE6                     	;# 
   510  0FE7                     	;# 
   511  0FE8                     	;# 
   512  0FE9                     	;# 
   513  0FEA                     	;# 
   514  0FEB                     	;# 
   515  0FED                     	;# 
   516  0FEE                     	;# 
   517  0FEF                     	;# 
   518  0000                     	;# 
   519  0001                     	;# 
   520  0002                     	;# 
   521  0003                     	;# 
   522  0004                     	;# 
   523  0005                     	;# 
   524  0006                     	;# 
   525  0007                     	;# 
   526  0008                     	;# 
   527  0009                     	;# 
   528  000A                     	;# 
   529  000B                     	;# 
   530  000C                     	;# 
   531  000E                     	;# 
   532  0011                     	;# 
   533  0012                     	;# 
   534  0013                     	;# 
   535  0015                     	;# 
   536  0016                     	;# 
   537  0016                     	;# 
   538  0017                     	;# 
   539  0018                     	;# 
   540  0019                     	;# 
   541  001A                     	;# 
   542  001B                     	;# 
   543  001C                     	;# 
   544  001E                     	;# 
   545  001F                     	;# 
   546  008C                     	;# 
   547  008E                     	;# 
   548  0091                     	;# 
   549  0092                     	;# 
   550  0093                     	;# 
   551  0095                     	;# 
   552  0096                     	;# 
   553  0097                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009A                     	;# 
   557  009B                     	;# 
   558  009B                     	;# 
   559  009C                     	;# 
   560  009D                     	;# 
   561  009E                     	;# 
   562  010C                     	;# 
   563  010E                     	;# 
   564  0111                     	;# 
   565  0112                     	;# 
   566  0113                     	;# 
   567  0114                     	;# 
   568  0115                     	;# 
   569  0116                     	;# 
   570  0117                     	;# 
   571  0118                     	;# 
   572  0119                     	;# 
   573  011A                     	;# 
   574  011B                     	;# 
   575  011D                     	;# 
   576  011E                     	;# 
   577  018C                     	;# 
   578  018E                     	;# 
   579  0191                     	;# 
   580  0191                     	;# 
   581  0192                     	;# 
   582  0193                     	;# 
   583  0193                     	;# 
   584  0193                     	;# 
   585  0194                     	;# 
   586  0195                     	;# 
   587  0196                     	;# 
   588  0199                     	;# 
   589  019A                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019C                     	;# 
   593  019D                     	;# 
   594  019E                     	;# 
   595  019F                     	;# 
   596  020C                     	;# 
   597  020E                     	;# 
   598  0211                     	;# 
   599  0211                     	;# 
   600  0212                     	;# 
   601  0212                     	;# 
   602  0213                     	;# 
   603  0213                     	;# 
   604  0214                     	;# 
   605  0214                     	;# 
   606  0215                     	;# 
   607  0215                     	;# 
   608  0215                     	;# 
   609  0216                     	;# 
   610  0216                     	;# 
   611  0217                     	;# 
   612  0217                     	;# 
   613  0291                     	;# 
   614  0291                     	;# 
   615  0292                     	;# 
   616  0293                     	;# 
   617  0294                     	;# 
   618  0295                     	;# 
   619  0295                     	;# 
   620  0296                     	;# 
   621  0298                     	;# 
   622  0298                     	;# 
   623  0299                     	;# 
   624  029A                     	;# 
   625  029B                     	;# 
   626  029C                     	;# 
   627  029D                     	;# 
   628  029E                     	;# 
   629  0311                     	;# 
   630  0311                     	;# 
   631  0312                     	;# 
   632  0313                     	;# 
   633  0318                     	;# 
   634  0318                     	;# 
   635  0319                     	;# 
   636  031A                     	;# 
   637  038C                     	;# 
   638  038E                     	;# 
   639  0391                     	;# 
   640  0392                     	;# 
   641  0393                     	;# 
   642  039A                     	;# 
   643  039C                     	;# 
   644  039D                     	;# 
   645  039E                     	;# 
   646  039F                     	;# 
   647  0415                     	;# 
   648  0416                     	;# 
   649  0417                     	;# 
   650  041C                     	;# 
   651  041D                     	;# 
   652  041E                     	;# 
   653  0FE4                     	;# 
   654  0FE5                     	;# 
   655  0FE6                     	;# 
   656  0FE7                     	;# 
   657  0FE8                     	;# 
   658  0FE9                     	;# 
   659  0FEA                     	;# 
   660  0FEB                     	;# 
   661  0FED                     	;# 
   662  0FEE                     	;# 
   663  0FEF                     	;# 
   664  0000                     	;# 
   665  0001                     	;# 
   666  0002                     	;# 
   667  0003                     	;# 
   668  0004                     	;# 
   669  0005                     	;# 
   670  0006                     	;# 
   671  0007                     	;# 
   672  0008                     	;# 
   673  0009                     	;# 
   674  000A                     	;# 
   675  000B                     	;# 
   676  000C                     	;# 
   677  000E                     	;# 
   678  0011                     	;# 
   679  0012                     	;# 
   680  0013                     	;# 
   681  0015                     	;# 
   682  0016                     	;# 
   683  0016                     	;# 
   684  0017                     	;# 
   685  0018                     	;# 
   686  0019                     	;# 
   687  001A                     	;# 
   688  001B                     	;# 
   689  001C                     	;# 
   690  001E                     	;# 
   691  001F                     	;# 
   692  008C                     	;# 
   693  008E                     	;# 
   694  0091                     	;# 
   695  0092                     	;# 
   696  0093                     	;# 
   697  0095                     	;# 
   698  0096                     	;# 
   699  0097                     	;# 
   700  0098                     	;# 
   701  0099                     	;# 
   702  009A                     	;# 
   703  009B                     	;# 
   704  009B                     	;# 
   705  009C                     	;# 
   706  009D                     	;# 
   707  009E                     	;# 
   708  010C                     	;# 
   709  010E                     	;# 
   710  0111                     	;# 
   711  0112                     	;# 
   712  0113                     	;# 
   713  0114                     	;# 
   714  0115                     	;# 
   715  0116                     	;# 
   716  0117                     	;# 
   717  0118                     	;# 
   718  0119                     	;# 
   719  011A                     	;# 
   720  011B                     	;# 
   721  011D                     	;# 
   722  011E                     	;# 
   723  018C                     	;# 
   724  018E                     	;# 
   725  0191                     	;# 
   726  0191                     	;# 
   727  0192                     	;# 
   728  0193                     	;# 
   729  0193                     	;# 
   730  0193                     	;# 
   731  0194                     	;# 
   732  0195                     	;# 
   733  0196                     	;# 
   734  0199                     	;# 
   735  019A                     	;# 
   736  019B                     	;# 
   737  019B                     	;# 
   738  019C                     	;# 
   739  019D                     	;# 
   740  019E                     	;# 
   741  019F                     	;# 
   742  020C                     	;# 
   743  020E                     	;# 
   744  0211                     	;# 
   745  0211                     	;# 
   746  0212                     	;# 
   747  0212                     	;# 
   748  0213                     	;# 
   749  0213                     	;# 
   750  0214                     	;# 
   751  0214                     	;# 
   752  0215                     	;# 
   753  0215                     	;# 
   754  0215                     	;# 
   755  0216                     	;# 
   756  0216                     	;# 
   757  0217                     	;# 
   758  0217                     	;# 
   759  0291                     	;# 
   760  0291                     	;# 
   761  0292                     	;# 
   762  0293                     	;# 
   763  0294                     	;# 
   764  0295                     	;# 
   765  0295                     	;# 
   766  0296                     	;# 
   767  0298                     	;# 
   768  0298                     	;# 
   769  0299                     	;# 
   770  029A                     	;# 
   771  029B                     	;# 
   772  029C                     	;# 
   773  029D                     	;# 
   774  029E                     	;# 
   775  0311                     	;# 
   776  0311                     	;# 
   777  0312                     	;# 
   778  0313                     	;# 
   779  0318                     	;# 
   780  0318                     	;# 
   781  0319                     	;# 
   782  031A                     	;# 
   783  038C                     	;# 
   784  038E                     	;# 
   785  0391                     	;# 
   786  0392                     	;# 
   787  0393                     	;# 
   788  039A                     	;# 
   789  039C                     	;# 
   790  039D                     	;# 
   791  039E                     	;# 
   792  039F                     	;# 
   793  0415                     	;# 
   794  0416                     	;# 
   795  0417                     	;# 
   796  041C                     	;# 
   797  041D                     	;# 
   798  041E                     	;# 
   799  0FE4                     	;# 
   800  0FE5                     	;# 
   801  0FE6                     	;# 
   802  0FE7                     	;# 
   803  0FE8                     	;# 
   804  0FE9                     	;# 
   805  0FEA                     	;# 
   806  0FEB                     	;# 
   807  0FED                     	;# 
   808  0FEE                     	;# 
   809  0FEF                     	;# 
   810  0000                     	;# 
   811  0001                     	;# 
   812  0002                     	;# 
   813  0003                     	;# 
   814  0004                     	;# 
   815  0005                     	;# 
   816  0006                     	;# 
   817  0007                     	;# 
   818  0008                     	;# 
   819  0009                     	;# 
   820  000A                     	;# 
   821  000B                     	;# 
   822  000C                     	;# 
   823  000E                     	;# 
   824  0011                     	;# 
   825  0012                     	;# 
   826  0013                     	;# 
   827  0015                     	;# 
   828  0016                     	;# 
   829  0016                     	;# 
   830  0017                     	;# 
   831  0018                     	;# 
   832  0019                     	;# 
   833  001A                     	;# 
   834  001B                     	;# 
   835  001C                     	;# 
   836  001E                     	;# 
   837  001F                     	;# 
   838  008C                     	;# 
   839  008E                     	;# 
   840  0091                     	;# 
   841  0092                     	;# 
   842  0093                     	;# 
   843  0095                     	;# 
   844  0096                     	;# 
   845  0097                     	;# 
   846  0098                     	;# 
   847  0099                     	;# 
   848  009A                     	;# 
   849  009B                     	;# 
   850  009B                     	;# 
   851  009C                     	;# 
   852  009D                     	;# 
   853  009E                     	;# 
   854  010C                     	;# 
   855  010E                     	;# 
   856  0111                     	;# 
   857  0112                     	;# 
   858  0113                     	;# 
   859  0114                     	;# 
   860  0115                     	;# 
   861  0116                     	;# 
   862  0117                     	;# 
   863  0118                     	;# 
   864  0119                     	;# 
   865  011A                     	;# 
   866  011B                     	;# 
   867  011D                     	;# 
   868  011E                     	;# 
   869  018C                     	;# 
   870  018E                     	;# 
   871  0191                     	;# 
   872  0191                     	;# 
   873  0192                     	;# 
   874  0193                     	;# 
   875  0193                     	;# 
   876  0193                     	;# 
   877  0194                     	;# 
   878  0195                     	;# 
   879  0196                     	;# 
   880  0199                     	;# 
   881  019A                     	;# 
   882  019B                     	;# 
   883  019B                     	;# 
   884  019C                     	;# 
   885  019D                     	;# 
   886  019E                     	;# 
   887  019F                     	;# 
   888  020C                     	;# 
   889  020E                     	;# 
   890  0211                     	;# 
   891  0211                     	;# 
   892  0212                     	;# 
   893  0212                     	;# 
   894  0213                     	;# 
   895  0213                     	;# 
   896  0214                     	;# 
   897  0214                     	;# 
   898  0215                     	;# 
   899  0215                     	;# 
   900  0215                     	;# 
   901  0216                     	;# 
   902  0216                     	;# 
   903  0217                     	;# 
   904  0217                     	;# 
   905  0291                     	;# 
   906  0291                     	;# 
   907  0292                     	;# 
   908  0293                     	;# 
   909  0294                     	;# 
   910  0295                     	;# 
   911  0295                     	;# 
   912  0296                     	;# 
   913  0298                     	;# 
   914  0298                     	;# 
   915  0299                     	;# 
   916  029A                     	;# 
   917  029B                     	;# 
   918  029C                     	;# 
   919  029D                     	;# 
   920  029E                     	;# 
   921  0311                     	;# 
   922  0311                     	;# 
   923  0312                     	;# 
   924  0313                     	;# 
   925  0318                     	;# 
   926  0318                     	;# 
   927  0319                     	;# 
   928  031A                     	;# 
   929  038C                     	;# 
   930  038E                     	;# 
   931  0391                     	;# 
   932  0392                     	;# 
   933  0393                     	;# 
   934  039A                     	;# 
   935  039C                     	;# 
   936  039D                     	;# 
   937  039E                     	;# 
   938  039F                     	;# 
   939  0415                     	;# 
   940  0416                     	;# 
   941  0417                     	;# 
   942  041C                     	;# 
   943  041D                     	;# 
   944  041E                     	;# 
   945  0FE4                     	;# 
   946  0FE5                     	;# 
   947  0FE6                     	;# 
   948  0FE7                     	;# 
   949  0FE8                     	;# 
   950  0FE9                     	;# 
   951  0FEA                     	;# 
   952  0FEB                     	;# 
   953  0FED                     	;# 
   954  0FEE                     	;# 
   955  0FEF                     	;# 
   956  0000                     	;# 
   957  0001                     	;# 
   958  0002                     	;# 
   959  0003                     	;# 
   960  0004                     	;# 
   961  0005                     	;# 
   962  0006                     	;# 
   963  0007                     	;# 
   964  0008                     	;# 
   965  0009                     	;# 
   966  000A                     	;# 
   967  000B                     	;# 
   968  000C                     	;# 
   969  000E                     	;# 
   970  0011                     	;# 
   971  0012                     	;# 
   972  0013                     	;# 
   973  0015                     	;# 
   974  0016                     	;# 
   975  0016                     	;# 
   976  0017                     	;# 
   977  0018                     	;# 
   978  0019                     	;# 
   979  001A                     	;# 
   980  001B                     	;# 
   981  001C                     	;# 
   982  001E                     	;# 
   983  001F                     	;# 
   984  008C                     	;# 
   985  008E                     	;# 
   986  0091                     	;# 
   987  0092                     	;# 
   988  0093                     	;# 
   989  0095                     	;# 
   990  0096                     	;# 
   991  0097                     	;# 
   992  0098                     	;# 
   993  0099                     	;# 
   994  009A                     	;# 
   995  009B                     	;# 
   996  009B                     	;# 
   997  009C                     	;# 
   998  009D                     	;# 
   999  009E                     	;# 
  1000  010C                     	;# 
  1001  010E                     	;# 
  1002  0111                     	;# 
  1003  0112                     	;# 
  1004  0113                     	;# 
  1005  0114                     	;# 
  1006  0115                     	;# 
  1007  0116                     	;# 
  1008  0117                     	;# 
  1009  0118                     	;# 
  1010  0119                     	;# 
  1011  011A                     	;# 
  1012  011B                     	;# 
  1013  011D                     	;# 
  1014  011E                     	;# 
  1015  018C                     	;# 
  1016  018E                     	;# 
  1017  0191                     	;# 
  1018  0191                     	;# 
  1019  0192                     	;# 
  1020  0193                     	;# 
  1021  0193                     	;# 
  1022  0193                     	;# 
  1023  0194                     	;# 
  1024  0195                     	;# 
  1025  0196                     	;# 
  1026  0199                     	;# 
  1027  019A                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019C                     	;# 
  1031  019D                     	;# 
  1032  019E                     	;# 
  1033  019F                     	;# 
  1034  020C                     	;# 
  1035  020E                     	;# 
  1036  0211                     	;# 
  1037  0211                     	;# 
  1038  0212                     	;# 
  1039  0212                     	;# 
  1040  0213                     	;# 
  1041  0213                     	;# 
  1042  0214                     	;# 
  1043  0214                     	;# 
  1044  0215                     	;# 
  1045  0215                     	;# 
  1046  0215                     	;# 
  1047  0216                     	;# 
  1048  0216                     	;# 
  1049  0217                     	;# 
  1050  0217                     	;# 
  1051  0291                     	;# 
  1052  0291                     	;# 
  1053  0292                     	;# 
  1054  0293                     	;# 
  1055  0294                     	;# 
  1056  0295                     	;# 
  1057  0295                     	;# 
  1058  0296                     	;# 
  1059  0298                     	;# 
  1060  0298                     	;# 
  1061  0299                     	;# 
  1062  029A                     	;# 
  1063  029B                     	;# 
  1064  029C                     	;# 
  1065  029D                     	;# 
  1066  029E                     	;# 
  1067  0311                     	;# 
  1068  0311                     	;# 
  1069  0312                     	;# 
  1070  0313                     	;# 
  1071  0318                     	;# 
  1072  0318                     	;# 
  1073  0319                     	;# 
  1074  031A                     	;# 
  1075  038C                     	;# 
  1076  038E                     	;# 
  1077  0391                     	;# 
  1078  0392                     	;# 
  1079  0393                     	;# 
  1080  039A                     	;# 
  1081  039C                     	;# 
  1082  039D                     	;# 
  1083  039E                     	;# 
  1084  039F                     	;# 
  1085  0415                     	;# 
  1086  0416                     	;# 
  1087  0417                     	;# 
  1088  041C                     	;# 
  1089  041D                     	;# 
  1090  041E                     	;# 
  1091  0FE4                     	;# 
  1092  0FE5                     	;# 
  1093  0FE6                     	;# 
  1094  0FE7                     	;# 
  1095  0FE8                     	;# 
  1096  0FE9                     	;# 
  1097  0FEA                     	;# 
  1098  0FEB                     	;# 
  1099  0FED                     	;# 
  1100  0FEE                     	;# 
  1101  0FEF                     	;# 
  1102                           
  1103                           	psect	idataBANK0
  1104  047D                     __pidataBANK0:	
  1105                           
  1106                           ;initializer for main@F3027
  1107  047D  340A               	retlw	10
  1108  047E  3400               	retlw	0
  1109  047F  3400               	retlw	0
  1110  0480  3400               	retlw	0
  1111  0481  3400               	retlw	0
  1112  0482  3400               	retlw	0
  1113  0483  3400               	retlw	0
  1114  0484  3400               	retlw	0
  1115                           
  1116                           	psect	stringtext1
  1117  0800                     __pstringtext1:	
  1118  0800                     _dpowers:	
  1119  0800  3401               	retlw	1
  1120  0801  3400               	retlw	0
  1121  0802  340A               	retlw	10
  1122  0803  3400               	retlw	0
  1123  0804  3464               	retlw	100
  1124  0805  3400               	retlw	0
  1125  0806  34E8               	retlw	232
  1126  0807  3403               	retlw	3
  1127  0808  3410               	retlw	16
  1128  0809  3427               	retlw	39
  1129  080A                     __end_of_dpowers:	
  1130                           
  1131                           	psect	stringtext2
  1132  080A                     __pstringtext2:	
  1133  080A                     _ANALOG_IN:	
  1134  080A  3402               	retlw	2
  1135  080B  3404               	retlw	4
  1136  080C  3405               	retlw	5
  1137  080D  3406               	retlw	6
  1138  080E                     __end_of_ANALOG_IN:	
  1139                           
  1140                           	psect	nvBANK0
  1141  004D                     __pnvBANK0:	
  1142  004D                     _timer0ReloadVal:	
  1143  004D                     	ds	1
  1144  000B                     _INTCONbits	set	11
  1145  0015                     _TMR0	set	21
  1146  0011                     _PIR1bits	set	17
  1147  005A                     _TMR0IF	set	90
  1148  0095                     _OPTION_REG	set	149
  1149  009D                     _ADCON0bits	set	157
  1150  009C                     _ADRESH	set	156
  1151  009B                     _ADRESL	set	155
  1152  009E                     _ADCON1	set	158
  1153  009D                     _ADCON0	set	157
  1154  0097                     _WDTCON	set	151
  1155  0098                     _OSCTUNE	set	152
  1156  0099                     _OSCCON	set	153
  1157  0095                     _OPTION_REGbits	set	149
  1158  008E                     _TRISC	set	142
  1159  008C                     _TRISA	set	140
  1160  011D                     _APFCON0	set	285
  1161  011E                     _APFCON1	set	286
  1162  010E                     _LATC	set	270
  1163  010C                     _LATA	set	268
  1164  0196                     _EECON2	set	406
  1165  0193                     _EEDATL	set	403
  1166  0194                     _EEDATH	set	404
  1167  0195                     _EECON1bits	set	405
  1168  0192                     _EEADRH	set	402
  1169  0191                     _EEADRL	set	401
  1170  019A                     _TXREG	set	410
  1171  0199                     _RCREG	set	409
  1172  019D                     _RCSTAbits	set	413
  1173  019C                     _SPBRGH	set	412
  1174  019B                     _SPBRGL	set	411
  1175  019E                     _TXSTA	set	414
  1176  019D                     _RCSTA	set	413
  1177  019F                     _BAUDCON	set	415
  1178  018C                     _ANSELA	set	396
  1179  018E                     _ANSELC	set	398
  1180  020E                     _WPUC	set	526
  1181  020C                     _WPUA	set	524
  1182                           
  1183                           	psect	stringtext3
  1184  080E                     __pstringtext3:	
  1185  080E                     STR_4:	
  1186  080E  3425               	retlw	37	;'%'
  1187  080F  3464               	retlw	100	;'d'
  1188  0810  340A               	retlw	10
  1189  0811  3400               	retlw	0
  1190                           
  1191                           	psect	stringtext4
  1192  0812                     __pstringtext4:	
  1193  0812                     STR_3:	
  1194  0812  3425               	retlw	37	;'%'
  1195  0813  3464               	retlw	100	;'d'
  1196  0814  342C               	retlw	44	;','
  1197  0815  3400               	retlw	0
  1198                           
  1199                           	psect	stringtext5
  1200  0816                     __pstringtext5:	
  1201  0816                     STR_2:	
  1202  0816  3466               	retlw	102	;'f'
  1203  0817  343A               	retlw	58	;':'
  1204  0818  3400               	retlw	0
  1205                           
  1206                           	psect	stringtext6
  1207  0819                     __pstringtext6:	
  1208  0819                     STR_1:	
  1209  0819  3474               	retlw	116	;'t'
  1210  081A  343A               	retlw	58	;':'
  1211  081B  3400               	retlw	0
  1212                           
  1213                           	psect	stringtext7
  1214  0000                     __pstringtext7:	
  1215                           
  1216                           ; #config settings
  1217  0000                     
  1218                           	psect	cinit
  1219  07F1                     start_initialization:	
  1220  07F1                     __initialization:	
  1221                           
  1222                           ; Initialize objects allocated to BANK0
  1223  07F1  307D               	movlw	low __pidataBANK0
  1224  07F2  0084               	movwf	4
  1225  07F3  3084               	movlw	(high __pidataBANK0)| (0+128)
  1226  07F4  0085               	movwf	5
  1227  07F5  3045               	movlw	low __pdataBANK0
  1228  07F6  0086               	movwf	6
  1229  07F7  3000               	movlw	high __pdataBANK0
  1230  07F8  0087               	movwf	7
  1231  07F9  3008               	movlw	8
  1232  07FA  3184  2460         	fcall	init_ram
  1233                           
  1234                           ; Clear objects allocated to BANK0
  1235  07FC  01CE               	clrf	__pbssBANK0& (0+127)
  1236  07FD                     end_of_initialization:	
  1237                           ;End of C runtime variable initialization code
  1238                           
  1239  07FD                     __end_of__initialization:	
  1240  07FD  0020               	movlb	0
  1241  07FE  3186  2EEC         	ljmp	_main	;jump to C main() function
  1242                           
  1243                           	psect	bssBANK0
  1244  004E                     __pbssBANK0:	
  1245  004E                     _tmr:	
  1246  004E                     	ds	1
  1247                           
  1248                           	psect	dataBANK0
  1249  0045                     __pdataBANK0:	
  1250  0045                     main@F3027:	
  1251  0045                     	ds	8
  1252                           
  1253                           	psect	inittext
  1254  0460                     init_ram:	
  1255  0460  00FE               	movwf	126
  1256  0461                     initloop:	
  1257  0461  0012               	moviw fsr0++
  1258  0462  001E               	movwi fsr1++
  1259  0463  0BFE               	decfsz	126,f
  1260  0464  2C61               	goto	initloop
  1261  0465  3400               	retlw	0
  1262                           
  1263                           	psect	cstackCOMMON
  1264  0070                     __pcstackCOMMON:	
  1265  0070                     ?_isdigit:	
  1266  0070                     ?_OSCILLATOR_Initialize:	
  1267                           ; 1 bit 
  1268                           
  1269  0070                     ??_OSCILLATOR_Initialize:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0070                     ?_WDT_Initialize:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0070                     ??_WDT_Initialize:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0070                     ?_ADC_Initialize:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0070                     ??_ADC_Initialize:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0070                     ?_TMR0_Initialize:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0070                     ??_TMR0_Initialize:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0070                     ?_EUSART_Initialize:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0070                     ??_EUSART_Initialize:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0070                     ??_isdigit:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0070                     ?_PIN_MANAGER_Initialize:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0070                     ??_PIN_MANAGER_Initialize:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0070                     ?_SYSTEM_Initialize:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0070                     ?_EUSART_Read:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0070                     ??_EUSART_Read:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ?_EUSART_Write:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ??_EUSART_Write:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_putch:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ?_ADC_SelectChannel:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ??_ADC_SelectChannel:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     ?_ADC_StartConversion:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     ??_ADC_StartConversion:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ?_ADC_IsConversionDone:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0070                     ??_ADC_IsConversionDone:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0070                     ?_TMR0_HasOverflowOccured:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0070                     ??_TMR0_HasOverflowOccured:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?_DATAEE_WriteByte:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     ?_DATAEE_ReadByte:	
  1351                           ; 1 bytes @ 0x0
  1352                           
  1353  0070                     ??_DATAEE_ReadByte:	
  1354                           ; 1 bytes @ 0x0
  1355                           
  1356  0070                     ?_main:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  0070                     ?_strncmp:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0070                     ?_ADC_GetConversionResult:	
  1363                           ; 2 bytes @ 0x0
  1364                           
  1365  0070                     ?___wmul:	
  1366                           ; 2 bytes @ 0x0
  1367                           
  1368  0070                     ?___lwdiv:	
  1369                           ; 2 bytes @ 0x0
  1370                           
  1371  0070                     EUSART_Write@txData:	
  1372                           ; 2 bytes @ 0x0
  1373                           
  1374  0070                     DATAEE_WriteByte@bData:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0070                     DATAEE_ReadByte@bAdd:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     _isdigit$683:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     ___wmul@multiplier:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0070                     ___lwdiv@divisor:	
  1387                           ; 2 bytes @ 0x0
  1388                           
  1389  0070                     strncmp@s1:	
  1390                           ; 2 bytes @ 0x0
  1391                           
  1392                           
  1393                           ; 2 bytes @ 0x0
  1394  0070                     	ds	1
  1395  0071                     ??_SYSTEM_Initialize:	
  1396  0071                     ??_putch:	
  1397                           ; 1 bytes @ 0x1
  1398                           
  1399  0071                     ??_DATAEE_WriteByte:	
  1400                           ; 1 bytes @ 0x1
  1401                           
  1402  0071                     putch@txData:	
  1403                           ; 1 bytes @ 0x1
  1404                           
  1405  0071                     ADC_SelectChannel@channel:	
  1406                           ; 1 bytes @ 0x1
  1407                           
  1408  0071                     DATAEE_WriteByte@bAdd:	
  1409                           ; 1 bytes @ 0x1
  1410                           
  1411  0071                     isdigit@c:	
  1412                           ; 1 bytes @ 0x1
  1413                           
  1414                           
  1415                           ; 1 bytes @ 0x1
  1416  0071                     	ds	1
  1417  0072                     ??_ADC_GetConversionResult:	
  1418  0072                     DATAEE_WriteByte@GIEBitValue:	
  1419                           ; 1 bytes @ 0x2
  1420                           
  1421  0072                     strncmp@s2:	
  1422                           ; 1 bytes @ 0x2
  1423                           
  1424  0072                     ___wmul@multiplicand:	
  1425                           ; 1 bytes @ 0x2
  1426                           
  1427  0072                     ___lwdiv@dividend:	
  1428                           ; 2 bytes @ 0x2
  1429                           
  1430                           
  1431                           ; 2 bytes @ 0x2
  1432  0072                     	ds	1
  1433  0073                     strncmp@len:	
  1434                           
  1435                           ; 2 bytes @ 0x3
  1436  0073                     	ds	1
  1437  0074                     ??___wmul:	
  1438  0074                     ??___lwdiv:	
  1439                           ; 1 bytes @ 0x4
  1440                           
  1441  0074                     ___wmul@product:	
  1442                           ; 1 bytes @ 0x4
  1443                           
  1444                           
  1445                           ; 2 bytes @ 0x4
  1446  0074                     	ds	1
  1447  0075                     ??_strncmp:	
  1448  0075                     ___lwdiv@quotient:	
  1449                           ; 1 bytes @ 0x5
  1450                           
  1451                           
  1452                           ; 2 bytes @ 0x5
  1453  0075                     	ds	1
  1454  0076                     ?_atoi:	
  1455                           
  1456                           ; 2 bytes @ 0x6
  1457  0076                     	ds	1
  1458  0077                     ___lwdiv@counter:	
  1459                           
  1460                           ; 1 bytes @ 0x7
  1461  0077                     	ds	1
  1462  0078                     ??_atoi:	
  1463  0078                     ?___lwmod:	
  1464                           ; 1 bytes @ 0x8
  1465                           
  1466  0078                     ___lwmod@divisor:	
  1467                           ; 2 bytes @ 0x8
  1468                           
  1469                           
  1470                           ; 2 bytes @ 0x8
  1471  0078                     	ds	2
  1472  007A                     atoi@sign:	
  1473  007A                     ___lwmod@dividend:	
  1474                           ; 1 bytes @ 0xA
  1475                           
  1476                           
  1477                           ; 2 bytes @ 0xA
  1478  007A                     	ds	1
  1479  007B                     atoi@a:	
  1480                           
  1481                           ; 2 bytes @ 0xB
  1482  007B                     	ds	1
  1483  007C                     ??___lwmod:	
  1484                           
  1485                           ; 1 bytes @ 0xC
  1486  007C                     	ds	1
  1487  007D                     atoi@s:	
  1488  007D                     ___lwmod@counter:	
  1489                           ; 1 bytes @ 0xD
  1490                           
  1491                           
  1492                           ; 1 bytes @ 0xD
  1493  007D                     	ds	1
  1494                           
  1495                           	psect	cstackBANK0
  1496  0020                     __pcstackBANK0:	
  1497  0020                     ?_printf:	
  1498  0020                     printf@f:	
  1499                           ; 2 bytes @ 0x0
  1500                           
  1501                           
  1502                           ; 2 bytes @ 0x0
  1503  0020                     	ds	4
  1504  0024                     ??_printf:	
  1505                           
  1506                           ; 1 bytes @ 0x4
  1507  0024                     	ds	4
  1508  0028                     printf@ap:	
  1509                           
  1510                           ; 1 bytes @ 0x8
  1511  0028                     	ds	1
  1512  0029                     printf@flag:	
  1513                           
  1514                           ; 1 bytes @ 0x9
  1515  0029                     	ds	1
  1516  002A                     printf@prec:	
  1517                           
  1518                           ; 1 bytes @ 0xA
  1519  002A                     	ds	1
  1520  002B                     printf@val:	
  1521                           
  1522                           ; 2 bytes @ 0xB
  1523  002B                     	ds	2
  1524  002D                     printf@c:	
  1525                           
  1526                           ; 1 bytes @ 0xD
  1527  002D                     	ds	1
  1528  002E                     ??_main:	
  1529                           
  1530                           ; 1 bytes @ 0xE
  1531  002E                     	ds	1
  1532  002F                     main@buf:	
  1533                           
  1534                           ; 8 bytes @ 0xF
  1535  002F                     	ds	8
  1536  0037                     main@level:	
  1537                           
  1538                           ; 8 bytes @ 0x17
  1539  0037                     	ds	8
  1540  003F                     main@c:	
  1541                           
  1542                           ; 1 bytes @ 0x1F
  1543  003F                     	ds	1
  1544  0040                     main@t_max:	
  1545                           
  1546                           ; 1 bytes @ 0x20
  1547  0040                     	ds	1
  1548  0041                     main@channels:	
  1549                           
  1550                           ; 1 bytes @ 0x21
  1551  0041                     	ds	1
  1552  0042                     main@cnt:	
  1553                           
  1554                           ; 1 bytes @ 0x22
  1555  0042                     	ds	1
  1556  0043                     main@mask:	
  1557                           
  1558                           ; 1 bytes @ 0x23
  1559  0043                     	ds	1
  1560  0044                     main@i:	
  1561                           
  1562                           ; 1 bytes @ 0x24
  1563  0044                     	ds	1
  1564                           
  1565                           	psect	maintext
  1566  06EC                     __pmaintext:	
  1567 ;;
  1568 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1569 ;;
  1570 ;; *************** function _main *****************
  1571 ;; Defined at:
  1572 ;;		line 14 in file "main.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  buf             8   15[BANK0 ] unsigned char [8]
  1577 ;;  level           8   23[BANK0 ] unsigned int [4]
  1578 ;;  i               1   36[BANK0 ] unsigned char 
  1579 ;;  mask            1   35[BANK0 ] unsigned char 
  1580 ;;  cnt             1   34[BANK0 ] unsigned char 
  1581 ;;  channels        1   33[BANK0 ] unsigned char 
  1582 ;;  t_max           1   32[BANK0 ] unsigned char 
  1583 ;;  c               1   31[BANK0 ] unsigned char 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : B1F/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1594 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1595 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1596 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1597 ;;Total ram usage:       23 bytes
  1598 ;; Hardware stack levels required when called:    3
  1599 ;; This function calls:
  1600 ;;		_ADC_GetConversionResult
  1601 ;;		_ADC_IsConversionDone
  1602 ;;		_ADC_SelectChannel
  1603 ;;		_ADC_StartConversion
  1604 ;;		_DATAEE_ReadByte
  1605 ;;		_DATAEE_WriteByte
  1606 ;;		_EUSART_Read
  1607 ;;		_SYSTEM_Initialize
  1608 ;;		_TMR0_HasOverflowOccured
  1609 ;;		_atoi
  1610 ;;		_printf
  1611 ;;		_strncmp
  1612 ;; This function is called by:
  1613 ;;		Startup code after reset
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           
  1618                           ;psect for function _main
  1619  06EC                     _main:	
  1620                           
  1621                           ;main.c: 17: SYSTEM_Initialize();
  1622                           
  1623                           ;incstack = 0
  1624                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1625  06EC  3184  24CF  3186   	fcall	_SYSTEM_Initialize
  1626                           
  1627                           ;main.c: 19: uint8_t buf[8] = {'\n'};
  1628  06EF  3045               	movlw	low main@F3027
  1629  06F0  0086               	movwf	6
  1630  06F1  3000               	movlw	high main@F3027
  1631  06F2  0087               	movwf	7
  1632  06F3  302F               	movlw	low main@buf
  1633  06F4  0084               	movwf	4
  1634  06F5  3000               	movlw	high main@buf
  1635  06F6  0085               	movwf	5
  1636  06F7  3008               	movlw	8
  1637  06F8  0020               	movlb	0	; select bank0
  1638  06F9  00AE               	movwf	??_main
  1639  06FA                     u1010:	
  1640  06FA  0016               	moviw fsr1++
  1641  06FB  001A               	movwi fsr0++
  1642  06FC  0BAE               	decfsz	??_main,f
  1643  06FD  2EFA               	goto	u1010
  1644                           
  1645                           ;main.c: 20: uint8_t cnt = 0;
  1646  06FE  01C2               	clrf	main@cnt
  1647                           
  1648                           ;main.c: 21: uint8_t c;
  1649                           ;main.c: 22: uint8_t t_max = DATAEE_ReadByte(0);
  1650  06FF  3000               	movlw	0
  1651  0700  3184  249A  3186   	fcall	_DATAEE_ReadByte
  1652  0703  0020               	movlb	0	; select bank0
  1653  0704  00AE               	movwf	??_main
  1654  0705  082E               	movf	??_main,w
  1655  0706  00C0               	movwf	main@t_max
  1656                           
  1657                           ;main.c: 23: uint8_t channels = DATAEE_ReadByte(1);
  1658  0707  3001               	movlw	1
  1659  0708  3184  249A  3186   	fcall	_DATAEE_ReadByte
  1660  070B  0020               	movlb	0	; select bank0
  1661  070C  00AE               	movwf	??_main
  1662  070D  082E               	movf	??_main,w
  1663  070E  00C1               	movwf	main@channels
  1664                           
  1665                           ;main.c: 24: adc_result_t level[4];
  1666                           ;main.c: 25: uint8_t mask = 0b00000001;
  1667  070F  01C3               	clrf	main@mask
  1668  0710  0AC3               	incf	main@mask,f
  1669  0711                     l1599:	
  1670                           ;main.c: 27: uint8_t i;
  1671                           ;main.c: 29: while (1)
  1672                           
  1673                           
  1674                           ;main.c: 30: {
  1675                           ;main.c: 31: if ((PIR1bits.RCIF)) {
  1676  0711  0020               	movlb	0	; select bank0
  1677  0712  1E91               	btfss	17,5	;volatile
  1678  0713  2F78               	goto	l1625
  1679                           
  1680                           ;main.c: 32: c = EUSART_Read();
  1681  0714  3184  2485  3186   	fcall	_EUSART_Read
  1682  0717  0020               	movlb	0	; select bank0
  1683  0718  00AE               	movwf	??_main
  1684  0719  082E               	movf	??_main,w
  1685  071A  00BF               	movwf	main@c
  1686                           
  1687                           ;main.c: 33: buf[cnt++] = c;
  1688  071B  083F               	movf	main@c,w
  1689  071C  00AE               	movwf	??_main
  1690  071D  0842               	movf	main@cnt,w
  1691  071E  3E2F               	addlw	(low (main@buf| 0))& (0+255)
  1692  071F  0086               	movwf	6
  1693  0720  0187               	clrf	7
  1694  0721  082E               	movf	??_main,w
  1695  0722  0081               	movwf	1
  1696  0723  3001               	movlw	1
  1697  0724  00AE               	movwf	??_main
  1698  0725  082E               	movf	??_main,w
  1699  0726  07C2               	addwf	main@cnt,f
  1700                           
  1701                           ;main.c: 34: if (c == '\n') {
  1702  0727  300A               	movlw	10
  1703  0728  063F               	xorwf	main@c,w
  1704  0729  1D03               	btfss	3,2
  1705  072A  2F78               	goto	l1625
  1706                           
  1707                           ;main.c: 35: buf[cnt] = '\0';
  1708  072B  0842               	movf	main@cnt,w
  1709  072C  3E2F               	addlw	(low (main@buf| 0))& (0+255)
  1710  072D  0086               	movwf	6
  1711  072E  0187               	clrf	7
  1712  072F  0181               	clrf	1
  1713                           
  1714                           ;main.c: 36: cnt = 0;
  1715  0730  01C2               	clrf	main@cnt
  1716                           
  1717                           ;main.c: 37: if (!strncmp("t:", buf, 2)) {
  1718  0731  3019               	movlw	low (STR_1| (0+32768))
  1719  0732  00F0               	movwf	strncmp@s1
  1720  0733  3088               	movlw	high (STR_1| (0+32768))
  1721  0734  00F1               	movwf	strncmp@s1+1
  1722  0735  302F               	movlw	(low (main@buf| 0))& (0+255)
  1723  0736  00AE               	movwf	??_main
  1724  0737  082E               	movf	??_main,w
  1725  0738  00F2               	movwf	strncmp@s2
  1726  0739  3002               	movlw	2
  1727  073A  00F3               	movwf	strncmp@len
  1728  073B  3000               	movlw	0
  1729  073C  00F4               	movwf	strncmp@len+1
  1730  073D  3185  2590  3186   	fcall	_strncmp
  1731  0740  0870               	movf	?_strncmp,w
  1732  0741  0471               	iorwf	?_strncmp+1,w
  1733  0742  1D03               	btfss	3,2
  1734  0743  2F53               	goto	l1619
  1735                           
  1736                           ;main.c: 38: t_max = atoi(&buf[2]);
  1737  0744  3031               	movlw	(low ((main@buf| 0+2)))& (0+255)
  1738  0745  3185  25CE  3186   	fcall	_atoi
  1739  0748  0876               	movf	?_atoi,w
  1740  0749  0020               	movlb	0	; select bank0
  1741  074A  00AE               	movwf	??_main
  1742  074B  082E               	movf	??_main,w
  1743  074C  00C0               	movwf	main@t_max
  1744                           
  1745                           ;main.c: 39: DATAEE_WriteByte(0, t_max);
  1746  074D  0840               	movf	main@t_max,w
  1747  074E  00AE               	movwf	??_main
  1748  074F  082E               	movf	??_main,w
  1749  0750  00F0               	movwf	DATAEE_WriteByte@bData
  1750  0751  3000               	movlw	0
  1751  0752  2F75               	goto	L1
  1752  0753                     l1619:	
  1753                           ;main.c: 41: } else if (!strncmp("f:", buf, 2)) {
  1754                           
  1755  0753  3016               	movlw	low (STR_2| (0+32768))
  1756  0754  00F0               	movwf	strncmp@s1
  1757  0755  3088               	movlw	high (STR_2| (0+32768))
  1758  0756  00F1               	movwf	strncmp@s1+1
  1759  0757  302F               	movlw	(low (main@buf| 0))& (0+255)
  1760  0758  0020               	movlb	0	; select bank0
  1761  0759  00AE               	movwf	??_main
  1762  075A  082E               	movf	??_main,w
  1763  075B  00F2               	movwf	strncmp@s2
  1764  075C  3002               	movlw	2
  1765  075D  00F3               	movwf	strncmp@len
  1766  075E  3000               	movlw	0
  1767  075F  00F4               	movwf	strncmp@len+1
  1768  0760  3185  2590  3186   	fcall	_strncmp
  1769  0763  0870               	movf	?_strncmp,w
  1770  0764  0471               	iorwf	?_strncmp+1,w
  1771  0765  1D03               	btfss	3,2
  1772  0766  2F78               	goto	l1625
  1773                           
  1774                           ;main.c: 42: channels = atoi(&buf[2]);
  1775  0767  3031               	movlw	(low ((main@buf| 0+2)))& (0+255)
  1776  0768  3185  25CE  3186   	fcall	_atoi
  1777  076B  0876               	movf	?_atoi,w
  1778  076C  0020               	movlb	0	; select bank0
  1779  076D  00AE               	movwf	??_main
  1780  076E  082E               	movf	??_main,w
  1781  076F  00C1               	movwf	main@channels
  1782                           
  1783                           ;main.c: 43: DATAEE_WriteByte(1, channels);
  1784  0770  0841               	movf	main@channels,w
  1785  0771  00AE               	movwf	??_main
  1786  0772  082E               	movf	??_main,w
  1787  0773  00F0               	movwf	DATAEE_WriteByte@bData
  1788  0774  3001               	movlw	1
  1789  0775                     L1:	
  1790  0775  3185  2513  3186   	fcall	_DATAEE_WriteByte
  1791  0778                     l1625:	
  1792                           
  1793                           ;main.c: 45: }
  1794                           ;main.c: 46: }
  1795                           ;main.c: 47: }
  1796                           ;main.c: 48: if (TMR0_HasOverflowOccured()) {
  1797  0778  3184  244C  3186   	fcall	_TMR0_HasOverflowOccured
  1798  077B  3A00               	xorlw	0
  1799  077C  1903               	skipnz
  1800  077D  2F11               	goto	l1599
  1801                           
  1802                           ;main.c: 49: TMR0IF = 0;
  1803  077E  110B               	bcf	11,2	;volatile
  1804                           
  1805                           ;main.c: 50: if (++tmr >= t_max) {
  1806  077F  3001               	movlw	1
  1807  0780  0020               	movlb	0	; select bank0
  1808  0781  00AE               	movwf	??_main
  1809  0782  082E               	movf	??_main,w
  1810  0783  07CE               	addwf	_tmr,f
  1811  0784  0840               	movf	main@t_max,w
  1812  0785  024E               	subwf	_tmr,w
  1813  0786  1C03               	skipc
  1814  0787  2F11               	goto	l1599
  1815                           
  1816                           ;main.c: 52: tmr = 0;
  1817  0788  01CE               	clrf	_tmr
  1818                           
  1819                           ;main.c: 53: mask = 0b00000001;
  1820  0789  01C3               	clrf	main@mask
  1821  078A  0AC3               	incf	main@mask,f
  1822                           
  1823                           ;main.c: 54: for (i=0; i<4; i++) {
  1824  078B  01C4               	clrf	main@i
  1825  078C  3004               	movlw	4
  1826  078D  0244               	subwf	main@i,w
  1827  078E  1803               	btfsc	3,0
  1828  078F  2FC8               	goto	l1657
  1829  0790                     l1639:	
  1830                           
  1831                           ;main.c: 55: if (mask & channels) {
  1832  0790  0843               	movf	main@mask,w
  1833  0791  0541               	andwf	main@channels,w
  1834  0792  1903               	btfsc	3,2
  1835  0793  2FB5               	goto	l1649
  1836                           
  1837                           ;main.c: 56: ADC_SelectChannel(ANALOG_IN[i]);
  1838  0794  0844               	movf	main@i,w
  1839  0795  3E0A               	addlw	low (_ANALOG_IN| (0+32768))
  1840  0796  0084               	movwf	4
  1841  0797  3088               	movlw	high (_ANALOG_IN| (0+32768))
  1842  0798  1803               	skipnc
  1843  0799  3E01               	addlw	1
  1844  079A  0085               	movwf	5
  1845  079B  0800               	movf	0,w	;code access
  1846  079C  3184  24A6  3186   	fcall	_ADC_SelectChannel
  1847                           
  1848                           ;main.c: 57: ADC_StartConversion();
  1849  079F  3184  2445  3186   	fcall	_ADC_StartConversion
  1850  07A2                     l1645:	
  1851                           ;main.c: 58: while(!ADC_IsConversionDone());
  1852                           
  1853  07A2  3184  2466  3186   	fcall	_ADC_IsConversionDone
  1854  07A5  3A00               	xorlw	0
  1855  07A6  1903               	skipnz
  1856  07A7  2FA2               	goto	l1645
  1857                           
  1858                           ;main.c: 59: level[i] = ADC_GetConversionResult();
  1859  07A8  3184  245A  3186   	fcall	_ADC_GetConversionResult
  1860  07AB  0020               	movlb	0	; select bank0
  1861  07AC  3544               	lslf	main@i,w
  1862  07AD  3E37               	addlw	(low (main@level| 0))& (0+255)
  1863  07AE  0086               	movwf	6
  1864  07AF  0187               	clrf	7
  1865  07B0  0870               	movf	?_ADC_GetConversionResult,w
  1866  07B1  3FC0               	movwi [0]fsr1
  1867  07B2  0871               	movf	?_ADC_GetConversionResult+1,w
  1868  07B3  3FC1               	movwi [1]fsr1
  1869                           
  1870                           ;main.c: 60: } else {
  1871  07B4  2FBC               	goto	l1651
  1872  07B5                     l1649:	
  1873                           
  1874                           ;main.c: 61: level[i] = 0;
  1875  07B5  3544               	lslf	main@i,w
  1876  07B6  3E37               	addlw	(low (main@level| 0))& (0+255)
  1877  07B7  0086               	movwf	6
  1878  07B8  0187               	clrf	7
  1879  07B9  3000               	movlw	0
  1880  07BA  3FC0               	movwi [0]fsr1
  1881  07BB  3FC1               	movwi [1]fsr1
  1882  07BC                     l1651:	
  1883                           
  1884                           ;main.c: 62: }
  1885                           ;main.c: 63: mask = mask << 1;
  1886  07BC  3543               	lslf	main@mask,w
  1887  07BD  00AE               	movwf	??_main
  1888  07BE  082E               	movf	??_main,w
  1889  07BF  00C3               	movwf	main@mask
  1890  07C0  3001               	movlw	1
  1891  07C1  00AE               	movwf	??_main
  1892  07C2  082E               	movf	??_main,w
  1893  07C3  07C4               	addwf	main@i,f
  1894  07C4  3004               	movlw	4
  1895  07C5  0244               	subwf	main@i,w
  1896  07C6  1C03               	skipc
  1897  07C7  2F90               	goto	l1639
  1898  07C8                     l1657:	
  1899                           
  1900                           ;main.c: 64: }
  1901                           ;main.c: 65: for (i=0; i<3; i++) {
  1902  07C8  01C4               	clrf	main@i
  1903  07C9  3003               	movlw	3
  1904  07CA  0244               	subwf	main@i,w
  1905  07CB  1803               	btfsc	3,0
  1906  07CC  2FE5               	goto	l1669
  1907  07CD                     l1663:	
  1908                           
  1909                           ;main.c: 66: printf("%d,", level[i]);
  1910  07CD  3012               	movlw	low (STR_3| (0+32768))
  1911  07CE  00A0               	movwf	printf@f
  1912  07CF  3088               	movlw	high (STR_3| (0+32768))
  1913  07D0  00A1               	movwf	printf@f+1
  1914  07D1  3544               	lslf	main@i,w
  1915  07D2  3E37               	addlw	(low (main@level| 0))& (0+255)
  1916  07D3  0086               	movwf	6
  1917  07D4  0187               	clrf	7
  1918  07D5  3F40               	moviw [0]fsr1
  1919  07D6  00A2               	movwf	?_printf+2
  1920  07D7  3F41               	moviw [1]fsr1
  1921  07D8  00A3               	movwf	?_printf+3
  1922  07D9  3186  2635  3186   	fcall	_printf
  1923  07DC  3001               	movlw	1
  1924  07DD  0020               	movlb	0	; select bank0
  1925  07DE  00AE               	movwf	??_main
  1926  07DF  082E               	movf	??_main,w
  1927  07E0  07C4               	addwf	main@i,f
  1928  07E1  3003               	movlw	3
  1929  07E2  0244               	subwf	main@i,w
  1930  07E3  1C03               	skipc
  1931  07E4  2FCD               	goto	l1663
  1932  07E5                     l1669:	
  1933                           
  1934                           ;main.c: 67: }
  1935                           ;main.c: 68: printf("%d\n", level[3]);
  1936  07E5  300E               	movlw	low (STR_4| (0+32768))
  1937  07E6  00A0               	movwf	printf@f
  1938  07E7  3088               	movlw	high (STR_4| (0+32768))
  1939  07E8  00A1               	movwf	printf@f+1
  1940  07E9  083E               	movf	main@level+7,w
  1941  07EA  00A3               	movwf	?_printf+3
  1942  07EB  083D               	movf	main@level+6,w
  1943  07EC  00A2               	movwf	?_printf+2
  1944  07ED  3186  2635  3186   	fcall	_printf
  1945  07F0  2F11               	goto	l1599
  1946  07F1                     __end_of_main:	
  1947                           
  1948                           	psect	text1
  1949  0590                     __ptext1:	
  1950 ;; *************** function _strncmp *****************
  1951 ;; Defined at:
  1952 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strncmp.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  s1              2    0[COMMON] PTR const unsigned char 
  1955 ;;		 -> STR_2(3), STR_1(3), 
  1956 ;;  s2              1    2[COMMON] PTR const unsigned char 
  1957 ;;		 -> main@buf(8), 
  1958 ;;  len             2    3[COMMON] unsigned int 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  2    0[COMMON] int 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1970 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1973 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1974 ;;Total ram usage:        7 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; This function calls:
  1977 ;;		Nothing
  1978 ;; This function is called by:
  1979 ;;		_main
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _strncmp
  1985  0590                     _strncmp:	
  1986  0590                     l1493:	
  1987                           ;incstack = 0
  1988                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  1989                           
  1990  0590  3001               	movlw	1
  1991  0591  02F3               	subwf	strncmp@len,f
  1992  0592  3000               	movlw	0
  1993  0593  3BF4               	subwfb	strncmp@len+1,f
  1994  0594  0A73               	incf	strncmp@len,w
  1995  0595  1903               	btfsc	3,2
  1996  0596  0A74               	incf	strncmp@len+1,w
  1997  0597  1903               	btfsc	3,2
  1998  0598  2DCB               	goto	l1495
  1999  0599  0870               	movf	strncmp@s1,w
  2000  059A  0084               	movwf	4
  2001  059B  0871               	movf	strncmp@s1+1,w
  2002  059C  0085               	movwf	5
  2003  059D  0012               	moviw fsr0++
  2004  059E  1903               	btfsc	3,2
  2005  059F  2DAB               	goto	l1485
  2006  05A0  0872               	movf	strncmp@s2,w
  2007  05A1  0086               	movwf	6
  2008  05A2  0187               	clrf	7
  2009  05A3  0870               	movf	strncmp@s1,w
  2010  05A4  0084               	movwf	4
  2011  05A5  0871               	movf	strncmp@s1+1,w
  2012  05A6  0085               	movwf	5
  2013  05A7  0800               	movf	0,w	;code access
  2014  05A8  0601               	xorwf	1,w
  2015  05A9  1903               	skipnz
  2016  05AA  2DC2               	goto	l1489
  2017  05AB                     l1485:	
  2018  05AB  0872               	movf	strncmp@s2,w
  2019  05AC  0086               	movwf	6
  2020  05AD  0187               	clrf	7
  2021  05AE  0801               	movf	1,w
  2022  05AF  00F5               	movwf	??_strncmp
  2023  05B0  01F6               	clrf	??_strncmp+1
  2024  05B1  09F5               	comf	??_strncmp,f
  2025  05B2  09F6               	comf	??_strncmp+1,f
  2026  05B3  0AF5               	incf	??_strncmp,f
  2027  05B4  1903               	skipnz
  2028  05B5  0AF6               	incf	??_strncmp+1,f
  2029  05B6  0870               	movf	strncmp@s1,w
  2030  05B7  0084               	movwf	4
  2031  05B8  0871               	movf	strncmp@s1+1,w
  2032  05B9  0085               	movwf	5
  2033  05BA  0800               	movf	0,w	;code access
  2034  05BB  0775               	addwf	??_strncmp,w
  2035  05BC  00F0               	movwf	?_strncmp
  2036  05BD  0876               	movf	??_strncmp+1,w
  2037  05BE  1803               	skipnc
  2038  05BF  0A76               	incf	??_strncmp+1,w
  2039  05C0  00F1               	movwf	?_strncmp+1
  2040  05C1  0008               	return
  2041  05C2                     l1489:	
  2042  05C2  3001               	movlw	1
  2043  05C3  07F0               	addwf	strncmp@s1,f
  2044  05C4  3000               	movlw	0
  2045  05C5  3DF1               	addwfc	strncmp@s1+1,f
  2046  05C6  3001               	movlw	1
  2047  05C7  00F5               	movwf	??_strncmp
  2048  05C8  0875               	movf	??_strncmp,w
  2049  05C9  07F2               	addwf	strncmp@s2,f
  2050  05CA  2D90               	goto	l1493
  2051  05CB                     l1495:	
  2052  05CB  01F0               	clrf	?_strncmp
  2053  05CC  01F1               	clrf	?_strncmp+1
  2054  05CD  0008               	return
  2055  05CE                     __end_of_strncmp:	
  2056                           
  2057                           	psect	text2
  2058  0635                     __ptext2:	
  2059 ;; *************** function _printf *****************
  2060 ;; Defined at:
  2061 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  2064 ;;		 -> STR_4(4), STR_3(4), 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  tmpval          4    0        struct .
  2067 ;;  val             2   11[BANK0 ] unsigned int 
  2068 ;;  cp              2    0        PTR const unsigned char 
  2069 ;;  len             2    0        unsigned int 
  2070 ;;  c               1   13[BANK0 ] char 
  2071 ;;  prec            1   10[BANK0 ] char 
  2072 ;;  flag            1    9[BANK0 ] unsigned char 
  2073 ;;  ap              1    8[BANK0 ] PTR void [1]
  2074 ;;		 -> ?_printf(2), 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  2    0[BANK0 ] int 
  2077 ;; Registers used:
  2078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2084 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2085 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2086 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2087 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2088 ;;Total ram usage:       14 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    2
  2091 ;; This function calls:
  2092 ;;		___lwdiv
  2093 ;;		___lwmod
  2094 ;;		_putch
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function _printf
  2102  0635                     _printf:	
  2103                           
  2104                           ;doprnt.c: 466: va_list ap;
  2105                           ;doprnt.c: 499: signed char c;
  2106                           ;doprnt.c: 506: signed char prec;
  2107                           ;doprnt.c: 508: unsigned char flag;
  2108                           ;doprnt.c: 523: union {
  2109                           ;doprnt.c: 524: unsigned long vd;
  2110                           ;doprnt.c: 525: double integ;
  2111                           ;doprnt.c: 526: } tmpval;
  2112                           ;doprnt.c: 528: unsigned int val;
  2113                           ;doprnt.c: 529: unsigned len;
  2114                           ;doprnt.c: 530: const char * cp;
  2115                           ;doprnt.c: 533: *ap = __va_start();
  2116                           
  2117                           ;incstack = 0
  2118                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2119  0635  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2120  0636  0020               	movlb	0	; select bank0
  2121  0637  00A4               	movwf	??_printf
  2122  0638  0824               	movf	??_printf,w
  2123  0639  00A8               	movwf	printf@ap
  2124  063A                     l1579:	
  2125                           ;doprnt.c: 536: while(c = *f++) {
  2126                           
  2127  063A  0020               	movlb	0	; select bank0
  2128  063B  0821               	movf	printf@f+1,w
  2129  063C  00A5               	movwf	??_printf+1
  2130  063D  0820               	movf	printf@f,w
  2131  063E  00A4               	movwf	??_printf
  2132  063F  0AA0               	incf	printf@f,f
  2133  0640  1903               	skipnz
  2134  0641  0AA1               	incf	printf@f+1,f
  2135  0642  0824               	movf	??_printf,w
  2136  0643  0084               	movwf	4
  2137  0644  0825               	movf	??_printf+1,w
  2138  0645  0085               	movwf	5
  2139  0646  0800               	movf	0,w	;code access
  2140  0647  00A6               	movwf	??_printf+2
  2141  0648  0826               	movf	??_printf+2,w
  2142  0649  00AD               	movwf	printf@c
  2143  064A  082D               	movf	printf@c,w
  2144  064B  1903               	btfsc	3,2
  2145  064C  0008               	return
  2146                           
  2147                           ;doprnt.c: 538: if(c != '%')
  2148  064D  3025               	movlw	37
  2149  064E  062D               	xorwf	printf@c,w
  2150  064F  1903               	btfsc	3,2
  2151  0650  2E56               	goto	l1539
  2152                           
  2153                           ;doprnt.c: 540: {
  2154                           ;doprnt.c: 541: (putch(c) );
  2155  0651  082D               	movf	printf@c,w
  2156  0652  3184  2455  3186   	fcall	_putch
  2157                           
  2158                           ;doprnt.c: 542: continue;
  2159  0655  2E3A               	goto	l1579
  2160  0656                     l1539:	
  2161                           
  2162                           ;doprnt.c: 543: }
  2163                           ;doprnt.c: 548: flag = 0;
  2164  0656  0020               	movlb	0	; select bank0
  2165  0657  01A9               	clrf	printf@flag
  2166                           
  2167                           ;doprnt.c: 822: }
  2168                           
  2169                           ;doprnt.c: 813: continue;
  2170                           
  2171                           ;doprnt.c: 802: default:
  2172                           
  2173                           ;doprnt.c: 698: case 'i':
  2174                           ;doprnt.c: 699: break;
  2175                           
  2176                           ;doprnt.c: 697: case 'd':
  2177                           
  2178                           ;doprnt.c: 638: goto alldone;
  2179                           
  2180                           ;doprnt.c: 637: case 0:
  2181                           
  2182                           ;doprnt.c: 635: switch(c = *f++) {
  2183  0658  0821               	movf	printf@f+1,w
  2184  0659  00A5               	movwf	??_printf+1
  2185  065A  0820               	movf	printf@f,w
  2186  065B  00A4               	movwf	??_printf
  2187  065C  0AA0               	incf	printf@f,f
  2188  065D  1903               	skipnz
  2189  065E  0AA1               	incf	printf@f+1,f
  2190  065F  0824               	movf	??_printf,w
  2191  0660  0084               	movwf	4
  2192  0661  0825               	movf	??_printf+1,w
  2193  0662  0085               	movwf	5
  2194  0663  0800               	movf	0,w	;code access
  2195  0664  00AD               	movwf	printf@c
  2196                           
  2197                           ; Switch size 1, requested type "space"
  2198                           ; Number of cases is 3, Range of values is 0 to 105
  2199                           ; switch strategies available:
  2200                           ; Name         Instructions Cycles
  2201                           ; simple_byte           10     6 (average)
  2202                           ; direct_byte          218     6 (fixed)
  2203                           ; jumptable            260     6 (fixed)
  2204                           ;	Chosen strategy is simple_byte
  2205  0665  3A00               	xorlw	0	; case 0
  2206  0666  1903               	skipnz
  2207  0667  2EEB               	goto	l286
  2208  0668  3A64               	xorlw	100	; case 100
  2209  0669  1903               	skipnz
  2210  066A  2E6F               	goto	l1545
  2211  066B  3A0D               	xorlw	13	; case 105
  2212  066C  1903               	skipnz
  2213  066D  2E6F               	goto	l1545
  2214  066E  2E3A               	goto	l1579
  2215  066F                     l1545:	
  2216                           
  2217                           ;doprnt.c: 1253: {
  2218                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2219  066F  0828               	movf	printf@ap,w
  2220  0670  0086               	movwf	6
  2221  0671  0187               	clrf	7
  2222  0672  3F40               	moviw [0]fsr1
  2223  0673  00AB               	movwf	printf@val
  2224  0674  3F41               	moviw [1]fsr1
  2225  0675  00AC               	movwf	printf@val+1
  2226  0676  3002               	movlw	2
  2227  0677  00A4               	movwf	??_printf
  2228  0678  0824               	movf	??_printf,w
  2229  0679  07A8               	addwf	printf@ap,f
  2230                           
  2231                           ;doprnt.c: 1261: if((int)val < 0) {
  2232  067A  1FAC               	btfss	printf@val+1,7
  2233  067B  2E85               	goto	l1555
  2234                           
  2235                           ;doprnt.c: 1262: flag |= 0x03;
  2236  067C  3003               	movlw	3
  2237  067D  00A4               	movwf	??_printf
  2238  067E  0824               	movf	??_printf,w
  2239  067F  04A9               	iorwf	printf@flag,f
  2240                           
  2241                           ;doprnt.c: 1263: val = -val;
  2242  0680  09AB               	comf	printf@val,f
  2243  0681  09AC               	comf	printf@val+1,f
  2244  0682  0AAB               	incf	printf@val,f
  2245  0683  1903               	skipnz
  2246  0684  0AAC               	incf	printf@val+1,f
  2247  0685                     l1555:	
  2248                           
  2249                           ;doprnt.c: 1264: }
  2250                           ;doprnt.c: 1266: }
  2251                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2252  0685  01AD               	clrf	printf@c
  2253  0686  0AAD               	incf	printf@c,f
  2254  0687  3005               	movlw	5
  2255  0688  062D               	xorwf	printf@c,w
  2256  0689  1903               	btfsc	3,2
  2257  068A  2EAA               	goto	l1567
  2258  068B                     l1561:	
  2259                           
  2260                           ;doprnt.c: 1306: if(val < dpowers[c])
  2261  068B  082D               	movf	printf@c,w
  2262  068C  00A4               	movwf	??_printf
  2263  068D  01A5               	clrf	??_printf+1
  2264  068E  35A4               	lslf	??_printf,f
  2265  068F  0DA5               	rlf	??_printf+1,f
  2266  0690  3000               	movlw	low (_dpowers| (0+32768))
  2267  0691  0724               	addwf	??_printf,w
  2268  0692  0084               	movwf	4
  2269  0693  3088               	movlw	high (_dpowers| (0+32768))
  2270  0694  3D25               	addwfc	??_printf+1,w
  2271  0695  0085               	movwf	5
  2272  0696  3F00               	moviw [0]fsr0
  2273  0697  00A6               	movwf	??_printf+2
  2274  0698  3F01               	moviw [1]fsr0
  2275  0699  00A7               	movwf	??_printf+3
  2276  069A  0827               	movf	??_printf+3,w
  2277  069B  022C               	subwf	printf@val+1,w
  2278  069C  1D03               	skipz
  2279  069D  2EA0               	goto	u965
  2280  069E  0826               	movf	??_printf+2,w
  2281  069F  022B               	subwf	printf@val,w
  2282  06A0                     u965:	
  2283  06A0  1C03               	btfss	3,0
  2284  06A1  2EAA               	goto	l1567
  2285                           
  2286                           ;doprnt.c: 1307: break;
  2287  06A2  3001               	movlw	1
  2288  06A3  00A4               	movwf	??_printf
  2289  06A4  0824               	movf	??_printf,w
  2290  06A5  07AD               	addwf	printf@c,f
  2291  06A6  3005               	movlw	5
  2292  06A7  062D               	xorwf	printf@c,w
  2293  06A8  1D03               	btfss	3,2
  2294  06A9  2E8B               	goto	l1561
  2295  06AA                     l1567:	
  2296                           
  2297                           ;doprnt.c: 1422: {
  2298                           ;doprnt.c: 1438: if(flag & 0x03)
  2299  06AA  0829               	movf	printf@flag,w
  2300  06AB  3903               	andlw	3
  2301  06AC  1903               	btfsc	3,2
  2302  06AD  2EB2               	goto	l1571
  2303                           
  2304                           ;doprnt.c: 1439: (putch('-') );
  2305  06AE  302D               	movlw	45
  2306  06AF  3184  2455  3186   	fcall	_putch
  2307  06B2                     l1571:	
  2308                           
  2309                           ;doprnt.c: 1469: }
  2310                           ;doprnt.c: 1472: prec = c;
  2311  06B2  0020               	movlb	0	; select bank0
  2312  06B3  082D               	movf	printf@c,w
  2313  06B4  00A4               	movwf	??_printf
  2314  06B5  0824               	movf	??_printf,w
  2315  06B6  00AA               	movwf	printf@prec
  2316  06B7                     l1577:	
  2317                           ;doprnt.c: 1474: while(prec--) {
  2318                           
  2319  06B7  30FF               	movlw	255
  2320  06B8  0020               	movlb	0	; select bank0
  2321  06B9  00A4               	movwf	??_printf
  2322  06BA  0824               	movf	??_printf,w
  2323  06BB  07AA               	addwf	printf@prec,f
  2324  06BC  0A2A               	incf	printf@prec,w
  2325  06BD  1903               	btfsc	3,2
  2326  06BE  2E3A               	goto	l1579
  2327                           
  2328                           ;doprnt.c: 1478: {
  2329                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2330  06BF  300A               	movlw	10
  2331  06C0  00F8               	movwf	___lwmod@divisor
  2332  06C1  3000               	movlw	0
  2333  06C2  00F9               	movwf	___lwmod@divisor+1
  2334  06C3  082A               	movf	printf@prec,w
  2335  06C4  00A4               	movwf	??_printf
  2336  06C5  01A5               	clrf	??_printf+1
  2337  06C6  35A4               	lslf	??_printf,f
  2338  06C7  0DA5               	rlf	??_printf+1,f
  2339  06C8  3000               	movlw	low (_dpowers| (0+32768))
  2340  06C9  0724               	addwf	??_printf,w
  2341  06CA  0084               	movwf	4
  2342  06CB  3088               	movlw	high (_dpowers| (0+32768))
  2343  06CC  3D25               	addwfc	??_printf+1,w
  2344  06CD  0085               	movwf	5
  2345  06CE  3F00               	moviw [0]fsr0
  2346  06CF  00F0               	movwf	___lwdiv@divisor
  2347  06D0  3F01               	moviw [1]fsr0
  2348  06D1  00F1               	movwf	___lwdiv@divisor+1
  2349  06D2  082C               	movf	printf@val+1,w
  2350  06D3  00F3               	movwf	___lwdiv@dividend+1
  2351  06D4  082B               	movf	printf@val,w
  2352  06D5  00F2               	movwf	___lwdiv@dividend
  2353  06D6  3185  255C  3186   	fcall	___lwdiv
  2354  06D9  0871               	movf	?___lwdiv+1,w
  2355  06DA  00FB               	movwf	___lwmod@dividend+1
  2356  06DB  0870               	movf	?___lwdiv,w
  2357  06DC  00FA               	movwf	___lwmod@dividend
  2358  06DD  3185  2530  3186   	fcall	___lwmod
  2359  06E0  0878               	movf	?___lwmod,w
  2360  06E1  3E30               	addlw	48
  2361  06E2  0020               	movlb	0	; select bank0
  2362  06E3  00A6               	movwf	??_printf+2
  2363  06E4  0826               	movf	??_printf+2,w
  2364  06E5  00AD               	movwf	printf@c
  2365                           
  2366                           ;doprnt.c: 1523: }
  2367                           ;doprnt.c: 1524: (putch(c) );
  2368  06E6  082D               	movf	printf@c,w
  2369  06E7  3184  2455  3186   	fcall	_putch
  2370  06EA  2EB7               	goto	l1577
  2371  06EB                     l286:	
  2372                           ;doprnt.c: 1540: return 0;
  2373                           ;	Return value of _printf is never used
  2374                           
  2375                           ;doprnt.c: 1525: }
  2376                           ;doprnt.c: 1533: }
  2377                           ;doprnt.c: 1535: alldone:
  2378                           
  2379  06EB  0008               	return
  2380  06EC                     __end_of_printf:	
  2381                           
  2382                           	psect	text3
  2383  0455                     __ptext3:	
  2384 ;; *************** function _putch *****************
  2385 ;; Defined at:
  2386 ;;		line 110 in file "mcc_generated_files/eusart.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  txData          1    wreg     unsigned char 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  txData          1    1[COMMON] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0, pclath, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;Total ram usage:        1 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    1
  2407 ;; This function calls:
  2408 ;;		_EUSART_Write
  2409 ;; This function is called by:
  2410 ;;		_printf
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           
  2415                           ;psect for function _putch
  2416  0455                     _putch:	
  2417                           
  2418                           ;incstack = 0
  2419                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  2420                           ;putch@txData stored from wreg
  2421  0455  00F1               	movwf	putch@txData
  2422                           
  2423                           ;eusart.c: 112: EUSART_Write(txData);
  2424  0456  0871               	movf	putch@txData,w
  2425  0457  3184  2475         	fcall	_EUSART_Write
  2426  0459  0008               	return
  2427  045A                     __end_of_putch:	
  2428                           
  2429                           	psect	text4
  2430  0475                     __ptext4:	
  2431 ;; *************** function _EUSART_Write *****************
  2432 ;; Defined at:
  2433 ;;		line 96 in file "mcc_generated_files/eusart.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  txData          1    wreg     unsigned char 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  txData          1    0[COMMON] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2451 ;;Total ram usage:        1 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_putch
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           
  2461                           ;psect for function _EUSART_Write
  2462  0475                     _EUSART_Write:	
  2463                           
  2464                           ;incstack = 0
  2465                           ; Regs used in _EUSART_Write: [wreg]
  2466                           ;EUSART_Write@txData stored from wreg
  2467  0475  00F0               	movwf	EUSART_Write@txData
  2468  0476                     l86:	
  2469                           ;eusart.c: 99: {
  2470                           
  2471                           ;eusart.c: 98: while(0 == PIR1bits.TXIF)
  2472                           
  2473  0476  0020               	movlb	0	; select bank0
  2474  0477  1E11               	btfss	17,4	;volatile
  2475  0478  2C76               	goto	l86
  2476                           
  2477                           ;eusart.c: 100: }
  2478                           ;eusart.c: 102: TXREG = txData;
  2479  0479  0870               	movf	EUSART_Write@txData,w
  2480  047A  0023               	movlb	3	; select bank3
  2481  047B  009A               	movwf	26	;volatile
  2482  047C  0008               	return
  2483  047D                     __end_of_EUSART_Write:	
  2484                           
  2485                           	psect	text5
  2486  0530                     __ptext5:	
  2487 ;; *************** function ___lwmod *****************
  2488 ;; Defined at:
  2489 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwmod.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  divisor         2    8[COMMON] unsigned int 
  2492 ;;  dividend        2   10[COMMON] unsigned int 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  counter         1   13[COMMON] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  2    8[COMMON] unsigned int 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2507 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2508 ;;Total ram usage:        6 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_printf
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           
  2518                           ;psect for function ___lwmod
  2519  0530                     ___lwmod:	
  2520                           
  2521                           ;incstack = 0
  2522                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2523  0530  0878               	movf	___lwmod@divisor,w
  2524  0531  0479               	iorwf	___lwmod@divisor+1,w
  2525  0532  1903               	btfsc	3,2
  2526  0533  2D57               	goto	l1413
  2527  0534  01FD               	clrf	___lwmod@counter
  2528  0535  0AFD               	incf	___lwmod@counter,f
  2529  0536                     l1403:	
  2530  0536  1BF9               	btfsc	___lwmod@divisor+1,7
  2531  0537  2D42               	goto	l1405
  2532  0538  3001               	movlw	1
  2533  0539                     u765:	
  2534  0539  35F8               	lslf	___lwmod@divisor,f
  2535  053A  0DF9               	rlf	___lwmod@divisor+1,f
  2536  053B  0B89               	decfsz	9,f
  2537  053C  2D39               	goto	u765
  2538  053D  3001               	movlw	1
  2539  053E  00FC               	movwf	??___lwmod
  2540  053F  087C               	movf	??___lwmod,w
  2541  0540  07FD               	addwf	___lwmod@counter,f
  2542  0541  2D36               	goto	l1403
  2543  0542                     l1405:	
  2544  0542  0879               	movf	___lwmod@divisor+1,w
  2545  0543  027B               	subwf	___lwmod@dividend+1,w
  2546  0544  1D03               	skipz
  2547  0545  2D48               	goto	u785
  2548  0546  0878               	movf	___lwmod@divisor,w
  2549  0547  027A               	subwf	___lwmod@dividend,w
  2550  0548                     u785:	
  2551  0548  1C03               	skipc
  2552  0549  2D4E               	goto	l1409
  2553  054A  0878               	movf	___lwmod@divisor,w
  2554  054B  02FA               	subwf	___lwmod@dividend,f
  2555  054C  0879               	movf	___lwmod@divisor+1,w
  2556  054D  3BFB               	subwfb	___lwmod@dividend+1,f
  2557  054E                     l1409:	
  2558  054E  3001               	movlw	1
  2559  054F                     u795:	
  2560  054F  36F9               	lsrf	___lwmod@divisor+1,f
  2561  0550  0CF8               	rrf	___lwmod@divisor,f
  2562  0551  0B89               	decfsz	9,f
  2563  0552  2D4F               	goto	u795
  2564  0553  3001               	movlw	1
  2565  0554  02FD               	subwf	___lwmod@counter,f
  2566  0555  1D03               	btfss	3,2
  2567  0556  2D42               	goto	l1405
  2568  0557                     l1413:	
  2569  0557  087B               	movf	___lwmod@dividend+1,w
  2570  0558  00F9               	movwf	?___lwmod+1
  2571  0559  087A               	movf	___lwmod@dividend,w
  2572  055A  00F8               	movwf	?___lwmod
  2573  055B  0008               	return
  2574  055C                     __end_of___lwmod:	
  2575                           
  2576                           	psect	text6
  2577  055C                     __ptext6:	
  2578 ;; *************** function ___lwdiv *****************
  2579 ;; Defined at:
  2580 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  divisor         2    0[COMMON] unsigned int 
  2583 ;;  dividend        2    2[COMMON] unsigned int 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  quotient        2    5[COMMON] unsigned int 
  2586 ;;  counter         1    7[COMMON] unsigned char 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  2    0[COMMON] unsigned int 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2596 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2597 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2599 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2600 ;;Total ram usage:        8 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; This function calls:
  2603 ;;		Nothing
  2604 ;; This function is called by:
  2605 ;;		_printf
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           
  2610                           ;psect for function ___lwdiv
  2611  055C                     ___lwdiv:	
  2612                           
  2613                           ;incstack = 0
  2614                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2615  055C  01F5               	clrf	___lwdiv@quotient
  2616  055D  01F6               	clrf	___lwdiv@quotient+1
  2617  055E  0870               	movf	___lwdiv@divisor,w
  2618  055F  0471               	iorwf	___lwdiv@divisor+1,w
  2619  0560  1903               	btfsc	3,2
  2620  0561  2D8B               	goto	l1391
  2621  0562  01F7               	clrf	___lwdiv@counter
  2622  0563  0AF7               	incf	___lwdiv@counter,f
  2623  0564                     l1379:	
  2624  0564  1BF1               	btfsc	___lwdiv@divisor+1,7
  2625  0565  2D70               	goto	l1381
  2626  0566  3001               	movlw	1
  2627  0567                     u695:	
  2628  0567  35F0               	lslf	___lwdiv@divisor,f
  2629  0568  0DF1               	rlf	___lwdiv@divisor+1,f
  2630  0569  0B89               	decfsz	9,f
  2631  056A  2D67               	goto	u695
  2632  056B  3001               	movlw	1
  2633  056C  00F4               	movwf	??___lwdiv
  2634  056D  0874               	movf	??___lwdiv,w
  2635  056E  07F7               	addwf	___lwdiv@counter,f
  2636  056F  2D64               	goto	l1379
  2637  0570                     l1381:	
  2638  0570  3001               	movlw	1
  2639  0571                     u715:	
  2640  0571  35F5               	lslf	___lwdiv@quotient,f
  2641  0572  0DF6               	rlf	___lwdiv@quotient+1,f
  2642  0573  0B89               	decfsz	9,f
  2643  0574  2D71               	goto	u715
  2644  0575  0871               	movf	___lwdiv@divisor+1,w
  2645  0576  0273               	subwf	___lwdiv@dividend+1,w
  2646  0577  1D03               	skipz
  2647  0578  2D7B               	goto	u725
  2648  0579  0870               	movf	___lwdiv@divisor,w
  2649  057A  0272               	subwf	___lwdiv@dividend,w
  2650  057B                     u725:	
  2651  057B  1C03               	skipc
  2652  057C  2D82               	goto	l1387
  2653  057D  0870               	movf	___lwdiv@divisor,w
  2654  057E  02F2               	subwf	___lwdiv@dividend,f
  2655  057F  0871               	movf	___lwdiv@divisor+1,w
  2656  0580  3BF3               	subwfb	___lwdiv@dividend+1,f
  2657  0581  1475               	bsf	___lwdiv@quotient,0
  2658  0582                     l1387:	
  2659  0582  3001               	movlw	1
  2660  0583                     u735:	
  2661  0583  36F1               	lsrf	___lwdiv@divisor+1,f
  2662  0584  0CF0               	rrf	___lwdiv@divisor,f
  2663  0585  0B89               	decfsz	9,f
  2664  0586  2D83               	goto	u735
  2665  0587  3001               	movlw	1
  2666  0588  02F7               	subwf	___lwdiv@counter,f
  2667  0589  1D03               	btfss	3,2
  2668  058A  2D70               	goto	l1381
  2669  058B                     l1391:	
  2670  058B  0876               	movf	___lwdiv@quotient+1,w
  2671  058C  00F1               	movwf	?___lwdiv+1
  2672  058D  0875               	movf	___lwdiv@quotient,w
  2673  058E  00F0               	movwf	?___lwdiv
  2674  058F  0008               	return
  2675  0590                     __end_of___lwdiv:	
  2676                           
  2677                           	psect	text7
  2678  05CE                     __ptext7:	
  2679 ;; *************** function _atoi *****************
  2680 ;; Defined at:
  2681 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\atoi.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  s               1    wreg     PTR const unsigned char 
  2684 ;;		 -> main@buf(8), 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  s               1   13[COMMON] PTR const unsigned char 
  2687 ;;		 -> main@buf(8), 
  2688 ;;  a               2   11[COMMON] int 
  2689 ;;  sign            1   10[COMMON] unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  2    6[COMMON] int 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2700 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2702 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2703 ;;Total ram usage:        8 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    1
  2706 ;; This function calls:
  2707 ;;		___wmul
  2708 ;;		_isdigit
  2709 ;; This function is called by:
  2710 ;;		_main
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           
  2715                           ;psect for function _atoi
  2716  05CE                     _atoi:	
  2717                           
  2718                           ;incstack = 0
  2719                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2720                           ;atoi@s stored from wreg
  2721  05CE  00FD               	movwf	atoi@s
  2722  05CF                     l1503:	
  2723  05CF  087D               	movf	atoi@s,w
  2724  05D0  0086               	movwf	6
  2725  05D1  0187               	clrf	7
  2726  05D2  3020               	movlw	32
  2727  05D3  0601               	xorwf	1,w
  2728  05D4  1D03               	btfss	3,2
  2729  05D5  2DDB               	goto	l1505
  2730  05D6                     l1501:	
  2731  05D6  3001               	movlw	1
  2732  05D7  00F8               	movwf	??_atoi
  2733  05D8  0878               	movf	??_atoi,w
  2734  05D9  07FD               	addwf	atoi@s,f
  2735  05DA  2DCF               	goto	l1503
  2736  05DB                     l1505:	
  2737  05DB  087D               	movf	atoi@s,w
  2738  05DC  0086               	movwf	6
  2739  05DD  0187               	clrf	7
  2740  05DE  3009               	movlw	9
  2741  05DF  0601               	xorwf	1,w
  2742  05E0  1903               	btfsc	3,2
  2743  05E1  2DD6               	goto	l1501
  2744  05E2  01FB               	clrf	atoi@a
  2745  05E3  01FC               	clrf	atoi@a+1
  2746  05E4  01FA               	clrf	atoi@sign
  2747  05E5  087D               	movf	atoi@s,w
  2748  05E6  0086               	movwf	6
  2749  05E7  0187               	clrf	7
  2750  05E8  302D               	movlw	45
  2751  05E9  0601               	xorwf	1,w
  2752  05EA  1D03               	btfss	3,2
  2753  05EB  2DF1               	goto	l1513
  2754  05EC  3001               	movlw	1
  2755  05ED  00F8               	movwf	??_atoi
  2756  05EE  0878               	movf	??_atoi,w
  2757  05EF  07FA               	addwf	atoi@sign,f
  2758  05F0  2DF8               	goto	l1519
  2759  05F1                     l1513:	
  2760  05F1  087D               	movf	atoi@s,w
  2761  05F2  0086               	movwf	6
  2762  05F3  0187               	clrf	7
  2763  05F4  302B               	movlw	43
  2764  05F5  0601               	xorwf	1,w
  2765  05F6  1D03               	btfss	3,2
  2766  05F7  2DFC               	goto	l1521
  2767  05F8                     l1519:	
  2768  05F8  3001               	movlw	1
  2769  05F9  00F8               	movwf	??_atoi
  2770  05FA  0878               	movf	??_atoi,w
  2771  05FB  07FD               	addwf	atoi@s,f
  2772  05FC                     l1521:	
  2773  05FC  087D               	movf	atoi@s,w
  2774  05FD  0086               	movwf	6
  2775  05FE  0187               	clrf	7
  2776  05FF  0801               	movf	1,w
  2777  0600  3184  24C1  3185   	fcall	_isdigit
  2778  0603  1C03               	btfss	3,0
  2779  0604  2E21               	goto	l1523
  2780  0605  087C               	movf	atoi@a+1,w
  2781  0606  00F1               	movwf	___wmul@multiplier+1
  2782  0607  087B               	movf	atoi@a,w
  2783  0608  00F0               	movwf	___wmul@multiplier
  2784  0609  300A               	movlw	10
  2785  060A  00F2               	movwf	___wmul@multiplicand
  2786  060B  3000               	movlw	0
  2787  060C  00F3               	movwf	___wmul@multiplicand+1
  2788  060D  3184  24F8  3185   	fcall	___wmul
  2789  0610  087D               	movf	atoi@s,w
  2790  0611  0086               	movwf	6
  2791  0612  0187               	clrf	7
  2792  0613  0801               	movf	1,w
  2793  0614  0770               	addwf	?___wmul,w
  2794  0615  00F8               	movwf	??_atoi
  2795  0616  0871               	movf	?___wmul+1,w
  2796  0617  1803               	skipnc
  2797  0618  0A71               	incf	?___wmul+1,w
  2798  0619  00F9               	movwf	??_atoi+1
  2799  061A  0878               	movf	??_atoi,w
  2800  061B  3ED0               	addlw	208
  2801  061C  00FB               	movwf	atoi@a
  2802  061D  30FF               	movlw	255
  2803  061E  3D79               	addwfc	??_atoi+1,w
  2804  061F  00FC               	movwf	atoi@a+1
  2805  0620  2DF8               	goto	l1519
  2806  0621                     l1523:	
  2807  0621  087A               	movf	atoi@sign,w
  2808  0622  1903               	btfsc	3,2
  2809  0623  2E30               	goto	l1529
  2810  0624  097B               	comf	atoi@a,w
  2811  0625  00F8               	movwf	??_atoi
  2812  0626  097C               	comf	atoi@a+1,w
  2813  0627  00F9               	movwf	??_atoi+1
  2814  0628  0AF8               	incf	??_atoi,f
  2815  0629  1903               	skipnz
  2816  062A  0AF9               	incf	??_atoi+1,f
  2817  062B  0878               	movf	??_atoi,w
  2818  062C  00F6               	movwf	?_atoi
  2819  062D  0879               	movf	??_atoi+1,w
  2820  062E  00F7               	movwf	?_atoi+1
  2821  062F  0008               	return
  2822  0630                     l1529:	
  2823  0630  087C               	movf	atoi@a+1,w
  2824  0631  00F7               	movwf	?_atoi+1
  2825  0632  087B               	movf	atoi@a,w
  2826  0633  00F6               	movwf	?_atoi
  2827  0634  0008               	return
  2828  0635                     __end_of_atoi:	
  2829                           
  2830                           	psect	text8
  2831  04C1                     __ptext8:	
  2832 ;; *************** function _isdigit *****************
  2833 ;; Defined at:
  2834 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\isdigit.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  c               1    wreg     unsigned char 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  c               1    1[COMMON] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;		None               void
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2849 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2852 ;;Total ram usage:        2 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_atoi
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           
  2862                           ;psect for function _isdigit
  2863  04C1                     _isdigit:	
  2864                           
  2865                           ;incstack = 0
  2866                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2867                           ;isdigit@c stored from wreg
  2868  04C1  00F1               	movwf	isdigit@c
  2869  04C2  01F0               	clrf	_isdigit$683
  2870  04C3  303A               	movlw	58
  2871  04C4  0271               	subwf	isdigit@c,w
  2872  04C5  1803               	skipnc
  2873  04C6  2CCD               	goto	l1365
  2874  04C7  3030               	movlw	48
  2875  04C8  0271               	subwf	isdigit@c,w
  2876  04C9  1C03               	skipc
  2877  04CA  2CCD               	goto	l1365
  2878  04CB  01F0               	clrf	_isdigit$683
  2879  04CC  0AF0               	incf	_isdigit$683,f
  2880  04CD                     l1365:	
  2881  04CD  0C70               	rrf	_isdigit$683,w
  2882  04CE  0008               	return
  2883  04CF                     __end_of_isdigit:	
  2884                           
  2885                           	psect	text9
  2886  04F8                     __ptext9:	
  2887 ;; *************** function ___wmul *****************
  2888 ;; Defined at:
  2889 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  multiplier      2    0[COMMON] unsigned int 
  2892 ;;  multiplicand    2    2[COMMON] unsigned int 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  product         2    4[COMMON] unsigned int 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  2    0[COMMON] unsigned int 
  2897 ;; Registers used:
  2898 ;;		wreg, status,2, status,0
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2905 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2907 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2908 ;;Total ram usage:        6 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_atoi
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           
  2918                           ;psect for function ___wmul
  2919  04F8                     ___wmul:	
  2920                           
  2921                           ;incstack = 0
  2922                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2923  04F8  01F4               	clrf	___wmul@product
  2924  04F9  01F5               	clrf	___wmul@product+1
  2925  04FA                     l1345:	
  2926  04FA  1C70               	btfss	___wmul@multiplier,0
  2927  04FB  2D00               	goto	l370
  2928  04FC  0872               	movf	___wmul@multiplicand,w
  2929  04FD  07F4               	addwf	___wmul@product,f
  2930  04FE  0873               	movf	___wmul@multiplicand+1,w
  2931  04FF  3DF5               	addwfc	___wmul@product+1,f
  2932  0500                     l370:	
  2933  0500  3001               	movlw	1
  2934  0501                     u635:	
  2935  0501  35F2               	lslf	___wmul@multiplicand,f
  2936  0502  0DF3               	rlf	___wmul@multiplicand+1,f
  2937  0503  0B89               	decfsz	9,f
  2938  0504  2D01               	goto	u635
  2939  0505  3001               	movlw	1
  2940  0506                     u645:	
  2941  0506  36F1               	lsrf	___wmul@multiplier+1,f
  2942  0507  0CF0               	rrf	___wmul@multiplier,f
  2943  0508  0B89               	decfsz	9,f
  2944  0509  2D06               	goto	u645
  2945  050A  0870               	movf	___wmul@multiplier,w
  2946  050B  0471               	iorwf	___wmul@multiplier+1,w
  2947  050C  1D03               	btfss	3,2
  2948  050D  2CFA               	goto	l1345
  2949  050E  0875               	movf	___wmul@product+1,w
  2950  050F  00F1               	movwf	?___wmul+1
  2951  0510  0874               	movf	___wmul@product,w
  2952  0511  00F0               	movwf	?___wmul
  2953  0512  0008               	return
  2954  0513                     __end_of___wmul:	
  2955                           
  2956                           	psect	text10
  2957  044C                     __ptext10:	
  2958 ;; *************** function _TMR0_HasOverflowOccured *****************
  2959 ;; Defined at:
  2960 ;;		line 101 in file "mcc_generated_files/tmr0.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      unsigned char 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2978 ;;Total ram usage:        0 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_main
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function _TMR0_HasOverflowOccured
  2989  044C                     _TMR0_HasOverflowOccured:	
  2990                           
  2991                           ;tmr0.c: 104: return(INTCONbits.TMR0IF);
  2992                           
  2993                           ;incstack = 0
  2994                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
  2995  044C  0C0B               	rrf	11,w	;volatile
  2996  044D  0C89               	rrf	9,f
  2997  044E  3901               	andlw	1
  2998  044F  0008               	return
  2999  0450                     __end_of_TMR0_HasOverflowOccured:	
  3000                           
  3001                           	psect	text11
  3002  04CF                     __ptext11:	
  3003 ;; *************** function _SYSTEM_Initialize *****************
  3004 ;; Defined at:
  3005 ;;		line 69 in file "mcc_generated_files/mcc.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0, pclath, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;Total ram usage:        0 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    1
  3026 ;; This function calls:
  3027 ;;		_ADC_Initialize
  3028 ;;		_EUSART_Initialize
  3029 ;;		_OSCILLATOR_Initialize
  3030 ;;		_PIN_MANAGER_Initialize
  3031 ;;		_TMR0_Initialize
  3032 ;;		_WDT_Initialize
  3033 ;; This function is called by:
  3034 ;;		_main
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           
  3039                           ;psect for function _SYSTEM_Initialize
  3040  04CF                     _SYSTEM_Initialize:	
  3041                           
  3042                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3046  04CF  3184  24E1  3184   	fcall	_PIN_MANAGER_Initialize
  3047                           
  3048                           ;mcc.c: 73: OSCILLATOR_Initialize();
  3049  04D2  3184  2450  3184   	fcall	_OSCILLATOR_Initialize
  3050                           
  3051                           ;mcc.c: 74: WDT_Initialize();
  3052  04D5  3184  2448  3184   	fcall	_WDT_Initialize
  3053                           
  3054                           ;mcc.c: 75: ADC_Initialize();
  3055  04D8  3184  246D  3184   	fcall	_ADC_Initialize
  3056                           
  3057                           ;mcc.c: 76: TMR0_Initialize();
  3058  04DB  3184  24B3  3184   	fcall	_TMR0_Initialize
  3059                           
  3060                           ;mcc.c: 77: EUSART_Initialize();
  3061  04DE  3184  248F         	fcall	_EUSART_Initialize
  3062  04E0  0008               	return
  3063  04E1                     __end_of_SYSTEM_Initialize:	
  3064                           
  3065                           	psect	text12
  3066  0448                     __ptext12:	
  3067 ;; *************** function _WDT_Initialize *****************
  3068 ;; Defined at:
  3069 ;;		line 88 in file "mcc_generated_files/mcc.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;		None
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;		None
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      void 
  3076 ;; Registers used:
  3077 ;;		wreg
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3087 ;;Total ram usage:        0 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_SYSTEM_Initialize
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function _WDT_Initialize
  3098  0448                     _WDT_Initialize:	
  3099                           
  3100                           ;mcc.c: 91: WDTCON = 0x16;
  3101                           
  3102                           ;incstack = 0
  3103                           ; Regs used in _WDT_Initialize: [wreg]
  3104  0448  3016               	movlw	22
  3105  0449  0021               	movlb	1	; select bank1
  3106  044A  0097               	movwf	23	;volatile
  3107  044B  0008               	return
  3108  044C                     __end_of_WDT_Initialize:	
  3109                           
  3110                           	psect	text13
  3111  04B3                     __ptext13:	
  3112 ;; *************** function _TMR0_Initialize *****************
  3113 ;; Defined at:
  3114 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3131 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3132 ;;Total ram usage:        1 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_SYSTEM_Initialize
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           
  3142                           ;psect for function _TMR0_Initialize
  3143  04B3                     _TMR0_Initialize:	
  3144                           
  3145                           ;tmr0.c: 67: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD2 & 0x3F);
  3146                           
  3147                           ;incstack = 0
  3148                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  3149  04B3  0021               	movlb	1	; select bank1
  3150  04B4  0815               	movf	21,w	;volatile
  3151  04B5  39C0               	andlw	192
  3152  04B6  3812               	iorlw	18
  3153  04B7  0095               	movwf	21	;volatile
  3154                           
  3155                           ;tmr0.c: 70: TMR0 = 0x06;
  3156  04B8  3006               	movlw	6
  3157  04B9  0020               	movlb	0	; select bank0
  3158  04BA  0095               	movwf	21	;volatile
  3159                           
  3160                           ;tmr0.c: 73: timer0ReloadVal= 6;
  3161  04BB  3006               	movlw	6
  3162  04BC  00F0               	movwf	??_TMR0_Initialize
  3163  04BD  0870               	movf	??_TMR0_Initialize,w
  3164  04BE  00CD               	movwf	_timer0ReloadVal	;volatile
  3165                           
  3166                           ;tmr0.c: 76: INTCONbits.TMR0IF = 0;
  3167  04BF  110B               	bcf	11,2	;volatile
  3168  04C0  0008               	return
  3169  04C1                     __end_of_TMR0_Initialize:	
  3170                           
  3171                           	psect	text14
  3172  04E1                     __ptext14:	
  3173 ;; *************** function _PIN_MANAGER_Initialize *****************
  3174 ;; Defined at:
  3175 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3193 ;;Total ram usage:        0 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_SYSTEM_Initialize
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           
  3203                           ;psect for function _PIN_MANAGER_Initialize
  3204  04E1                     _PIN_MANAGER_Initialize:	
  3205                           
  3206                           ;pin_manager.c: 57: LATA = 0x00;
  3207                           
  3208                           ;incstack = 0
  3209                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3210  04E1  0022               	movlb	2	; select bank2
  3211  04E2  018C               	clrf	12	;volatile
  3212                           
  3213                           ;pin_manager.c: 58: LATC = 0x00;
  3214  04E3  018E               	clrf	14	;volatile
  3215                           
  3216                           ;pin_manager.c: 63: TRISA = 0x3F;
  3217  04E4  303F               	movlw	63
  3218  04E5  0021               	movlb	1	; select bank1
  3219  04E6  008C               	movwf	12	;volatile
  3220                           
  3221                           ;pin_manager.c: 64: TRISC = 0x3F;
  3222  04E7  303F               	movlw	63
  3223  04E8  008E               	movwf	14	;volatile
  3224                           
  3225                           ;pin_manager.c: 69: ANSELC = 0x0F;
  3226  04E9  300F               	movlw	15
  3227  04EA  0023               	movlb	3	; select bank3
  3228  04EB  008E               	movwf	14	;volatile
  3229                           
  3230                           ;pin_manager.c: 70: ANSELA = 0x17;
  3231  04EC  3017               	movlw	23
  3232  04ED  008C               	movwf	12	;volatile
  3233                           
  3234                           ;pin_manager.c: 75: WPUA = 0x28;
  3235  04EE  3028               	movlw	40
  3236  04EF  0024               	movlb	4	; select bank4
  3237  04F0  008C               	movwf	12	;volatile
  3238                           
  3239                           ;pin_manager.c: 76: WPUC = 0x00;
  3240  04F1  018E               	clrf	14	;volatile
  3241                           
  3242                           ;pin_manager.c: 77: OPTION_REGbits.nWPUEN = 0;
  3243  04F2  0021               	movlb	1	; select bank1
  3244  04F3  1395               	bcf	21,7	;volatile
  3245                           
  3246                           ;pin_manager.c: 83: APFCON1 = 0x00;
  3247  04F4  0022               	movlb	2	; select bank2
  3248  04F5  019E               	clrf	30	;volatile
  3249                           
  3250                           ;pin_manager.c: 84: APFCON0 = 0x00;
  3251  04F6  019D               	clrf	29	;volatile
  3252  04F7  0008               	return
  3253  04F8                     __end_of_PIN_MANAGER_Initialize:	
  3254                           
  3255                           	psect	text15
  3256  0450                     __ptext15:	
  3257 ;; *************** function _OSCILLATOR_Initialize *****************
  3258 ;; Defined at:
  3259 ;;		line 80 in file "mcc_generated_files/mcc.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; This function calls:
  3280 ;;		Nothing
  3281 ;; This function is called by:
  3282 ;;		_SYSTEM_Initialize
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           
  3287                           ;psect for function _OSCILLATOR_Initialize
  3288  0450                     _OSCILLATOR_Initialize:	
  3289                           
  3290                           ;mcc.c: 83: OSCCON = 0x5A;
  3291                           
  3292                           ;incstack = 0
  3293                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3294  0450  305A               	movlw	90
  3295  0451  0021               	movlb	1	; select bank1
  3296  0452  0099               	movwf	25	;volatile
  3297                           
  3298                           ;mcc.c: 85: OSCTUNE = 0x00;
  3299  0453  0198               	clrf	24	;volatile
  3300  0454  0008               	return
  3301  0455                     __end_of_OSCILLATOR_Initialize:	
  3302                           
  3303                           	psect	text16
  3304  048F                     __ptext16:	
  3305 ;; *************** function _EUSART_Initialize *****************
  3306 ;; Defined at:
  3307 ;;		line 55 in file "mcc_generated_files/eusart.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;Total ram usage:        0 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_SYSTEM_Initialize
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           
  3335                           ;psect for function _EUSART_Initialize
  3336  048F                     _EUSART_Initialize:	
  3337                           
  3338                           ;eusart.c: 60: BAUDCON = 0x08;
  3339                           
  3340                           ;incstack = 0
  3341                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  3342  048F  3008               	movlw	8
  3343  0490  0023               	movlb	3	; select bank3
  3344  0491  009F               	movwf	31	;volatile
  3345                           
  3346                           ;eusart.c: 63: RCSTA = 0x90;
  3347  0492  3090               	movlw	144
  3348  0493  009D               	movwf	29	;volatile
  3349                           
  3350                           ;eusart.c: 66: TXSTA = 0x24;
  3351  0494  3024               	movlw	36
  3352  0495  009E               	movwf	30	;volatile
  3353                           
  3354                           ;eusart.c: 69: SPBRGL = 0x19;
  3355  0496  3019               	movlw	25
  3356  0497  009B               	movwf	27	;volatile
  3357                           
  3358                           ;eusart.c: 72: SPBRGH = 0x00;
  3359  0498  019C               	clrf	28	;volatile
  3360  0499  0008               	return
  3361  049A                     __end_of_EUSART_Initialize:	
  3362                           
  3363                           	psect	text17
  3364  046D                     __ptext17:	
  3365 ;; *************** function _ADC_Initialize *****************
  3366 ;; Defined at:
  3367 ;;		line 64 in file "mcc_generated_files/adc.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_SYSTEM_Initialize
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           
  3395                           ;psect for function _ADC_Initialize
  3396  046D                     _ADC_Initialize:	
  3397                           
  3398                           ;adc.c: 69: ADCON0 = 0x01;
  3399                           
  3400                           ;incstack = 0
  3401                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3402  046D  3001               	movlw	1
  3403  046E  0021               	movlb	1	; select bank1
  3404  046F  009D               	movwf	29	;volatile
  3405                           
  3406                           ;adc.c: 72: ADCON1 = 0xF0;
  3407  0470  30F0               	movlw	240
  3408  0471  009E               	movwf	30	;volatile
  3409                           
  3410                           ;adc.c: 75: ADRESL = 0x00;
  3411  0472  019B               	clrf	27	;volatile
  3412                           
  3413                           ;adc.c: 78: ADRESH = 0x00;
  3414  0473  019C               	clrf	28	;volatile
  3415  0474  0008               	return
  3416  0475                     __end_of_ADC_Initialize:	
  3417                           
  3418                           	psect	text18
  3419  0485                     __ptext18:	
  3420 ;; *************** function _EUSART_Read *****************
  3421 ;; Defined at:
  3422 ;;		line 77 in file "mcc_generated_files/eusart.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      unsigned char 
  3429 ;; Registers used:
  3430 ;;		wreg
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3440 ;;Total ram usage:        0 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_main
  3446 ;;		_getch
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450                           
  3451                           ;psect for function _EUSART_Read
  3452  0485                     _EUSART_Read:	
  3453  0485                     l79:	
  3454                           ;eusart.c: 81: {
  3455                           
  3456                           ;eusart.c: 80: while(!PIR1bits.RCIF)
  3457                           
  3458                           ;incstack = 0
  3459                           ; Regs used in _EUSART_Read: [wreg]
  3460                           
  3461  0485  0020               	movlb	0	; select bank0
  3462  0486  1E91               	btfss	17,5	;volatile
  3463  0487  2C85               	goto	l79
  3464                           
  3465                           ;eusart.c: 82: }
  3466                           ;eusart.c: 85: if(1 == RCSTAbits.OERR)
  3467  0488  0023               	movlb	3	; select bank3
  3468  0489  1C9D               	btfss	29,1	;volatile
  3469  048A  2C8D               	goto	l1423
  3470                           
  3471                           ;eusart.c: 86: {
  3472                           ;eusart.c: 89: RCSTAbits.SPEN = 0;
  3473  048B  139D               	bcf	29,7	;volatile
  3474                           
  3475                           ;eusart.c: 90: RCSTAbits.SPEN = 1;
  3476  048C  179D               	bsf	29,7	;volatile
  3477  048D                     l1423:	
  3478                           
  3479                           ;eusart.c: 91: }
  3480                           ;eusart.c: 93: return RCREG;
  3481  048D  0819               	movf	25,w	;volatile
  3482  048E  0008               	return
  3483  048F                     __end_of_EUSART_Read:	
  3484                           
  3485                           	psect	text19
  3486  0513                     __ptext19:	
  3487 ;; *************** function _DATAEE_WriteByte *****************
  3488 ;; Defined at:
  3489 ;;		line 180 in file "mcc_generated_files/memory.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  bAdd            1    wreg     unsigned char 
  3492 ;;  bData           1    0[COMMON] unsigned char 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;  bAdd            1    1[COMMON] unsigned char 
  3495 ;;  GIEBitValue     1    2[COMMON] unsigned char 
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3505 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3508 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3509 ;;Total ram usage:        3 bytes
  3510 ;; Hardware stack levels used:    1
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_main
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           
  3519                           ;psect for function _DATAEE_WriteByte
  3520  0513                     _DATAEE_WriteByte:	
  3521                           
  3522                           ;incstack = 0
  3523                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  3524                           ;DATAEE_WriteByte@bAdd stored from wreg
  3525  0513  00F1               	movwf	DATAEE_WriteByte@bAdd
  3526                           
  3527                           ;memory.c: 182: uint8_t GIEBitValue = 0;
  3528  0514  01F2               	clrf	DATAEE_WriteByte@GIEBitValue
  3529                           
  3530                           ;memory.c: 184: EEADRL = (bAdd & 0x0ff);
  3531  0515  0871               	movf	DATAEE_WriteByte@bAdd,w
  3532  0516  0023               	movlb	3	; select bank3
  3533  0517  0091               	movwf	17	;volatile
  3534                           
  3535                           ;memory.c: 185: EEDATL = bData;
  3536  0518  0870               	movf	DATAEE_WriteByte@bData,w
  3537  0519  0093               	movwf	19	;volatile
  3538                           
  3539                           ;memory.c: 186: EECON1bits.EEPGD = 0;
  3540  051A  1395               	bcf	21,7	;volsfr
  3541                           
  3542                           ;memory.c: 187: EECON1bits.CFGS = 0;
  3543  051B  1315               	bcf	21,6	;volsfr
  3544                           
  3545                           ;memory.c: 188: EECON1bits.WREN = 1;
  3546  051C  1515               	bsf	21,2	;volsfr
  3547                           
  3548                           ;memory.c: 190: GIEBitValue = INTCONbits.GIE;
  3549  051D  3000               	movlw	0
  3550  051E  1B8B               	btfsc	11,7	;volatile
  3551  051F  3001               	movlw	1
  3552  0520  00F2               	movwf	DATAEE_WriteByte@GIEBitValue
  3553                           
  3554                           ;memory.c: 191: INTCONbits.GIE = 0;
  3555  0521  138B               	bcf	11,7	;volatile
  3556                           
  3557                           ;memory.c: 192: EECON2 = 0x55;
  3558  0522  3055               	movlw	85
  3559  0523  0096               	movwf	22	;volsfr
  3560                           
  3561                           ;memory.c: 193: EECON2 = 0xAA;
  3562  0524  30AA               	movlw	170
  3563  0525  0096               	movwf	22	;volsfr
  3564                           
  3565                           ;memory.c: 194: EECON1bits.WR = 1;
  3566  0526  1495               	bsf	21,1	;volsfr
  3567  0527                     l192:	
  3568                           ;memory.c: 197: {
  3569                           
  3570                           ;memory.c: 196: while (EECON1bits.WR)
  3571                           
  3572  0527  1895               	btfsc	21,1	;volsfr
  3573  0528  2D27               	goto	l192
  3574                           
  3575                           ;memory.c: 198: }
  3576                           ;memory.c: 200: EECON1bits.WREN = 0;
  3577  0529  1115               	bcf	21,2	;volsfr
  3578                           
  3579                           ;memory.c: 201: INTCONbits.GIE = GIEBitValue;
  3580  052A  0C72               	rrf	DATAEE_WriteByte@GIEBitValue,w
  3581  052B  1C03               	skipc
  3582  052C  138B               	bcf	11,7	;volatile
  3583  052D  1803               	skipnc
  3584  052E  178B               	bsf	11,7	;volatile
  3585  052F  0008               	return
  3586  0530                     __end_of_DATAEE_WriteByte:	
  3587                           
  3588                           	psect	text20
  3589  049A                     __ptext20:	
  3590 ;; *************** function _DATAEE_ReadByte *****************
  3591 ;; Defined at:
  3592 ;;		line 204 in file "mcc_generated_files/memory.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  bAdd            1    wreg     unsigned char 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  bAdd            1    0[COMMON] unsigned char 
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      unsigned char 
  3599 ;; Registers used:
  3600 ;;		wreg
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3610 ;;Total ram usage:        1 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; This function calls:
  3613 ;;		Nothing
  3614 ;; This function is called by:
  3615 ;;		_main
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           
  3620                           ;psect for function _DATAEE_ReadByte
  3621  049A                     _DATAEE_ReadByte:	
  3622                           
  3623                           ;incstack = 0
  3624                           ; Regs used in _DATAEE_ReadByte: [wreg]
  3625                           ;DATAEE_ReadByte@bAdd stored from wreg
  3626  049A  00F0               	movwf	DATAEE_ReadByte@bAdd
  3627                           
  3628                           ;memory.c: 206: EEADRL = (bAdd & 0x0ff);
  3629  049B  0870               	movf	DATAEE_ReadByte@bAdd,w
  3630  049C  0023               	movlb	3	; select bank3
  3631  049D  0091               	movwf	17	;volatile
  3632                           
  3633                           ;memory.c: 207: EECON1bits.CFGS = 0;
  3634  049E  1315               	bcf	21,6	;volsfr
  3635                           
  3636                           ;memory.c: 208: EECON1bits.EEPGD = 0;
  3637  049F  1395               	bcf	21,7	;volsfr
  3638                           
  3639                           ;memory.c: 209: EECON1bits.RD = 1;
  3640  04A0  1415               	bsf	21,0	;volsfr
  3641                           
  3642                           ;memory.c: 210: __nop();
  3643  04A1  0000               	nop
  3644                           
  3645                           ;memory.c: 211: __nop();
  3646  04A2  0000               	nop
  3647                           
  3648                           ;memory.c: 213: return (EEDATL);
  3649  04A3  0023               	movlb	3	; select bank3
  3650  04A4  0813               	movf	19,w	;volatile
  3651  04A5  0008               	return
  3652  04A6                     __end_of_DATAEE_ReadByte:	
  3653                           
  3654                           	psect	text21
  3655  0445                     __ptext21:	
  3656 ;; *************** function _ADC_StartConversion *****************
  3657 ;; Defined at:
  3658 ;;		line 90 in file "mcc_generated_files/adc.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;		None
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		None
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3676 ;;Total ram usage:        0 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_main
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           
  3686                           ;psect for function _ADC_StartConversion
  3687  0445                     _ADC_StartConversion:	
  3688                           
  3689                           ;adc.c: 93: ADCON0bits.GO_nDONE = 1;
  3690                           
  3691                           ;incstack = 0
  3692                           ; Regs used in _ADC_StartConversion: []
  3693  0445  0021               	movlb	1	; select bank1
  3694  0446  149D               	bsf	29,1	;volatile
  3695  0447  0008               	return
  3696  0448                     __end_of_ADC_StartConversion:	
  3697                           
  3698                           	psect	text22
  3699  04A6                     __ptext22:	
  3700 ;; *************** function _ADC_SelectChannel *****************
  3701 ;; Defined at:
  3702 ;;		line 82 in file "mcc_generated_files/adc.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  channel         1    wreg     enum E2692
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  channel         1    1[COMMON] enum E2692
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3719 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;Total ram usage:        2 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_main
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           
  3730                           ;psect for function _ADC_SelectChannel
  3731  04A6                     _ADC_SelectChannel:	
  3732                           
  3733                           ;incstack = 0
  3734                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  3735                           ;ADC_SelectChannel@channel stored from wreg
  3736  04A6  00F1               	movwf	ADC_SelectChannel@channel
  3737                           
  3738                           ;adc.c: 85: ADCON0bits.CHS = channel;
  3739  04A7  0871               	movf	ADC_SelectChannel@channel,w
  3740  04A8  00F0               	movwf	??_ADC_SelectChannel
  3741  04A9  0DF0               	rlf	??_ADC_SelectChannel,f
  3742  04AA  0DF0               	rlf	??_ADC_SelectChannel,f
  3743  04AB  0021               	movlb	1	; select bank1
  3744  04AC  081D               	movf	29,w	;volatile
  3745  04AD  0670               	xorwf	??_ADC_SelectChannel,w
  3746  04AE  3983               	andlw	-125
  3747  04AF  0670               	xorwf	??_ADC_SelectChannel,w
  3748  04B0  009D               	movwf	29	;volatile
  3749                           
  3750                           ;adc.c: 87: ADCON0bits.ADON = 1;
  3751  04B1  141D               	bsf	29,0	;volatile
  3752  04B2  0008               	return
  3753  04B3                     __end_of_ADC_SelectChannel:	
  3754                           
  3755                           	psect	text23
  3756  0466                     __ptext23:	
  3757 ;; *************** function _ADC_IsConversionDone *****************
  3758 ;; Defined at:
  3759 ;;		line 97 in file "mcc_generated_files/adc.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;		None
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;		None
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      unsigned char 
  3766 ;; Registers used:
  3767 ;;		wreg, status,0
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3777 ;;Total ram usage:        0 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_main
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           
  3787                           ;psect for function _ADC_IsConversionDone
  3788  0466                     _ADC_IsConversionDone:	
  3789                           
  3790                           ;adc.c: 100: return ((bool)(!ADCON0bits.GO_nDONE));
  3791                           
  3792                           ;incstack = 0
  3793                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  3794  0466  1003               	clrc
  3795  0467  0021               	movlb	1	; select bank1
  3796  0468  1C9D               	btfss	29,1	;volatile
  3797  0469  1403               	setc
  3798  046A  3000               	movlw	0
  3799  046B  3D09               	addwfc	9,w
  3800  046C  0008               	return
  3801  046D                     __end_of_ADC_IsConversionDone:	
  3802                           
  3803                           	psect	text24
  3804  045A                     __ptext24:	
  3805 ;; *************** function _ADC_GetConversionResult *****************
  3806 ;; Defined at:
  3807 ;;		line 103 in file "mcc_generated_files/adc.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  2    0[COMMON] unsigned int 
  3814 ;; Registers used:
  3815 ;;		wreg
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3825 ;;Total ram usage:        2 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; This function calls:
  3828 ;;		Nothing
  3829 ;; This function is called by:
  3830 ;;		_main
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function _ADC_GetConversionResult
  3836  045A                     _ADC_GetConversionResult:	
  3837                           
  3838                           ;adc.c: 106: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3839                           
  3840                           ;incstack = 0
  3841                           ; Regs used in _ADC_GetConversionResult: [wreg]
  3842  045A  0021               	movlb	1	; select bank1
  3843  045B  081C               	movf	28,w	;volatile
  3844  045C  00F1               	movwf	?_ADC_GetConversionResult+1
  3845  045D  081B               	movf	27,w	;volatile
  3846  045E  00F0               	movwf	?_ADC_GetConversionResult
  3847  045F  0008               	return
  3848  0460                     __end_of_ADC_GetConversionResult:	
  3849  007E                     btemp	set	126	;btemp
  3850  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    14
    Data        8
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     37      47
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 8
		 -> main@buf(BANK0[8]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[4]), STR_3(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_atoi
    _printf->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _atoi->___wmul
    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0    3119
                                             14 BANK0     23    23      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                        _EUSART_Read
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                               _atoi
                             _printf
                            _strncmp
 ---------------------------------------------------------------------------------
 (1) _strncmp                                              7     2      5     518
                                              0 COMMON     7     2      5
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    1135
                                              0 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _atoi                                                 8     6      2     576
                                              6 COMMON     8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     3     2      1     196
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _EUSART_Read
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _WDT_Initialize
   _TMR0_HasOverflowOccured
   _atoi
     ___wmul
     _isdigit
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART_Write
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      2F       5       58.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Feb 25 06:51:17 2018

 __end_of_TMR0_HasOverflowOccured 0450                       __CFG_CP$OFF 0000                                l86 0476  
                              l79 0485               ___wmul@multiplicand 0072                   _timer0ReloadVal 004D  
                     __CFG_LVP$ON 0000                               l192 0527                               l370 0500  
                             l286 06EB                      __CFG_CPD$OFF 0000                               u635 0501  
                             u715 0571                               u645 0506                               u725 057B  
                             u735 0583                               u765 0539                               u695 0567  
                             u785 0548                               u795 054F                               u965 06A0  
                             _tmr 004E                      __CFG_BORV$LO 0000                               wreg 0009  
                    __CFG_IESO$ON 0000                      ?_EUSART_Read 0070                              l1403 0536  
                            l1501 05D6                              l1405 0542                              l1413 0557  
                            l1423 048D                              l1503 05CF                              l1345 04FA  
                            l1521 05FC                              l1513 05F1                              l1505 05DB  
                            l1409 054E                              l1523 0621                              l1365 04CD  
                            l1381 0570                              l1519 05F8                              l1391 058B  
                            l1529 0630                              l1561 068B                              l1545 066F  
                            l1625 0778                              l1387 0582                              l1379 0564  
                            l1571 06B2                              l1555 0685                              l1539 0656  
                            l1651 07BC                              l1619 0753                              l1485 05AB  
                            l1493 0590                              l1645 07A2                              l1567 06AA  
                            l1495 05CB                              l1663 07CD                              l1639 0790  
                            l1577 06B7                              l1489 05C2                              l1649 07B5  
                            l1657 07C8                              l1579 063A                              l1669 07E5  
                            l1599 0711                              STR_1 0819                              STR_2 0816  
                            STR_3 0812                              STR_4 080E                              u1010 06FA  
                            _LATA 010C                              _LATC 010E                              _TMR0 0015  
                            _WPUA 020C                              _WPUC 020E                      __CFG_WRT$OFF 0000  
                   __CFG_FCMEN$ON 0000                              _atoi 05CE                              _main 06EC  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            btemp 007E                     __CFG_BOREN$ON 0000                              start 0002  
                   __CFG_MCLRE$ON 0000                      main@channels 0041         __size_of_DATAEE_WriteByte 001D  
         __end_of_TMR0_Initialize 04C1                     __CFG_PLLEN$ON 0000                     ?_EUSART_Write 0070  
  __size_of_OSCILLATOR_Initialize 0005     __end_of_OSCILLATOR_Initialize 0455                             ?_atoi 0076  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                   __end_of___lwdiv 0590  
                 __end_of___lwmod 055C                             _RCREG 0199                             _RCSTA 019D  
                           _TRISA 008C                             _TRISC 008E                             _TXREG 019A  
                           _TXSTA 019E  __size_of_ADC_GetConversionResult 0006                   _DATAEE_ReadByte 049A  
                 __end_of_dpowers 080A                    _WDT_Initialize 0448                   __end_of_isdigit 04CF  
                           atoi@a 007B                             atoi@s 007D                             _putch 0455  
                           main@c 003F                             main@i 0044                 __end_of_ANALOG_IN 080E  
                           status 0003                             wtemp0 007E                   __end_of_strncmp 05CE  
                 __initialization 07F1                      __end_of_atoi 0635                      __end_of_main 07F1  
                  ??_EUSART_Write 0070                            ??_atoi 0078                            ??_main 002E  
          __end_of_WDT_Initialize 044C     __size_of_ADC_IsConversionDone 0007                            _ADCON0 009D  
                          _ADCON1 009E                            _ADRESH 009C                            _EEADRH 0192  
                          _ADRESL 009B                            _EEADRL 0191                            _EEDATH 0194  
                          _EEDATL 0193                            _EECON2 0196                            _ANSELA 018C  
                          ?_putch 0070                            _ANSELC 018E                            _OSCCON 0099  
__size_of_TMR0_HasOverflowOccured 0004                            _TMR0IF 005A                            _SPBRGH 019C  
                          _SPBRGL 019B                            _WDTCON 0097                    __CFG_PWRTE$OFF 0000  
                          ___wmul 04F8                    __CFG_STVREN$ON 0000                         ??___lwdiv 0074  
                       ??___lwmod 007C                  ?_TMR0_Initialize 0070                            _printf 0635  
         __end_of_DATAEE_ReadByte 04A6                         ??_isdigit 0070                   ?_WDT_Initialize 0070  
                       ??_strncmp 0075              __size_of_EUSART_Read 000A                 _SYSTEM_Initialize 04CF  
         __end_of__initialization 07FD                ?_SYSTEM_Initialize 0070      __size_of_ADC_StartConversion 0003  
                  __pcstackCOMMON 0070                      __pidataBANK0 047D               ??_SYSTEM_Initialize 0071  
                _DATAEE_WriteByte 0513                     __end_of_putch 045A           _ADC_GetConversionResult 045A  
                  _OPTION_REGbits 0095         __end_of_SYSTEM_Initialize 04E1                           ??_putch 0071  
                      __pbssBANK0 004E              __end_of_EUSART_Write 047D                        __pmaintext 06EC  
                         ?___wmul 0070                           _BAUDCON 019F                           _APFCON0 011D  
                         _APFCON1 011E                           ?_printf 0020           __size_of_ADC_Initialize 0008  
                ?_DATAEE_ReadByte 0070                           _OSCTUNE 0098           _TMR0_HasOverflowOccured 044C  
            DATAEE_WriteByte@bAdd 0071                         _ANALOG_IN 080A                   __size_of___wmul 001B  
                         ___lwdiv 055C                           ___lwmod 0530         ??_ADC_GetConversionResult 0072  
                         __ptext1 0590                           __ptext2 0635                           __ptext3 0455  
                         __ptext4 0475                           __ptext5 0530                           __ptext6 055C  
                         __ptext7 05CE                           __ptext8 04C1                           __ptext9 04F8  
                 __size_of_printf 00B7                           _dpowers 0800             _OSCILLATOR_Initialize 0450  
                         _isdigit 04C1          ??_PIN_MANAGER_Initialize 0070                           main@buf 002F  
                         main@cnt 0042        __size_of_SYSTEM_Initialize 0012                           _strncmp 0590  
            end_of_initialization 07FD                           init_ram 0460                           initloop 0461  
               _EUSART_Initialize 048F      __end_of_ADC_IsConversionDone 046D                ?_EUSART_Initialize 0070  
                       _RCSTAbits 019D                           printf@c 002D                           printf@f 0020  
             ??_EUSART_Initialize 0070                  ??_WDT_Initialize 0070                  __CFG_FOSC$INTOSC 0000  
           __size_of_EUSART_Write 0008               _ADC_StartConversion 0445         ??_TMR0_HasOverflowOccured 0070  
        __end_of_DATAEE_WriteByte 0530         __end_of_EUSART_Initialize 049A              ?_ADC_StartConversion 0070  
                  __end_of___wmul 0513                      _EUSART_Write 0475                    _ADC_Initialize 046D  
          ?_OSCILLATOR_Initialize 0070                    __end_of_printf 06EC               start_initialization 07F1  
        __size_of_TMR0_Initialize 000E   __size_of_PIN_MANAGER_Initialize 0017                     ??_EUSART_Read 0070  
                     putch@txData 0071               DATAEE_ReadByte@bAdd 0070             ??_ADC_StartConversion 0070  
                        ??___wmul 0074            __end_of_ADC_Initialize 0475                       __pdataBANK0 0045  
                        ??_printf 0024                         ___latbits 0002                     __pcstackBANK0 0020  
            _ADC_IsConversionDone 0466        __size_of_EUSART_Initialize 000B               __end_of_EUSART_Read 048F  
                       __pnvBANK0 004D                  ___lwdiv@dividend 0072            _PIN_MANAGER_Initialize 04E1  
               _ADC_SelectChannel 04A6                          ?___lwdiv 0070                          ?___lwmod 0078  
                 ?_ADC_Initialize 0070                ?_ADC_SelectChannel 0070                          ?_isdigit 0070  
             ??_ADC_SelectChannel 0070             ?_ADC_IsConversionDone 0070                  ___lwdiv@quotient 0075  
        __size_of_DATAEE_ReadByte 000C                          ?_strncmp 0070                    __size_of_putch 0005  
               ??_TMR0_Initialize 0070                    ___wmul@product 0074         __end_of_ADC_SelectChannel 04B3  
                        _PIR1bits 0011                         main@F3027 0045                        _ADCON0bits 009D  
               ___wmul@multiplier 0070          ADC_SelectChannel@channel 0071                        printf@flag 0029  
                      printf@prec 002A                         main@level 0037                         main@t_max 0040  
           DATAEE_WriteByte@bData 0070                       _EUSART_Read 0485                 ?_DATAEE_WriteByte 0070  
              ??_DATAEE_WriteByte 0071                        _EECON1bits 0195          ?_ADC_GetConversionResult 0070  
         ??_OSCILLATOR_Initialize 0070                  __size_of___lwdiv 0034                  __size_of___lwmod 002C  
                     _isdigit$683 0070            ??_ADC_IsConversionDone 0070                  __size_of_isdigit 000E  
                 ___lwdiv@divisor 0070                   ___lwdiv@counter 0077                          __ptext10 044C  
                        __ptext11 04CF                          __ptext20 049A                          __ptext12 0448  
                        __ptext21 0445                          __ptext13 04B3                          __ptext22 04A6  
                        __ptext14 04E1                          __ptext23 0466                          __ptext15 0450  
                        __ptext24 045A                          __ptext16 048F                          __ptext17 046D  
                        __ptext18 0485                          __ptext19 0513       DATAEE_WriteByte@GIEBitValue 0072  
                __size_of_strncmp 003E                     __size_of_atoi 0067                     __size_of_main 0105  
                      strncmp@len 0073                 ??_DATAEE_ReadByte 0070        __size_of_ADC_SelectChannel 000D  
                        atoi@sign 007A                         printf@val 002B                          main@mask 0043  
        ?_TMR0_HasOverflowOccured 0070                        _INTCONbits 000B                          isdigit@c 0071  
         __size_of_WDT_Initialize 0004       __end_of_ADC_StartConversion 0448                  ___lwmod@dividend 007A  
         ?_PIN_MANAGER_Initialize 0070   __end_of_ADC_GetConversionResult 0460                 __CFG_CLKOUTEN$OFF 0000  
                       strncmp@s1 0070                         strncmp@s2 0072                  ??_ADC_Initialize 0070  
                        printf@ap 0028                     __pstringtext1 0800                     __pstringtext2 080A  
                   __pstringtext3 080E                     __pstringtext4 0812                     __pstringtext5 0816  
                   __pstringtext6 0819                     __pstringtext7 0000                        _OPTION_REG 0095  
                 ___lwmod@divisor 0078                   _TMR0_Initialize 04B3                   ___lwmod@counter 007D  
              EUSART_Write@txData 0070    __end_of_PIN_MANAGER_Initialize 04F8  
